{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport LogBox from \"react-native-web/dist/exports/LogBox\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { auth, firebase } from \"../Firebase/Config\";\nimport { getAuth, onAuthStateChanged, createUserWithEmailAndPassword, sendEmailVerification, sendSignInLinkToEmail } from \"@firebase/auth\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { onSnapshot, getFirestore, collection, addDoc, query, where, getDocs, deleteDoc, doc, setDoc, getDoc, updateDoc, FieldValue, arrayUnion, orderBy, limit } from \"@firebase/firestore\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TeacherMainMenu = function TeacherMainMenu(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  LogBox.ignoreAllLogs();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    youcangetincomingpass = _useState2[0],\n    setYoucangetincomingpass = _useState2[1];\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    youcangetpassclass = _useState4[0],\n    setYoucangetpassclass = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    youcangetincomingpassclass = _useState6[0],\n    setYoucangetincomingpassclass = _useState6[1];\n  var _useState7 = useState(),\n    _useState8 = _slicedToArray(_useState7, 2),\n    endtime = _useState8[0],\n    setEndtime = _useState8[1];\n  var _useState9 = useState(),\n    _useState10 = _slicedToArray(_useState9, 2),\n    endlastclass = _useState10[0],\n    setEndlastclass = _useState10[1];\n  var _useState11 = useState(),\n    _useState12 = _slicedToArray(_useState11, 2),\n    thelastid = _useState12[0],\n    setthelastid = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    showspinner = _useState14[0],\n    setShowspinner = _useState14[1];\n  var _useState15 = useState(\"\"),\n    _useState16 = _slicedToArray(_useState15, 2),\n    coursename2 = _useState16[0],\n    setCoursename2 = _useState16[1];\n  var _useState17 = useState(),\n    _useState18 = _slicedToArray(_useState17, 2),\n    classiscurrent = _useState18[0],\n    setClassiscurrent = _useState18[1];\n  var _useState19 = useState(),\n    _useState20 = _slicedToArray(_useState19, 2),\n    nameofcurrentclass = _useState20[0],\n    setNameofcurrentclass = _useState20[1];\n  var _useState21 = useState(),\n    _useState22 = _slicedToArray(_useState21, 2),\n    idofcurrentclass = _useState22[0],\n    setIdofcurrentclass = _useState22[1];\n  var _useState23 = useState(),\n    _useState24 = _slicedToArray(_useState23, 2),\n    starttimeofcurrentclass = _useState24[0],\n    setStarttimeofcurrentclass = _useState24[1];\n  var _useState25 = useState(),\n    _useState26 = _slicedToArray(_useState25, 2),\n    getdatedotnow = _useState26[0],\n    setDatedotnow = _useState26[1];\n  var _useState27 = useState(),\n    _useState28 = _slicedToArray(_useState27, 2),\n    arrayforconsequences = _useState28[0],\n    setArrayforconsequences = _useState28[1];\n  var _useState29 = useState(),\n    _useState30 = _slicedToArray(_useState29, 2),\n    totalinlineforbathroomlocal = _useState30[0],\n    setTotalinlineforbathroomlocal = _useState30[1];\n  var _useState31 = useState(),\n    _useState32 = _slicedToArray(_useState31, 2),\n    id = _useState32[0],\n    setId = _useState32[1];\n  var _useState33 = useState(),\n    _useState34 = _slicedToArray(_useState33, 2),\n    school = _useState34[0],\n    setSchool = _useState34[1];\n  var _useState35 = useState(),\n    _useState36 = _slicedToArray(_useState35, 2),\n    state = _useState36[0],\n    setState = _useState36[1];\n  var _useState37 = useState(),\n    _useState38 = _slicedToArray(_useState37, 2),\n    town = _useState38[0],\n    setTown = _useState38[1];\n  var _useState39 = useState(),\n    _useState40 = _slicedToArray(_useState39, 2),\n    role = _useState40[0],\n    setRole = _useState40[1];\n  var _useState41 = useState(),\n    _useState42 = _slicedToArray(_useState41, 2),\n    teacheriscalled = _useState42[0],\n    setTeacheriscalled = _useState42[1];\n  var _useState43 = useState(),\n    _useState44 = _slicedToArray(_useState43, 2),\n    email = _useState44[0],\n    setEmail = _useState44[1];\n  var _useState45 = useState(),\n    _useState46 = _slicedToArray(_useState45, 2),\n    userdata = _useState46[0],\n    setUserdata = _useState46[1];\n  var _useState47 = useState(),\n    _useState48 = _slicedToArray(_useState47, 2),\n    totalinline2 = _useState48[0],\n    setTotalinline2 = _useState48[1];\n  var _route$params = route.params,\n    currentsessionid = _route$params.currentsessionid,\n    userinformation = _route$params.userinformation,\n    school2 = _route$params.school2,\n    state2 = _route$params.state2,\n    town2 = _route$params.town2,\n    role2 = _route$params.role2,\n    id2 = _route$params.id2,\n    teacheriscalled2 = _route$params.teacheriscalled2,\n    email2 = _route$params.email2,\n    bathroompasslimit = _route$params.bathroompasslimit,\n    drinkpasslimit = _route$params.drinkpasslimit,\n    ifnegativeplusminus = _route$params.ifnegativeplusminus,\n    nonbathroompasslimit = _route$params.nonbathroompasslimit,\n    exclusivephonepassmaxstudents = _route$params.exclusivephonepassmaxstudents,\n    exclusivephonepasstimelmit = _route$params.exclusivephonepasstimelmit,\n    lengthofclass = _route$params.lengthofclass,\n    classid = _route$params.classid,\n    coursename = _route$params.coursename,\n    section = _route$params.section,\n    location = _route$params.location,\n    teacherid = _route$params.teacherid,\n    starttime = _route$params.starttime,\n    lengthofclassesforacomputer = _route$params.lengthofclassesforacomputer,\n    inpenalty = _route$params.inpenalty,\n    stoptimepenalty = _route$params.stoptimepenalty,\n    starttimepenalty = _route$params.starttimepenalty,\n    totaltimepenalty = _route$params.totaltimepenalty,\n    alreadyused = _route$params.alreadyused,\n    teacher = _route$params.teacher,\n    Selectedclassdestination = _route$params.Selectedclassdestination,\n    currentlocation = _route$params.currentlocation,\n    locationdestination = _route$params.locationdestination,\n    firstname = _route$params.firstname,\n    lastname = _route$params.lastname,\n    ledby = _route$params.ledby,\n    grouptime = _route$params.grouptime,\n    drinkofwater = _route$params.drinkofwater,\n    exclusivetime = _route$params.exclusivetime,\n    donewithworkpass = _route$params.donewithworkpass,\n    bathroomtime = _route$params.bathroomtime,\n    nonbathroomtime = _route$params.nonbathroomtime,\n    bathroompassinuse = _route$params.bathroompassinuse,\n    totalinlineforbathroom = _route$params.totalinlineforbathroom,\n    lengthofclasses = _route$params.lengthofclasses,\n    endlastclasssubstitute = _route$params.endlastclasssubstitute,\n    sessionended = _route$params.sessionended,\n    phonepassduration = _route$params.phonepassduration,\n    overunder = _route$params.overunder,\n    drinkpassduration = _route$params.drinkpassduration,\n    bathroompassduration = _route$params.bathroompassduration,\n    otherpassduration = _route$params.otherpassduration,\n    maxstudentsphonepass = _route$params.maxstudentsphonepass,\n    donewithworkphonepass = _route$params.donewithworkphonepass,\n    consequenceid = _route$params.consequenceid,\n    sessionending = _route$params.sessionending,\n    maxstudentsbathroom = _route$params.maxstudentsbathroom,\n    classsessionbegun = _route$params.classsessionbegun,\n    linkedclass = _route$params.linkedclass;\n  console.log(drinkofwater, \" Drink of Water ,Main Menu \", id, \"this is the id\");\n  var getData = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var value = yield AsyncStorage.getItem('email').then(function (value) {\n          setEmail(value);\n        });\n        var value2 = yield AsyncStorage.getItem('id');\n        var value5 = yield AsyncStorage.getItem('town');\n        var value6 = yield AsyncStorage.getItem('school');\n        var value7 = yield AsyncStorage.getItem('state');\n        var value8 = yield AsyncStorage.getItem('teacheriscalled');\n        var value9 = yield AsyncStorage.getItem('role');\n        console.log(email, value2, value9, value5, value6, value7, value8, value9, \"This is the stored value\");\n      } catch (e) {\n      }\n    });\n    return function getData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    getData();\n  }, [id]);\n  useEffect(function () {\n    console.log(email, \"email was just set\");\n  }, [email]);\n  useEffect(function () {\n    if (typeof id2 != \"undefined\") {\n      setId(id2);\n      setSchool(school2);\n      setState(state2);\n      setTown(town2);\n      setRole(role2);\n      setTeacheriscalled(teacheriscalled2);\n      setEmail(email2);\n    }\n  }, [id2]);\n  useEffect(function () {\n    if (typeof id2 != \"undefined\") {\n      setId(id2);\n      setSchool(school2);\n      setState(state2);\n      setTown(town2);\n      setRole(role2);\n      setTeacheriscalled(teacheriscalled2);\n    }\n  }, [id2]);\n  var resetinfo = function resetinfo() {\n    if (typeof id != \"undefined\") {\n      var docRef = doc(firebase, \"users\", id);\n      var docData = getDoc(docRef).then(function (docSnap) {\n        setSchool(docSnap.data().school);\n        setTown(docSnap.data().town);\n        setState(docSnap.data().state);\n        setTeacheriscalled(docSnap.data().teacheriscalled);\n        setRole(docSnap.data().role);\n      });\n    } else {\n      var _auth = getAuth();\n      onAuthStateChanged(_auth, function (user) {\n        if (user) {\n          var uid = user.uid;\n          setId(uid);\n        } else {\n          navigation.navigate(\"SignIn\");\n        }\n      });\n    }\n  };\n  useEffect(function () {\n    setYoucangetpassclass(false);\n  }, [currentsessionid]);\n  function runthisfunction() {\n    return _runthisfunction.apply(this, arguments);\n  }\n  function _runthisfunction() {\n    _runthisfunction = _asyncToGenerator(function* () {\n      var q = query(collection(firebase, \"passes\"), where(\"classsessionid\", \"==\", currentsessionid), where(\"timeleftclass\", \"==\", 0), orderBy(\"placeinline\", \"asc\"));\n      var querySnapshot = yield getDocs(q).then(function (snapshot) {\n        var array = [];\n        snapshot.forEach(function (doc) {\n          array.push(doc.data());\n        });\n        setUserdata(array);\n      });\n    });\n    return _runthisfunction.apply(this, arguments);\n  }\n  ;\n  useEffect(function () {\n    if (typeof userdata != \"undefined\") {\n      setTotalinline2(userdata.length);\n    }\n  }, [userdata]);\n  useEffect(function () {\n    if (typeof totalinline2 != \"undefined\" && typeof classid != \"undefined\") {\n      makechange();\n    }\n  }, [totalinline2]);\n  var makechange = function makechange() {\n    console.log(\"Is this the last thing to get run?\");\n    updateDoc(doc(firebase, \"classesbeingtaught\", classid), {\n      totalinlineforbathroom: totalinline2\n    }).catch(function (error) {\n      console.log(error);\n      alert(error);\n    });\n  };\n  var rightnow = Date.now();\n  useEffect(function () {\n    if (sessionending < rightnow) {\n      setClassiscurrent(false);\n    } else if (sessionending > rightnow) {\n      setClassiscurrent(true);\n    } else {\n      null;\n    }\n  }, [sessionending]);\n  useEffect(function () {\n    if (typeof classsessionbegun != \"undefined\") {\n      setYoucangetpassclass(false);\n    }\n  }, [classsessionbegun]);\n  var signoutfunction = function signoutfunction() {\n    auth.signOut();\n  };\n  var deleteaccount = function deleteaccount() {\n    Alert.alert('Please be aware.', 'Your account with all of its associated records will be removed from the database at the end of the school session.', [{\n      text: 'Cancel',\n      onPress: function onPress() {\n        return console.log('Cancel Pressed');\n      },\n      style: 'cancel'\n    }, {\n      text: 'Delete Account',\n      onPress: function onPress() {\n        return console.log(\"delete this account!\");\n      }\n    }]);\n  };\n  useEffect(function () {\n    if (getdatedotnow > 0 && sessionending > 0) {\n      endsessionprematurely();\n    }\n  }, [getdatedotnow]);\n  var endsessionprematurely = function endsessionprematurely() {\n    console.log(sessionending, getdatedotnow, \"sessionending, getdatedotnow\", currentsessionid, \"currentsessionid\");\n    if (sessionending < getdatedotnow) {\n      console.log(sessionending, rightnow, \"sessionending,rightnow\");\n      setClassiscurrent(false);\n      updateDoc(doc(firebase, \"classsessions\", currentsessionid), {\n        status: \"Completed\"\n      }).catch(function (error) {\n        console.log(error);\n        alert(error);\n      });\n    } else {\n      setShowspinner(true);\n      Alert.alert('Please be aware.', 'This will end the current session.', [{\n        text: 'Cancel',\n        onPress: function onPress() {\n          return setShowspinner(false);\n        },\n        style: 'cancel'\n      }, {\n        text: 'End Session',\n        onPress: function onPress() {\n          return setEndtime(Date.now());\n        }\n      }]);\n    }\n  };\n  useEffect(function () {\n    console.log(sessionending, \"sessionending\");\n    if (currentsessionid) {\n      var array = [];\n      var q = query(collection(firebase, \"consequencephoneuse\"), where(\"sessionid\", \"==\", currentsessionid), where(\"stoptimepenalty\", \">\", endtime));\n      var querySnapshot = getDocs(q).then(function (snapshot) {\n        snapshot.forEach(function (docs) {\n          array.push({\n            id: docs.data().id,\n            starttime: docs.data().starttimepenalty,\n            studentid: docs.data().studentid\n          });\n        });\n        setArrayforconsequences(array);\n      });\n    }\n  }, [endtime]);\n  useEffect(function () {\n    if (typeof arrayforconsequences != \"undefined\") {\n      for (var i = 0; i < arrayforconsequences.length; i++) {\n        updateDoc(doc(firebase, \"consequencephoneuse\", arrayforconsequences[i].id), {\n          stoptimepenalty: endtime,\n          totaltimeinpenalty: endtime - arrayforconsequences[i].starttime,\n          penaltyminutes: (endtime - arrayforconsequences[i].starttime) / 60000\n        }).catch(function (error) {\n          console.log(error);\n          alert(error);\n        });\n      }\n    }\n  }, [arrayforconsequences]);\n  useEffect(function () {\n    if (coursename) {\n      getstatus();\n      runthisfunction();\n    }\n  }, [coursename]);\n  useEffect(function () {\n    if (currentsessionid) {\n      getstatus();\n      runthisfunction();\n    }\n  }, [currentsessionid]);\n  function getstatus() {\n    return _getstatus.apply(this, arguments);\n  }\n  function _getstatus() {\n    _getstatus = _asyncToGenerator(function* () {\n      var trythis = collection(firebase, \"classsessions\");\n      var q = query(trythis, where(\"teacherid\", \"==\", id), where(\"status\", \"==\", \"Happening Now\"), orderBy(\"classbeginnumber\", \"asc\"));\n      var querySnapshot = yield getDocs(q).then(function (snapshot) {\n        var array = [];\n        var truefalse = false;\n        var noww = Date.now();\n        console.log(\"Step 1, \", Date.now());\n        snapshot.forEach(function (doc) {\n          console.log(\"Step 2, \", doc.data(), doc.data().id, noww, doc.data().passesnolongeravailable, \"2 variables\");\n          if (noww > doc.data().passesnolongeravailable) {\n            array.push(doc.data().id);\n            var _truefalse = true;\n            console.log(doc.data().id, \"TRUE HAPPENED --- class should be over\", array);\n          } else if (noww < doc.data().passesnolongeravailable) {\n            console.log(\"CLASS IS HAPPENING!!!!!!!!!!!!!!!!\");\n            setClassiscurrent(true);\n            setNameofcurrentclass(doc.data().classname);\n            setIdofcurrentclass(doc.data().id);\n            setStarttimeofcurrentclass(doc.data().classbeginnumber);\n          } else {\n            console.log(\"no documents to update\");\n          }\n        });\n        setthelastid(array);\n        setEndlastclass(truefalse);\n      });\n    });\n    return _getstatus.apply(this, arguments);\n  }\n  ;\n  useEffect(function () {\n    if (thelastid) {\n      for (var i = 0; i < thelastid.length; i++) {\n        updateDoc(doc(firebase, \"classsessions\", thelastid[i]), {\n          status: \"Completed\"\n        }).catch(function (error) {\n          console.log(error);\n          alert(error);\n        });\n      }\n    }\n  }, [endlastclass]);\n  useEffect(function () {\n    console.log(\"ENDING CLASSr \", currentsessionid, thelastid, \"+ \", starttime, \"starttime\", endtime, \"endtime\");\n    var rightnow = Date.now();\n    if (endtime > starttime) {\n      setClassiscurrent(false);\n      updateDoc(doc(firebase, \"classsessions\", currentsessionid), {\n        passesnolongeravailable: endtime,\n        lengthofclass: Math.round((endtime - starttime) / 60000),\n        status: \"Completed\"\n      }).then(function (docRef) {\n        console.log(\"Value of an Existing Document Field has been updated\");\n        setShowspinner(false);\n      }).catch(function (error) {\n        console.log(error);\n        alert(error);\n      }), updateDoc(doc(firebase, \"classesbeingtaught\", classid), {\n        currentsessionends: endtime,\n        inusebathroompass: 0,\n        inuseexclusivephonepass: 0,\n        passesareavailable: false,\n        totalinlineforbathroom: 0,\n        totalinlineforexclusivephone: 0\n      }).catch(function (error) {\n        console.log(error);\n        alert(error);\n      }), setEndlastclass(true);\n    }\n  }, [endtime]);\n  useEffect(function () {\n    console.log(currentsessionid, \"get all consequences that need to be reset and update there time thaat passes are no longer accepted. \");\n  }, [endtime]);\n  useEffect(function () {\n    navigation.setOptions({\n      headerLeft: function headerLeft() {\n        return _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return console.log(\"hello\");\n          },\n          children: _jsx(Text, {\n            accessibilityLabel: \"Guest\",\n            style: styles.error\n          })\n        });\n      }\n    });\n  }, []);\n  useEffect(function () {\n    console.log(id, \"this is the id\");\n    if (typeof role === \"undefined\" || role === \"\" || typeof school === \"undefined\" || school === \"\" || typeof state === \"undefined\" || state === \"\" || typeof town === \"undefined\" || town === \"\" || typeof teacheriscalled === \"undefined\" || teacheriscalled === \"\" || typeof id === \"undefined\" || id === \"\") {\n      resetinfo();\n    } else {\n      console.log(\"Everything is cool!\");\n    }\n  }, []);\n  useEffect(function () {\n    console.log(id, \"This is the id\");\n    if (typeof role === \"undefined\" || typeof school === \"undefined\" || typeof state === \"undefined\" || typeof town === \"undefined\" || typeof teacheriscalled === \"undefined\" || teacheriscalled === \"\" || typeof id === \"undefined\") {\n      resetinfo();\n    } else {\n      console.log(\"Everything is cool!\");\n    }\n  }, [teacheriscalled]);\n  useEffect(function () {\n    console.log(email);\n    if (email2 != \"Mkrebs@rpsk12.org\" && email2 != \"Mjones@rpsk12.org\" && email2 != \"Nurse@rpsk12.org\") {\n      navigation.navigate(\"SignIn\");\n      alert(\"This App is in Development. Direct inquiries to mattkrebsemail@gmail.com.\");\n    } else {\n      console.log(\"let him in.\");\n    }\n  }, [teacheriscalled]);\n  useEffect(function () {\n    if (typeof coursename === \"undefined\") {\n      if (youcangetincomingpass) {\n        makeallincomingpassesavailable();\n      } else {\n        makeallincomingpassesunavailable();\n      }\n    }\n  }, [youcangetincomingpass]);\n  useEffect(function () {\n    if (coursename) {\n      if (youcangetpassclass) {\n        makepassesavailable();\n      } else {\n        makepassesunavailable();\n      }\n    }\n  }, [youcangetpassclass]);\n  useEffect(function () {\n    if (coursename) {\n      if (youcangetincomingpassclass) {\n        makeincomingpassesavailable();\n      } else {\n        makeincomingpassesunavailable();\n      }\n    }\n  }, [youcangetincomingpassclass]);\n  var makepassesavailable = function makepassesavailable() {\n    updateDoc(doc(firebase, \"classesbeingtaught\", classid), {\n      passesareavailable: true,\n      currentsessionid: currentsessionid,\n      sessionending: sessionending\n    }).catch(function (error) {\n      console.log(error);\n      alert(error);\n    });\n  };\n  var makeincomingpassesavailable = function makeincomingpassesavailable() {\n    updateDoc(doc(firebase, \"classesbeingtaught\", classid), {\n      acceptingincomingstudents: true,\n      currentsessionid: currentsessionid,\n      sessionending: sessionending\n    }).catch(function (error) {\n      console.log(error);\n      alert(error);\n    });\n  };\n  var makepassesunavailable = function makepassesunavailable() {\n    updateDoc(doc(firebase, \"classesbeingtaught\", classid), {\n      passesareavailable: false\n    }).catch(function (error) {\n      console.log(error);\n      alert(error);\n    });\n  };\n  var makeincomingpassesunavailable = function makeincomingpassesunavailable() {\n    updateDoc(doc(firebase, \"classesbeingtaught\", classid), {\n      acceptingincomingstudents: false\n    }).catch(function (error) {\n      console.log(error);\n      alert(error);\n    });\n  };\n  function makeallpassesunavailable() {\n    return _makeallpassesunavailable.apply(this, arguments);\n  }\n  function _makeallpassesunavailable() {\n    _makeallpassesunavailable = _asyncToGenerator(function* () {\n      var q = query(collection(firebase, \"classesbeingtaught\"), where(\"teacherid\", \"==\", id));\n      var querySnapshot = yield getDocs(q).then(function (snapshot) {\n        snapshot.forEach(function (docs) {\n          updateDoc(doc(firebase, \"classesbeingtaught\", docs.data().id), {\n            passesareavailable: false\n          }).catch(function (error) {\n            console.log(error);\n            alert(error);\n          });\n        });\n      });\n    });\n    return _makeallpassesunavailable.apply(this, arguments);\n  }\n  ;\n  function makeallincomingpassesunavailable() {\n    return _makeallincomingpassesunavailable.apply(this, arguments);\n  }\n  function _makeallincomingpassesunavailable() {\n    _makeallincomingpassesunavailable = _asyncToGenerator(function* () {\n      if (typeof id != \"undefined\") {\n        var q = query(collection(firebase, \"classesbeingtaught\"), where(\"teacherid\", \"==\", id));\n        var querySnapshot = yield getDocs(q).then(function (snapshot) {\n          snapshot.forEach(function (docs) {\n            updateDoc(doc(firebase, \"classesbeingtaught\", docs.data().id), {\n              acceptingincomingstudents: false\n            }).catch(function (error) {\n              console.log(error);\n              alert(error);\n            });\n          });\n        });\n      }\n    });\n    return _makeallincomingpassesunavailable.apply(this, arguments);\n  }\n  ;\n  function makeallpassesavailable() {\n    return _makeallpassesavailable.apply(this, arguments);\n  }\n  function _makeallpassesavailable() {\n    _makeallpassesavailable = _asyncToGenerator(function* () {\n      console.log(\"makeallpassesavailable was run\");\n      var q = query(collection(firebase, \"classesbeingtaught\"), where(\"teacherid\", \"==\", id));\n      var querySnapshot = yield getDocs(q).then(function (snapshot) {\n        snapshot.forEach(function (docs) {\n          updateDoc(doc(firebase, \"classesbeingtaught\", docs.data().id), {\n            passesareavailable: true,\n            currentsessionid: currentsessionid,\n            sessionending: sessionending\n          }).catch(function (error) {\n            console.log(error);\n            alert(error);\n          });\n        });\n      });\n    });\n    return _makeallpassesavailable.apply(this, arguments);\n  }\n  ;\n  function makeallincomingpassesavailable() {\n    return _makeallincomingpassesavailable.apply(this, arguments);\n  }\n  function _makeallincomingpassesavailable() {\n    _makeallincomingpassesavailable = _asyncToGenerator(function* () {\n      console.log(\"makeallincomingpassesavailable was run\");\n      var q = query(collection(firebase, \"classesbeingtaught\"), where(\"teacherid\", \"==\", id));\n      var querySnapshot = yield getDocs(q).then(function (snapshot) {\n        snapshot.forEach(function (docs) {\n          updateDoc(doc(firebase, \"classesbeingtaught\", docs.data().id), {\n            acceptingincomingstudents: true,\n            currentsessionid: currentsessionid,\n            sessionending: sessionending\n          }).catch(function (error) {\n            console.log(error);\n            alert(error);\n          });\n        });\n      });\n    });\n    return _makeallincomingpassesavailable.apply(this, arguments);\n  }\n  ;\n  return _jsxs(View, {\n    style: styles.container,\n    children: [coursename ? _jsx(View, {\n      children: _jsxs(Text, {\n        style: styles.paragraph9,\n        children: [\"Now Active: \", '\\n', coursename, \" - \", section, \" \"]\n      })\n    }) : _jsx(View, {\n      children: _jsx(Text, {\n        style: styles.paragraph9,\n        children: \"No Class is Active\"\n      })\n    }), _jsx(ScrollView, {\n      style: styles.scroll,\n      children: _jsxs(View, {\n        style: styles.centerscroll,\n        children: [_jsx(View, {\n          children: _jsxs(Text, {\n            style: styles.paragraph2,\n            children: [\"Daily Management \", '\\n']\n          })\n        }), _jsx(View, {\n          children: _jsx(ActivityIndicator, {\n            size: \"large\",\n            color: \"#FFF\",\n            animating: showspinner,\n            style: {\n              position: 'absolute',\n              alignItems: 'center',\n              justifyContent: 'center',\n              left: 0,\n              right: 0,\n              top: 0,\n              bottom: 0\n            }\n          })\n        }), coursename && classiscurrent && Date.now() < sessionending ? _jsx(View, {\n          style: styles.button,\n          children: _jsx(Text, {\n            style: styles.btext,\n            onPress: function onPress(e) {\n              return setDatedotnow(Date.now());\n            },\n            children: \"End Current Class Session\"\n          })\n        }) : coursename && (!classiscurrent || Date.now() > sessionending) ? _jsx(View, {\n          style: styles.button,\n          children: _jsx(Text, {\n            style: styles.btext,\n            onPress: function onPress() {\n              return navigation.navigate(\"ClassesTeacher\", {\n                idofcurrentclass: idofcurrentclass,\n                currentsessionid: currentsessionid,\n                sessionending: sessionending,\n                endlastclass: endlastclass,\n                userinformation: userinformation,\n                school: school,\n                state: state,\n                town: town,\n                role: role,\n                id: id,\n                bathroompasslimit: bathroompasslimit,\n                drinkpasslimit: drinkpasslimit,\n                ifnegativeplusminus: ifnegativeplusminus,\n                nonbathroompasslimit: nonbathroompasslimit,\n                exclusivephonepassmaxstudents: exclusivephonepassmaxstudents,\n                exclusivephonepasstimelmit: exclusivephonepasstimelmit,\n                lengthofclass: lengthofclass,\n                classiscurrent: classiscurrent,\n                nameofcurrentclass: nameofcurrentclass,\n                starttimeofcurrentclass: starttimeofcurrentclass,\n                classid: classid,\n                coursename: coursename,\n                section: section,\n                location: location,\n                teacherid: teacherid,\n                teacheriscalled: teacheriscalled,\n                email: email,\n                starttime: starttime,\n                lengthofclassesforacomputer: lengthofclassesforacomputer,\n                inpenalty: inpenalty,\n                stoptimepenalty: stoptimepenalty,\n                starttimepenalty: starttimepenalty,\n                totaltimepenalty: totaltimepenalty,\n                alreadyused: alreadyused,\n                teacher: teacher,\n                Selectedclassdestination: Selectedclassdestination,\n                currentlocation: currentlocation,\n                locationdestination: locationdestination,\n                firstname: firstname,\n                lastname: lastname,\n                ledby: ledby,\n                grouptime: grouptime,\n                drinkofwater: drinkofwater,\n                exclusivetime: exclusivetime,\n                donewithworkpass: donewithworkpass,\n                bathroomtime: bathroomtime,\n                nonbathroomtime: nonbathroomtime,\n                bathroompassinuse: bathroompassinuse,\n                totalinlineforbathroom: totalinlineforbathroom,\n                lengthofclasses: lengthofclasses,\n                endlastclasssubstitute: endlastclasssubstitute,\n                sessionended: sessionended,\n                thelastid: thelastid,\n                phonepassduration: phonepassduration,\n                drinkpassduration: drinkpassduration,\n                bathroompassduration: bathroompassduration,\n                overunder: overunder,\n                otherpassduration: otherpassduration,\n                maxstudentsphonepass: maxstudentsphonepass,\n                donewithworkphonepass: donewithworkphonepass,\n                consequenceid: consequenceid,\n                maxstudentsbathroom: maxstudentsbathroom,\n                linkedclass: linkedclass\n              });\n            },\n            children: \"Begin A New Class Session\"\n          })\n        }) : null, coursename ? _jsxs(Text, {\n          children: ['\\n', '\\n']\n        }) : null, coursename ? null : _jsx(View, {\n          style: styles.button,\n          children: _jsx(Text, {\n            style: styles.btext,\n            onPress: function onPress(e) {\n              return navigation.navigate(\"ClassesTeacher\", {\n                idofcurrentclass: idofcurrentclass,\n                currentsessionid: currentsessionid,\n                sessionending: sessionending,\n                endlastclass: endlastclass,\n                userinformation: userinformation,\n                school: school,\n                state: state,\n                town: town,\n                role: role,\n                id: id,\n                bathroompasslimit: bathroompasslimit,\n                drinkpasslimit: drinkpasslimit,\n                ifnegativeplusminus: ifnegativeplusminus,\n                nonbathroompasslimit: nonbathroompasslimit,\n                exclusivephonepassmaxstudents: exclusivephonepassmaxstudents,\n                exclusivephonepasstimelmit: exclusivephonepasstimelmit,\n                lengthofclass: lengthofclass,\n                classiscurrent: classiscurrent,\n                nameofcurrentclass: nameofcurrentclass,\n                starttimeofcurrentclass: starttimeofcurrentclass,\n                classid: classid,\n                coursename: coursename,\n                section: section,\n                location: location,\n                teacherid: teacherid,\n                teacheriscalled: teacheriscalled,\n                email: email,\n                starttime: starttime,\n                lengthofclassesforacomputer: lengthofclassesforacomputer,\n                inpenalty: inpenalty,\n                stoptimepenalty: stoptimepenalty,\n                starttimepenalty: starttimepenalty,\n                totaltimepenalty: totaltimepenalty,\n                alreadyused: alreadyused,\n                teacher: teacher,\n                Selectedclassdestination: Selectedclassdestination,\n                currentlocation: currentlocation,\n                locationdestination: locationdestination,\n                firstname: firstname,\n                lastname: lastname,\n                ledby: ledby,\n                grouptime: grouptime,\n                drinkofwater: drinkofwater,\n                exclusivetime: exclusivetime,\n                donewithworkpass: donewithworkpass,\n                bathroomtime: bathroomtime,\n                nonbathroomtime: nonbathroomtime,\n                bathroompassinuse: bathroompassinuse,\n                totalinlineforbathroom: totalinlineforbathroom,\n                lengthofclasses: lengthofclasses,\n                endlastclasssubstitute: endlastclasssubstitute,\n                sessionended: sessionended,\n                thelastid: thelastid,\n                phonepassduration: phonepassduration,\n                drinkpassduration: drinkpassduration,\n                bathroompassduration: bathroompassduration,\n                overunder: overunder,\n                otherpassduration: otherpassduration,\n                maxstudentsphonepass: maxstudentsphonepass,\n                donewithworkphonepass: donewithworkphonepass,\n                consequenceid: consequenceid,\n                maxstudentsbathroom: maxstudentsbathroom,\n                linkedclass: linkedclass\n              });\n            },\n            children: \"Select a Class\"\n          })\n        }), coursename ? null : _jsxs(Text, {\n          children: ['\\n', '\\n']\n        }), coursename ? _jsx(View, {\n          style: styles.button,\n          children: _jsx(Text, {\n            style: styles.btext,\n            onPress: function onPress() {\n              return navigation.navigate(\"Classsessions\", {\n                idofcurrentclass: idofcurrentclass,\n                currentsessionid: currentsessionid,\n                sessionending: sessionending,\n                endlastclass: endlastclass,\n                userinformation: userinformation,\n                school: school,\n                state: state,\n                town: town,\n                role: role,\n                id: id,\n                bathroompasslimit: bathroompasslimit,\n                drinkpasslimit: drinkpasslimit,\n                ifnegativeplusminus: ifnegativeplusminus,\n                nonbathroompasslimit: nonbathroompasslimit,\n                exclusivephonepassmaxstudents: exclusivephonepassmaxstudents,\n                exclusivephonepasstimelmit: exclusivephonepasstimelmit,\n                lengthofclass: lengthofclass,\n                classiscurrent: classiscurrent,\n                nameofcurrentclass: nameofcurrentclass,\n                starttimeofcurrentclass: starttimeofcurrentclass,\n                classid: classid,\n                coursename: coursename,\n                section: section,\n                location: location,\n                teacherid: teacherid,\n                teacheriscalled: teacheriscalled,\n                email: email,\n                starttime: starttime,\n                lengthofclassesforacomputer: lengthofclassesforacomputer,\n                inpenalty: inpenalty,\n                stoptimepenalty: stoptimepenalty,\n                starttimepenalty: starttimepenalty,\n                totaltimepenalty: totaltimepenalty,\n                alreadyused: alreadyused,\n                teacher: teacher,\n                Selectedclassdestination: Selectedclassdestination,\n                currentlocation: currentlocation,\n                locationdestination: locationdestination,\n                firstname: firstname,\n                lastname: lastname,\n                ledby: ledby,\n                grouptime: grouptime,\n                drinkofwater: drinkofwater,\n                exclusivetime: exclusivetime,\n                donewithworkpass: donewithworkpass,\n                bathroomtime: bathroomtime,\n                nonbathroomtime: nonbathroomtime,\n                bathroompassinuse: bathroompassinuse,\n                totalinlineforbathroom: totalinlineforbathroom,\n                lengthofclasses: lengthofclasses,\n                endlastclasssubstitute: endlastclasssubstitute,\n                sessionended: sessionended,\n                thelastid: thelastid,\n                phonepassduration: phonepassduration,\n                drinkpassduration: drinkpassduration,\n                bathroompassduration: bathroompassduration,\n                overunder: overunder,\n                otherpassduration: otherpassduration,\n                maxstudentsphonepass: maxstudentsphonepass,\n                donewithworkphonepass: donewithworkphonepass,\n                consequenceid: consequenceid,\n                maxstudentsbathroom: maxstudentsbathroom,\n                linkedclass: linkedclass\n              });\n            },\n            children: \"Sessions from this Class\"\n          })\n        }) : null, coursename ? _jsxs(Text, {\n          children: ['\\n', '\\n']\n        }) : null, coursename ? _jsx(View, {\n          style: styles.button,\n          children: _jsx(Text, {\n            style: styles.btext,\n            onPress: function onPress() {\n              return navigation.navigate(\"Studentsenrolled\", {\n                idofcurrentclass: idofcurrentclass,\n                currentsessionid: currentsessionid,\n                sessionending: sessionending,\n                endlastclass: endlastclass,\n                userinformation: userinformation,\n                school: school,\n                state: state,\n                town: town,\n                role: role,\n                id: id,\n                bathroompasslimit: bathroompasslimit,\n                drinkpasslimit: drinkpasslimit,\n                ifnegativeplusminus: ifnegativeplusminus,\n                nonbathroompasslimit: nonbathroompasslimit,\n                exclusivephonepassmaxstudents: exclusivephonepassmaxstudents,\n                exclusivephonepasstimelmit: exclusivephonepasstimelmit,\n                lengthofclass: lengthofclass,\n                classiscurrent: classiscurrent,\n                nameofcurrentclass: nameofcurrentclass,\n                starttimeofcurrentclass: starttimeofcurrentclass,\n                classid: classid,\n                coursename: coursename,\n                section: section,\n                location: location,\n                teacherid: teacherid,\n                teacheriscalled: teacheriscalled,\n                email: email,\n                starttime: starttime,\n                lengthofclassesforacomputer: lengthofclassesforacomputer,\n                inpenalty: inpenalty,\n                stoptimepenalty: stoptimepenalty,\n                starttimepenalty: starttimepenalty,\n                totaltimepenalty: totaltimepenalty,\n                alreadyused: alreadyused,\n                teacher: teacher,\n                Selectedclassdestination: Selectedclassdestination,\n                currentlocation: currentlocation,\n                locationdestination: locationdestination,\n                firstname: firstname,\n                lastname: lastname,\n                ledby: ledby,\n                grouptime: grouptime,\n                drinkofwater: drinkofwater,\n                exclusivetime: exclusivetime,\n                donewithworkpass: donewithworkpass,\n                bathroomtime: bathroomtime,\n                nonbathroomtime: nonbathroomtime,\n                bathroompassinuse: bathroompassinuse,\n                totalinlineforbathroom: totalinlineforbathroom,\n                lengthofclasses: lengthofclasses,\n                endlastclasssubstitute: endlastclasssubstitute,\n                sessionended: sessionended,\n                thelastid: thelastid,\n                phonepassduration: phonepassduration,\n                drinkpassduration: drinkpassduration,\n                bathroompassduration: bathroompassduration,\n                overunder: overunder,\n                otherpassduration: otherpassduration,\n                maxstudentsphonepass: maxstudentsphonepass,\n                donewithworkphonepass: donewithworkphonepass,\n                consequenceid: consequenceid,\n                maxstudentsbathroom: maxstudentsbathroom,\n                linkedclass: linkedclass\n              });\n            },\n            children: \"All Students From This Class\"\n          })\n        }) : null, coursename ? _jsxs(Text, {\n          children: ['\\n', '\\n']\n        }) : null, coursename ? _jsx(View, {\n          style: styles.button,\n          children: _jsx(Text, {\n            style: styles.btext,\n            onPress: function onPress() {\n              return navigation.navigate(\"Classpasses\", {\n                idofcurrentclass: idofcurrentclass,\n                currentsessionid: currentsessionid,\n                sessionending: sessionending,\n                endlastclass: endlastclass,\n                userinformation: userinformation,\n                school: school,\n                state: state,\n                town: town,\n                role: role,\n                id: id,\n                bathroompasslimit: bathroompasslimit,\n                drinkpasslimit: drinkpasslimit,\n                ifnegativeplusminus: ifnegativeplusminus,\n                nonbathroompasslimit: nonbathroompasslimit,\n                exclusivephonepassmaxstudents: exclusivephonepassmaxstudents,\n                exclusivephonepasstimelmit: exclusivephonepasstimelmit,\n                lengthofclass: lengthofclass,\n                classiscurrent: classiscurrent,\n                nameofcurrentclass: nameofcurrentclass,\n                starttimeofcurrentclass: starttimeofcurrentclass,\n                classid: classid,\n                coursename: coursename,\n                section: section,\n                location: location,\n                teacherid: teacherid,\n                teacheriscalled: teacheriscalled,\n                email: email,\n                starttime: starttime,\n                lengthofclassesforacomputer: lengthofclassesforacomputer,\n                inpenalty: inpenalty,\n                stoptimepenalty: stoptimepenalty,\n                starttimepenalty: starttimepenalty,\n                totaltimepenalty: totaltimepenalty,\n                alreadyused: alreadyused,\n                teacher: teacher,\n                Selectedclassdestination: Selectedclassdestination,\n                currentlocation: currentlocation,\n                locationdestination: locationdestination,\n                firstname: firstname,\n                lastname: lastname,\n                ledby: ledby,\n                grouptime: grouptime,\n                drinkofwater: drinkofwater,\n                exclusivetime: exclusivetime,\n                donewithworkpass: donewithworkpass,\n                bathroomtime: bathroomtime,\n                nonbathroomtime: nonbathroomtime,\n                bathroompassinuse: bathroompassinuse,\n                totalinlineforbathroom: totalinlineforbathroom,\n                lengthofclasses: lengthofclasses,\n                endlastclasssubstitute: endlastclasssubstitute,\n                sessionended: sessionended,\n                thelastid: thelastid,\n                phonepassduration: phonepassduration,\n                drinkpassduration: drinkpassduration,\n                bathroompassduration: bathroompassduration,\n                overunder: overunder,\n                otherpassduration: otherpassduration,\n                maxstudentsphonepass: maxstudentsphonepass,\n                donewithworkphonepass: donewithworkphonepass,\n                consequenceid: consequenceid,\n                maxstudentsbathroom: maxstudentsbathroom,\n                linkedclass: linkedclass\n              });\n            },\n            children: \"Passes From This Class\"\n          })\n        }) : null, coursename ? _jsxs(Text, {\n          children: ['\\n', '\\n']\n        }) : null, classiscurrent == true && currentsessionid && youcangetpassclass && coursename ? _jsx(View, {\n          style: styles.button,\n          children: _jsx(Text, {\n            style: styles.btext,\n            onPress: function onPress() {\n              return setYoucangetpassclass(false);\n            },\n            children: \"Turn Outgoing Passes OFF\"\n          })\n        }) : classiscurrent == true && currentsessionid && !youcangetpassclass && coursename ? _jsx(View, {\n          style: styles.button,\n          children: _jsx(Text, {\n            style: styles.btext,\n            onPress: function onPress() {\n              return setYoucangetpassclass(true);\n            },\n            children: \"Turn Outgoing Passes ON\"\n          })\n        }) : null, classiscurrent == true && currentsessionid && coursename ? _jsxs(Text, {\n          children: ['\\n', '\\n']\n        }) : null, currentsessionid && youcangetincomingpassclass && coursename ? _jsx(View, {\n          style: styles.button,\n          children: _jsx(Text, {\n            style: styles.btext,\n            onPress: function onPress() {\n              return setYoucangetincomingpassclass(false);\n            },\n            children: \"Turn Incoming Passes OFF\"\n          })\n        }) : currentsessionid && !youcangetincomingpassclass && coursename ? _jsx(View, {\n          style: styles.button,\n          children: _jsx(Text, {\n            style: styles.btext,\n            onPress: function onPress() {\n              return setYoucangetincomingpassclass(true);\n            },\n            children: \"Turn Incoming Passes ON\"\n          })\n        }) : null, currentsessionid && coursename ? _jsxs(Text, {\n          children: ['\\n', '\\n']\n        }) : null, classiscurrent == true && coursename ? _jsx(View, {\n          style: styles.button,\n          children: _jsx(Text, {\n            style: styles.btext,\n            onPress: function onPress() {\n              return navigation.navigate(\"Lineforbathroompassteacher\", {\n                idofcurrentclass: idofcurrentclass,\n                currentsessionid: currentsessionid,\n                sessionending: sessionending,\n                endlastclass: endlastclass,\n                userinformation: userinformation,\n                school: school,\n                state: state,\n                town: town,\n                role: role,\n                id: id,\n                bathroompasslimit: bathroompasslimit,\n                drinkpasslimit: drinkpasslimit,\n                ifnegativeplusminus: ifnegativeplusminus,\n                nonbathroompasslimit: nonbathroompasslimit,\n                exclusivephonepassmaxstudents: exclusivephonepassmaxstudents,\n                exclusivephonepasstimelmit: exclusivephonepasstimelmit,\n                lengthofclass: lengthofclass,\n                classiscurrent: classiscurrent,\n                nameofcurrentclass: nameofcurrentclass,\n                starttimeofcurrentclass: starttimeofcurrentclass,\n                classid: classid,\n                coursename: coursename,\n                section: section,\n                location: location,\n                teacherid: teacherid,\n                teacheriscalled: teacheriscalled,\n                email: email,\n                starttime: starttime,\n                lengthofclassesforacomputer: lengthofclassesforacomputer,\n                inpenalty: inpenalty,\n                stoptimepenalty: stoptimepenalty,\n                starttimepenalty: starttimepenalty,\n                totaltimepenalty: totaltimepenalty,\n                alreadyused: alreadyused,\n                teacher: teacher,\n                Selectedclassdestination: Selectedclassdestination,\n                currentlocation: currentlocation,\n                locationdestination: locationdestination,\n                firstname: firstname,\n                lastname: lastname,\n                ledby: ledby,\n                grouptime: grouptime,\n                drinkofwater: drinkofwater,\n                exclusivetime: exclusivetime,\n                donewithworkpass: donewithworkpass,\n                bathroomtime: bathroomtime,\n                nonbathroomtime: nonbathroomtime,\n                bathroompassinuse: bathroompassinuse,\n                totalinlineforbathroom: totalinlineforbathroom,\n                lengthofclasses: lengthofclasses,\n                endlastclasssubstitute: endlastclasssubstitute,\n                sessionended: sessionended,\n                thelastid: thelastid,\n                phonepassduration: phonepassduration,\n                drinkpassduration: drinkpassduration,\n                bathroompassduration: bathroompassduration,\n                overunder: overunder,\n                otherpassduration: otherpassduration,\n                maxstudentsphonepass: maxstudentsphonepass,\n                donewithworkphonepass: donewithworkphonepass,\n                consequenceid: consequenceid,\n                maxstudentsbathroom: maxstudentsbathroom,\n                linkedclass: linkedclass\n              });\n            },\n            children: \"See Students In Line For Bathroom \"\n          })\n        }) : _jsx(View, {}), classiscurrent == true && coursename ? _jsxs(Text, {\n          children: ['\\n', '\\n']\n        }) : null, _jsx(View, {\n          children: _jsx(Text, {\n            style: styles.paragraph2,\n            children: \" ___________________ \"\n          })\n        }), _jsx(View, {\n          children: _jsxs(Text, {\n            style: styles.paragraph2,\n            children: [\"Set-Up\", '\\n']\n          })\n        }), _jsx(View, {\n          style: styles.button,\n          children: _jsx(Text, {\n            style: styles.btext,\n            onPress: function onPress() {\n              return navigation.navigate(\"RegisterClasses\", {\n                idofcurrentclass: idofcurrentclass,\n                currentsessionid: currentsessionid,\n                sessionending: sessionending,\n                endlastclass: endlastclass,\n                userinformation: userinformation,\n                school: school,\n                state: state,\n                town: town,\n                role: role,\n                id: id,\n                bathroompasslimit: bathroompasslimit,\n                drinkpasslimit: drinkpasslimit,\n                ifnegativeplusminus: ifnegativeplusminus,\n                nonbathroompasslimit: nonbathroompasslimit,\n                exclusivephonepassmaxstudents: exclusivephonepassmaxstudents,\n                exclusivephonepasstimelmit: exclusivephonepasstimelmit,\n                lengthofclass: lengthofclass,\n                classiscurrent: classiscurrent,\n                nameofcurrentclass: nameofcurrentclass,\n                starttimeofcurrentclass: starttimeofcurrentclass,\n                classid: classid,\n                coursename: coursename,\n                section: section,\n                location: location,\n                teacherid: teacherid,\n                teacheriscalled: teacheriscalled,\n                email: email,\n                starttime: starttime,\n                lengthofclassesforacomputer: lengthofclassesforacomputer,\n                inpenalty: inpenalty,\n                stoptimepenalty: stoptimepenalty,\n                starttimepenalty: starttimepenalty,\n                totaltimepenalty: totaltimepenalty,\n                alreadyused: alreadyused,\n                teacher: teacher,\n                Selectedclassdestination: Selectedclassdestination,\n                currentlocation: currentlocation,\n                locationdestination: locationdestination,\n                firstname: firstname,\n                lastname: lastname,\n                ledby: ledby,\n                grouptime: grouptime,\n                drinkofwater: drinkofwater,\n                exclusivetime: exclusivetime,\n                donewithworkpass: donewithworkpass,\n                bathroomtime: bathroomtime,\n                nonbathroomtime: nonbathroomtime,\n                bathroompassinuse: bathroompassinuse,\n                totalinlineforbathroom: totalinlineforbathroom,\n                lengthofclasses: lengthofclasses,\n                endlastclasssubstitute: endlastclasssubstitute,\n                sessionended: sessionended,\n                thelastid: thelastid,\n                phonepassduration: phonepassduration,\n                drinkpassduration: drinkpassduration,\n                bathroompassduration: bathroompassduration,\n                overunder: overunder,\n                otherpassduration: otherpassduration,\n                maxstudentsphonepass: maxstudentsphonepass,\n                donewithworkphonepass: donewithworkphonepass,\n                consequenceid: consequenceid,\n                maxstudentsbathroom: maxstudentsbathroom,\n                linkedclass: linkedclass\n              });\n            },\n            children: \"Create A Class\"\n          })\n        }), _jsxs(Text, {\n          children: ['\\n', \" \", '\\n']\n        }), coursename ? _jsx(View, {\n          style: styles.button,\n          children: _jsx(Text, {\n            style: styles.btext,\n            onPress: function onPress() {\n              return navigation.navigate(\"Studentsawaitingconfirmation\", {\n                idofcurrentclass: idofcurrentclass,\n                currentsessionid: currentsessionid,\n                sessionending: sessionending,\n                endlastclass: endlastclass,\n                userinformation: userinformation,\n                school: school,\n                state: state,\n                town: town,\n                role: role,\n                id: id,\n                bathroompasslimit: bathroompasslimit,\n                ifnegativeplusminus: ifnegativeplusminus,\n                nonbathroompasslimit: nonbathroompasslimit,\n                drinkpasslimit: drinkpasslimit,\n                exclusivephonepassmaxstudents: exclusivephonepassmaxstudents,\n                exclusivephonepasstimelmit: exclusivephonepasstimelmit,\n                lengthofclass: lengthofclass,\n                classiscurrent: classiscurrent,\n                nameofcurrentclass: nameofcurrentclass,\n                starttimeofcurrentclass: starttimeofcurrentclass,\n                classid: classid,\n                coursename: coursename,\n                section: section,\n                location: location,\n                teacherid: teacherid,\n                teacheriscalled: teacheriscalled,\n                email: email,\n                starttime: starttime,\n                lengthofclassesforacomputer: lengthofclassesforacomputer,\n                inpenalty: inpenalty,\n                stoptimepenalty: stoptimepenalty,\n                starttimepenalty: starttimepenalty,\n                totaltimepenalty: totaltimepenalty,\n                alreadyused: alreadyused,\n                teacher: teacher,\n                Selectedclassdestination: Selectedclassdestination,\n                currentlocation: currentlocation,\n                locationdestination: locationdestination,\n                firstname: firstname,\n                lastname: lastname,\n                ledby: ledby,\n                grouptime: grouptime,\n                drinkofwater: drinkofwater,\n                exclusivetime: exclusivetime,\n                donewithworkpass: donewithworkpass,\n                bathroomtime: bathroomtime,\n                nonbathroomtime: nonbathroomtime,\n                bathroompassinuse: bathroompassinuse,\n                totalinlineforbathroom: totalinlineforbathroom,\n                lengthofclasses: lengthofclasses,\n                endlastclasssubstitute: endlastclasssubstitute,\n                sessionended: sessionended,\n                thelastid: thelastid,\n                phonepassduration: phonepassduration,\n                drinkpassduration: drinkpassduration,\n                bathroompassduration: bathroompassduration,\n                overunder: overunder,\n                otherpassduration: otherpassduration,\n                maxstudentsphonepass: maxstudentsphonepass,\n                donewithworkphonepass: donewithworkphonepass,\n                consequenceid: consequenceid,\n                maxstudentsbathroom: maxstudentsbathroom,\n                linkedclass: linkedclass\n              });\n            },\n            children: \"Admit Students into 'Active' Class\"\n          })\n        }) : null, coursename ? _jsxs(Text, {\n          children: ['\\n', \" \", '\\n']\n        }) : null, coursename ? _jsx(View, {\n          style: styles.button,\n          children: _jsx(Text, {\n            style: styles.btext,\n            onPress: function onPress() {\n              return navigation.navigate(\"Studentsnotenrolled\", {\n                idofcurrentclass: idofcurrentclass,\n                currentsessionid: currentsessionid,\n                sessionending: sessionending,\n                endlastclass: endlastclass,\n                userinformation: userinformation,\n                school: school,\n                state: state,\n                town: town,\n                role: role,\n                id: id,\n                bathroompasslimit: bathroompasslimit,\n                ifnegativeplusminus: ifnegativeplusminus,\n                nonbathroompasslimit: nonbathroompasslimit,\n                drinkpasslimit: drinkpasslimit,\n                exclusivephonepassmaxstudents: exclusivephonepassmaxstudents,\n                exclusivephonepasstimelmit: exclusivephonepasstimelmit,\n                lengthofclass: lengthofclass,\n                classiscurrent: classiscurrent,\n                nameofcurrentclass: nameofcurrentclass,\n                starttimeofcurrentclass: starttimeofcurrentclass,\n                classid: classid,\n                coursename: coursename,\n                section: section,\n                location: location,\n                teacherid: teacherid,\n                teacheriscalled: teacheriscalled,\n                email: email,\n                starttime: starttime,\n                lengthofclassesforacomputer: lengthofclassesforacomputer,\n                inpenalty: inpenalty,\n                stoptimepenalty: stoptimepenalty,\n                starttimepenalty: starttimepenalty,\n                totaltimepenalty: totaltimepenalty,\n                alreadyused: alreadyused,\n                teacher: teacher,\n                Selectedclassdestination: Selectedclassdestination,\n                currentlocation: currentlocation,\n                locationdestination: locationdestination,\n                firstname: firstname,\n                lastname: lastname,\n                ledby: ledby,\n                grouptime: grouptime,\n                drinkofwater: drinkofwater,\n                exclusivetime: exclusivetime,\n                donewithworkpass: donewithworkpass,\n                bathroomtime: bathroomtime,\n                nonbathroomtime: nonbathroomtime,\n                bathroompassinuse: bathroompassinuse,\n                totalinlineforbathroom: totalinlineforbathroom,\n                lengthofclasses: lengthofclasses,\n                endlastclasssubstitute: endlastclasssubstitute,\n                sessionended: sessionended,\n                thelastid: thelastid,\n                phonepassduration: phonepassduration,\n                drinkpassduration: drinkpassduration,\n                bathroompassduration: bathroompassduration,\n                overunder: overunder,\n                otherpassduration: otherpassduration,\n                maxstudentsphonepass: maxstudentsphonepass,\n                donewithworkphonepass: donewithworkphonepass,\n                consequenceid: consequenceid,\n                maxstudentsbathroom: maxstudentsbathroom,\n                linkedclass: linkedclass\n              });\n            },\n            children: \"Students Not In This Class\"\n          })\n        }) : null, coursename ? _jsxs(Text, {\n          children: ['\\n', \" \", '\\n']\n        }) : null, coursename ? _jsx(View, {\n          style: styles.button,\n          children: _jsx(Text, {\n            style: styles.btext,\n            onPress: function onPress() {\n              return navigation.navigate(\"QuickSignUp\", {\n                idofcurrentclass: idofcurrentclass,\n                currentsessionid: currentsessionid,\n                sessionending: sessionending,\n                endlastclass: endlastclass,\n                userinformation: userinformation,\n                school: school,\n                state: state,\n                town: town,\n                role: role,\n                id: id,\n                bathroompasslimit: bathroompasslimit,\n                ifnegativeplusminus: ifnegativeplusminus,\n                nonbathroompasslimit: nonbathroompasslimit,\n                drinkpasslimit: drinkpasslimit,\n                exclusivephonepassmaxstudents: exclusivephonepassmaxstudents,\n                exclusivephonepasstimelmit: exclusivephonepasstimelmit,\n                lengthofclass: lengthofclass,\n                classiscurrent: classiscurrent,\n                nameofcurrentclass: nameofcurrentclass,\n                starttimeofcurrentclass: starttimeofcurrentclass,\n                classid: classid,\n                coursename: coursename,\n                section: section,\n                location: location,\n                teacherid: teacherid,\n                teacheriscalled: teacheriscalled,\n                email: email,\n                starttime: starttime,\n                lengthofclassesforacomputer: lengthofclassesforacomputer,\n                inpenalty: inpenalty,\n                stoptimepenalty: stoptimepenalty,\n                starttimepenalty: starttimepenalty,\n                totaltimepenalty: totaltimepenalty,\n                alreadyused: alreadyused,\n                teacher: teacher,\n                Selectedclassdestination: Selectedclassdestination,\n                currentlocation: currentlocation,\n                locationdestination: locationdestination,\n                firstname: firstname,\n                lastname: lastname,\n                ledby: ledby,\n                grouptime: grouptime,\n                drinkofwater: drinkofwater,\n                exclusivetime: exclusivetime,\n                donewithworkpass: donewithworkpass,\n                bathroomtime: bathroomtime,\n                nonbathroomtime: nonbathroomtime,\n                bathroompassinuse: bathroompassinuse,\n                totalinlineforbathroom: totalinlineforbathroom,\n                lengthofclasses: lengthofclasses,\n                endlastclasssubstitute: endlastclasssubstitute,\n                sessionended: sessionended,\n                thelastid: thelastid,\n                phonepassduration: phonepassduration,\n                drinkpassduration: drinkpassduration,\n                bathroompassduration: bathroompassduration,\n                overunder: overunder,\n                otherpassduration: otherpassduration,\n                maxstudentsphonepass: maxstudentsphonepass,\n                donewithworkphonepass: donewithworkphonepass,\n                consequenceid: consequenceid,\n                maxstudentsbathroom: maxstudentsbathroom,\n                linkedclass: linkedclass\n              });\n            },\n            children: \"Sign Up Phoneless Student\"\n          })\n        }) : null, coursename ? _jsxs(Text, {\n          children: ['\\n', \" \", '\\n']\n        }) : null, coursename ? _jsx(View, {\n          style: styles.button,\n          children: _jsx(Text, {\n            style: styles.btext,\n            onPress: function onPress() {\n              return navigation.navigate(\"Addconsequence\", {\n                idofcurrentclass: idofcurrentclass,\n                currentsessionid: currentsessionid,\n                sessionending: sessionending,\n                endlastclass: endlastclass,\n                userinformation: userinformation,\n                school: school,\n                state: state,\n                town: town,\n                role: role,\n                id: id,\n                bathroompasslimit: bathroompasslimit,\n                ifnegativeplusminus: ifnegativeplusminus,\n                nonbathroompasslimit: nonbathroompasslimit,\n                drinkpasslimit: drinkpasslimit,\n                exclusivephonepassmaxstudents: exclusivephonepassmaxstudents,\n                exclusivephonepasstimelmit: exclusivephonepasstimelmit,\n                lengthofclass: lengthofclass,\n                classiscurrent: classiscurrent,\n                nameofcurrentclass: nameofcurrentclass,\n                starttimeofcurrentclass: starttimeofcurrentclass,\n                classid: classid,\n                coursename: coursename,\n                section: section,\n                location: location,\n                teacherid: teacherid,\n                teacheriscalled: teacheriscalled,\n                email: email,\n                starttime: starttime,\n                lengthofclassesforacomputer: lengthofclassesforacomputer,\n                inpenalty: inpenalty,\n                stoptimepenalty: stoptimepenalty,\n                starttimepenalty: starttimepenalty,\n                totaltimepenalty: totaltimepenalty,\n                alreadyused: alreadyused,\n                teacher: teacher,\n                Selectedclassdestination: Selectedclassdestination,\n                currentlocation: currentlocation,\n                locationdestination: locationdestination,\n                firstname: firstname,\n                lastname: lastname,\n                ledby: ledby,\n                grouptime: grouptime,\n                drinkofwater: drinkofwater,\n                exclusivetime: exclusivetime,\n                donewithworkpass: donewithworkpass,\n                bathroomtime: bathroomtime,\n                nonbathroomtime: nonbathroomtime,\n                bathroompassinuse: bathroompassinuse,\n                totalinlineforbathroom: totalinlineforbathroom,\n                lengthofclasses: lengthofclasses,\n                endlastclasssubstitute: endlastclasssubstitute,\n                sessionended: sessionended,\n                thelastid: thelastid,\n                phonepassduration: phonepassduration,\n                drinkpassduration: drinkpassduration,\n                bathroompassduration: bathroompassduration,\n                overunder: overunder,\n                otherpassduration: otherpassduration,\n                maxstudentsphonepass: maxstudentsphonepass,\n                donewithworkphonepass: donewithworkphonepass,\n                consequenceid: consequenceid,\n                maxstudentsbathroom: maxstudentsbathroom,\n                linkedclass: linkedclass\n              });\n            },\n            children: \"Behaviors To Address\"\n          })\n        }) : null, coursename ? _jsxs(Text, {\n          children: ['\\n', \" \", '\\n']\n        }) : null, coursename && classiscurrent && Date.now() < sessionending ? _jsx(View, {\n          style: styles.button,\n          children: _jsx(Text, {\n            style: styles.btext,\n            onPress: function onPress() {\n              return navigation.navigate(\"Settingsteacher\", {\n                idofcurrentclass: idofcurrentclass,\n                currentsessionid: currentsessionid,\n                sessionending: sessionending,\n                endlastclass: endlastclass,\n                userinformation: userinformation,\n                school: school,\n                state: state,\n                town: town,\n                role: role,\n                id: id,\n                bathroompasslimit: bathroompasslimit,\n                drinkpasslimit: drinkpasslimit,\n                ifnegativeplusminus: ifnegativeplusminus,\n                nonbathroompasslimit: nonbathroompasslimit,\n                exclusivephonepassmaxstudents: exclusivephonepassmaxstudents,\n                exclusivephonepasstimelmit: exclusivephonepasstimelmit,\n                lengthofclass: lengthofclass,\n                classiscurrent: classiscurrent,\n                nameofcurrentclass: nameofcurrentclass,\n                starttimeofcurrentclass: starttimeofcurrentclass,\n                classid: classid,\n                coursename: coursename,\n                section: section,\n                location: location,\n                teacherid: teacherid,\n                teacheriscalled: teacheriscalled,\n                email: email,\n                starttime: starttime,\n                lengthofclassesforacomputer: lengthofclassesforacomputer,\n                inpenalty: inpenalty,\n                stoptimepenalty: stoptimepenalty,\n                starttimepenalty: starttimepenalty,\n                totaltimepenalty: totaltimepenalty,\n                alreadyused: alreadyused,\n                teacher: teacher,\n                Selectedclassdestination: Selectedclassdestination,\n                currentlocation: currentlocation,\n                locationdestination: locationdestination,\n                firstname: firstname,\n                lastname: lastname,\n                ledby: ledby,\n                grouptime: grouptime,\n                drinkofwater: drinkofwater,\n                exclusivetime: exclusivetime,\n                donewithworkpass: donewithworkpass,\n                bathroomtime: bathroomtime,\n                nonbathroomtime: nonbathroomtime,\n                bathroompassinuse: bathroompassinuse,\n                totalinlineforbathroom: totalinlineforbathroom,\n                lengthofclasses: lengthofclasses,\n                endlastclasssubstitute: endlastclasssubstitute,\n                sessionended: sessionended,\n                thelastid: thelastid,\n                phonepassduration: phonepassduration,\n                drinkpassduration: drinkpassduration,\n                bathroompassduration: bathroompassduration,\n                overunder: overunder,\n                otherpassduration: otherpassduration,\n                maxstudentsphonepass: maxstudentsphonepass,\n                donewithworkphonepass: donewithworkphonepass,\n                consequenceid: consequenceid,\n                maxstudentsbathroom: maxstudentsbathroom,\n                linkedclass: linkedclass\n              });\n            },\n            children: \"Settings for the 'Active' Class\"\n          })\n        }) : _jsx(View, {\n          style: styles.button,\n          children: _jsx(Text, {\n            style: styles.btext,\n            onPress: function onPress() {\n              return navigation.navigate(\"Settingsteacher\", {\n                idofcurrentclass: idofcurrentclass,\n                currentsessionid: currentsessionid,\n                sessionending: sessionending,\n                endlastclass: endlastclass,\n                userinformation: userinformation,\n                school: school,\n                state: state,\n                town: town,\n                role: role,\n                id: id,\n                bathroompasslimit: bathroompasslimit,\n                ifnegativeplusminus: ifnegativeplusminus,\n                nonbathroompasslimit: nonbathroompasslimit,\n                drinkpasslimit: drinkpasslimit,\n                exclusivephonepassmaxstudents: exclusivephonepassmaxstudents,\n                exclusivephonepasstimelmit: exclusivephonepasstimelmit,\n                lengthofclass: lengthofclass,\n                classiscurrent: classiscurrent,\n                nameofcurrentclass: nameofcurrentclass,\n                starttimeofcurrentclass: starttimeofcurrentclass,\n                classid: classid,\n                coursename: coursename,\n                section: section,\n                location: location,\n                teacherid: teacherid,\n                teacheriscalled: teacheriscalled,\n                email: email,\n                starttime: starttime,\n                lengthofclassesforacomputer: lengthofclassesforacomputer,\n                inpenalty: inpenalty,\n                stoptimepenalty: stoptimepenalty,\n                starttimepenalty: starttimepenalty,\n                totaltimepenalty: totaltimepenalty,\n                alreadyused: alreadyused,\n                teacher: teacher,\n                Selectedclassdestination: Selectedclassdestination,\n                currentlocation: currentlocation,\n                locationdestination: locationdestination,\n                firstname: firstname,\n                lastname: lastname,\n                ledby: ledby,\n                grouptime: grouptime,\n                drinkofwater: drinkofwater,\n                exclusivetime: exclusivetime,\n                donewithworkpass: donewithworkpass,\n                bathroomtime: bathroomtime,\n                nonbathroomtime: nonbathroomtime,\n                bathroompassinuse: bathroompassinuse,\n                totalinlineforbathroom: totalinlineforbathroom,\n                lengthofclasses: lengthofclasses,\n                endlastclasssubstitute: endlastclasssubstitute,\n                sessionended: sessionended,\n                thelastid: thelastid,\n                phonepassduration: phonepassduration,\n                drinkpassduration: drinkpassduration,\n                bathroompassduration: bathroompassduration,\n                overunder: overunder,\n                otherpassduration: otherpassduration,\n                maxstudentsphonepass: maxstudentsphonepass,\n                donewithworkphonepass: donewithworkphonepass,\n                consequenceid: consequenceid,\n                maxstudentsbathroom: maxstudentsbathroom,\n                linkedclass: linkedclass\n              });\n            },\n            children: \"Settings\"\n          })\n        }), _jsxs(Text, {\n          children: ['\\n', \" \", '\\n']\n        }), _jsx(View, {\n          style: styles.button,\n          children: _jsx(Text, {\n            style: styles.btext,\n            onPress: function onPress() {\n              return navigation.navigate(\"Definitions\", {\n                idofcurrentclass: idofcurrentclass,\n                currentsessionid: currentsessionid,\n                sessionending: sessionending,\n                endlastclass: endlastclass,\n                userinformation: userinformation,\n                school: school,\n                state: state,\n                town: town,\n                role: role,\n                id: id,\n                bathroompasslimit: bathroompasslimit,\n                ifnegativeplusminus: ifnegativeplusminus,\n                nonbathroompasslimit: nonbathroompasslimit,\n                drinkpasslimit: drinkpasslimit,\n                exclusivephonepassmaxstudents: exclusivephonepassmaxstudents,\n                exclusivephonepasstimelmit: exclusivephonepasstimelmit,\n                lengthofclass: lengthofclass,\n                classiscurrent: classiscurrent,\n                nameofcurrentclass: nameofcurrentclass,\n                starttimeofcurrentclass: starttimeofcurrentclass,\n                classid: classid,\n                coursename: coursename,\n                section: section,\n                location: location,\n                teacherid: teacherid,\n                teacheriscalled: teacheriscalled,\n                email: email,\n                starttime: starttime,\n                lengthofclassesforacomputer: lengthofclassesforacomputer,\n                inpenalty: inpenalty,\n                stoptimepenalty: stoptimepenalty,\n                starttimepenalty: starttimepenalty,\n                totaltimepenalty: totaltimepenalty,\n                alreadyused: alreadyused,\n                teacher: teacher,\n                Selectedclassdestination: Selectedclassdestination,\n                currentlocation: currentlocation,\n                locationdestination: locationdestination,\n                firstname: firstname,\n                lastname: lastname,\n                ledby: ledby,\n                grouptime: grouptime,\n                exclusivetime: exclusivetime,\n                drinkofwater: drinkofwater,\n                donewithworkpass: donewithworkpass,\n                bathroomtime: bathroomtime,\n                nonbathroomtime: nonbathroomtime,\n                bathroompassinuse: bathroompassinuse,\n                totalinlineforbathroom: totalinlineforbathroom,\n                lengthofclasses: lengthofclasses,\n                endlastclasssubstitute: endlastclasssubstitute,\n                sessionended: sessionended,\n                thelastid: thelastid,\n                drinkpassduration: drinkpassduration,\n                phonepassduration: phonepassduration,\n                bathroompassduration: bathroompassduration,\n                overunder: overunder,\n                otherpassduration: otherpassduration,\n                maxstudentsphonepass: maxstudentsphonepass,\n                donewithworkphonepass: donewithworkphonepass,\n                consequenceid: consequenceid,\n                maxstudentsbathroom: maxstudentsbathroom,\n                linkedclass: linkedclass\n              });\n            },\n            children: \"Definitions/Explanations\"\n          })\n        }), _jsxs(Text, {\n          children: ['\\n', \" \", '\\n']\n        }), _jsx(View, {\n          style: styles.button,\n          children: _jsx(Text, {\n            style: styles.btext,\n            onPress: function onPress() {\n              return navigation.navigate(\"QRCodes\", {\n                idofcurrentclass: idofcurrentclass,\n                currentsessionid: currentsessionid,\n                sessionending: sessionending,\n                endlastclass: endlastclass,\n                userinformation: userinformation,\n                school: school,\n                state: state,\n                town: town,\n                role: role,\n                id: id,\n                bathroompasslimit: bathroompasslimit,\n                ifnegativeplusminus: ifnegativeplusminus,\n                nonbathroompasslimit: nonbathroompasslimit,\n                drinkpasslimit: drinkpasslimit,\n                exclusivephonepassmaxstudents: exclusivephonepassmaxstudents,\n                exclusivephonepasstimelmit: exclusivephonepasstimelmit,\n                lengthofclass: lengthofclass,\n                classiscurrent: classiscurrent,\n                nameofcurrentclass: nameofcurrentclass,\n                starttimeofcurrentclass: starttimeofcurrentclass,\n                classid: classid,\n                coursename: coursename,\n                section: section,\n                location: location,\n                teacherid: teacherid,\n                teacheriscalled: teacheriscalled,\n                email: email,\n                starttime: starttime,\n                lengthofclassesforacomputer: lengthofclassesforacomputer,\n                inpenalty: inpenalty,\n                stoptimepenalty: stoptimepenalty,\n                starttimepenalty: starttimepenalty,\n                totaltimepenalty: totaltimepenalty,\n                alreadyused: alreadyused,\n                teacher: teacher,\n                Selectedclassdestination: Selectedclassdestination,\n                currentlocation: currentlocation,\n                locationdestination: locationdestination,\n                firstname: firstname,\n                lastname: lastname,\n                ledby: ledby,\n                grouptime: grouptime,\n                exclusivetime: exclusivetime,\n                drinkofwater: drinkofwater,\n                donewithworkpass: donewithworkpass,\n                bathroomtime: bathroomtime,\n                nonbathroomtime: nonbathroomtime,\n                bathroompassinuse: bathroompassinuse,\n                totalinlineforbathroom: totalinlineforbathroom,\n                lengthofclasses: lengthofclasses,\n                endlastclasssubstitute: endlastclasssubstitute,\n                sessionended: sessionended,\n                thelastid: thelastid,\n                drinkpassduration: drinkpassduration,\n                phonepassduration: phonepassduration,\n                bathroompassduration: bathroompassduration,\n                overunder: overunder,\n                otherpassduration: otherpassduration,\n                maxstudentsphonepass: maxstudentsphonepass,\n                donewithworkphonepass: donewithworkphonepass,\n                consequenceid: consequenceid,\n                maxstudentsbathroom: maxstudentsbathroom,\n                linkedclass: linkedclass\n              });\n            },\n            children: \"Get Your QR Codes\"\n          })\n        }), _jsxs(Text, {\n          children: ['\\n', \" \", '\\n']\n        }), _jsx(View, {\n          children: _jsx(Text, {\n            style: styles.paragraph2,\n            children: \" ___________________ \"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return signoutfunction();\n          },\n          children: _jsx(Text, {\n            style: styles.paragraph2,\n            children: \"Sign Out\"\n          })\n        }), _jsx(View, {\n          children: _jsx(Text, {\n            style: styles.paragraph2,\n            children: \" ___________________ \"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return deleteaccount();\n          },\n          children: _jsx(Text, {\n            style: styles.paragraph2,\n            children: \"Delete Account\"\n          })\n        }), _jsxs(Text, {\n          children: ['\\n', \" \", '\\n', '\\n', \" \", '\\n', '\\n', \" \", '\\n', '\\n', \" \", '\\n', '\\n', '\\n', '\\n', \" \", '\\n', '\\n', \" \", '\\n', '\\n', \" \"]\n        })]\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    backgroundColor: '#000000',\n    padding: 2,\n    alignItems: \"center\"\n  },\n  paragraph: {\n    margin: 24,\n    fontSize: 40,\n    textAlign: 'center',\n    padding: 10,\n    color: '#FFFFFF',\n    backgroundColor: '#000000',\n    fontWeight: \"bold\"\n  },\n  paragraph2: {\n    margin: 24,\n    fontSize: 20,\n    textAlign: 'center',\n    padding: 10,\n    color: '#FFFFFF',\n    backgroundColor: '#000000',\n    fontWeight: \"bold\"\n  },\n  paragraph9: {\n    margin: 24,\n    fontSize: 20,\n    textAlign: 'center',\n    padding: 10,\n    color: '#FFF',\n    backgroundColor: '#000000'\n  },\n  text: {\n    color: '#FFFFFF',\n    textAlign: \"center\"\n  },\n  section4: {\n    padding: 10,\n    height: \"20%\"\n  },\n  paragraph4: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    backgroundColor: '#000000',\n    color: \"#FFF\",\n    color: \"#FFF\"\n  },\n  scroll: {\n    width: \"100%\"\n  },\n  centerscroll: {\n    alignItems: \"center\"\n  },\n  button: {\n    width: \"90%\",\n    alignItems: \"center\",\n    textAlign: \"center\",\n    width: \"95%\",\n    borderColor: \"#E43522\",\n    borderWidth: 2,\n    justifyContent: \"center\",\n    color: \"#fff\",\n    backgroundColor: \"#013469\",\n    borderRadius: 20\n  },\n  btext: {\n    margin: 10,\n    textAlign: \"center\",\n    fontSize: 16,\n    width: \"100%\",\n    justifyContent: \"center\",\n    color: \"#fff\"\n  }\n});\nexport default TeacherMainMenu;","map":{"version":3,"names":["React","useState","useEffect","useNavigation","auth","firebase","getAuth","onAuthStateChanged","createUserWithEmailAndPassword","sendEmailVerification","sendSignInLinkToEmail","AsyncStorage","onSnapshot","getFirestore","collection","addDoc","query","where","getDocs","deleteDoc","doc","setDoc","getDoc","updateDoc","FieldValue","arrayUnion","orderBy","limit","TeacherMainMenu","route","navigation","LogBox","ignoreAllLogs","youcangetincomingpass","setYoucangetincomingpass","youcangetpassclass","setYoucangetpassclass","youcangetincomingpassclass","setYoucangetincomingpassclass","endtime","setEndtime","endlastclass","setEndlastclass","thelastid","setthelastid","showspinner","setShowspinner","coursename2","setCoursename2","classiscurrent","setClassiscurrent","nameofcurrentclass","setNameofcurrentclass","idofcurrentclass","setIdofcurrentclass","starttimeofcurrentclass","setStarttimeofcurrentclass","getdatedotnow","setDatedotnow","arrayforconsequences","setArrayforconsequences","totalinlineforbathroomlocal","setTotalinlineforbathroomlocal","id","setId","school","setSchool","state","setState","town","setTown","role","setRole","teacheriscalled","setTeacheriscalled","email","setEmail","userdata","setUserdata","totalinline2","setTotalinline2","params","currentsessionid","userinformation","school2","state2","town2","role2","id2","teacheriscalled2","email2","bathroompasslimit","drinkpasslimit","ifnegativeplusminus","nonbathroompasslimit","exclusivephonepassmaxstudents","exclusivephonepasstimelmit","lengthofclass","classid","coursename","section","location","teacherid","starttime","lengthofclassesforacomputer","inpenalty","stoptimepenalty","starttimepenalty","totaltimepenalty","alreadyused","teacher","Selectedclassdestination","currentlocation","locationdestination","firstname","lastname","ledby","grouptime","drinkofwater","exclusivetime","donewithworkpass","bathroomtime","nonbathroomtime","bathroompassinuse","totalinlineforbathroom","lengthofclasses","endlastclasssubstitute","sessionended","phonepassduration","overunder","drinkpassduration","bathroompassduration","otherpassduration","maxstudentsphonepass","donewithworkphonepass","consequenceid","sessionending","maxstudentsbathroom","classsessionbegun","linkedclass","console","log","getData","value","getItem","then","value2","value5","value6","value7","value8","value9","e","resetinfo","docRef","docData","docSnap","data","user","uid","navigate","runthisfunction","q","querySnapshot","snapshot","array","forEach","push","length","makechange","catch","error","alert","rightnow","Date","now","signoutfunction","signOut","deleteaccount","Alert","text","onPress","style","endsessionprematurely","status","docs","studentid","i","totaltimeinpenalty","penaltyminutes","getstatus","trythis","truefalse","noww","passesnolongeravailable","classname","classbeginnumber","Math","round","currentsessionends","inusebathroompass","inuseexclusivephonepass","passesareavailable","totalinlineforexclusivephone","setOptions","headerLeft","styles","makeallincomingpassesavailable","makeallincomingpassesunavailable","makepassesavailable","makepassesunavailable","makeincomingpassesavailable","makeincomingpassesunavailable","acceptingincomingstudents","makeallpassesunavailable","makeallpassesavailable","container","paragraph9","scroll","centerscroll","paragraph2","position","alignItems","justifyContent","left","right","top","bottom","button","btext","StyleSheet","create","flex","backgroundColor","padding","paragraph","margin","fontSize","textAlign","color","fontWeight","section4","height","paragraph4","width","borderColor","borderWidth","borderRadius"],"sources":["/Users/matt/Desktop/hallpasstesting/Navigation/Components/MainMenuTeacher.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { Alert, StyleSheet, View, TouchableOpacity, Text, ScrollView, Pressable, LogBox, ActivityIndicator } from 'react-native';\nimport { auth, firebase } from \"../Firebase/Config\";\nimport { getAuth, onAuthStateChanged, createUserWithEmailAndPassword, sendEmailVerification, sendSignInLinkToEmail } from \"@firebase/auth\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport { onSnapshot, getFirestore, collection, addDoc, query, where, getDocs, deleteDoc, doc, setDoc, getDoc, updateDoc, FieldValue, arrayUnion, orderBy, limit } from \"@firebase/firestore\";\n\n\n\nconst TeacherMainMenu = ({ route, navigation }) => {\n\n  LogBox.ignoreAllLogs();\n\n  const [youcangetincomingpass, setYoucangetincomingpass] = useState(false);\n  const [youcangetpassclass, setYoucangetpassclass] = useState();\n  const [youcangetincomingpassclass, setYoucangetincomingpassclass] = useState(true);\n  const [endtime, setEndtime] = useState();\n  const [endlastclass, setEndlastclass] = useState();\n  const [thelastid, setthelastid] = useState();\n\n  const [showspinner, setShowspinner] = useState(false);\n\n  const [coursename2, setCoursename2] = useState(\"\");\n\n  const [classiscurrent, setClassiscurrent] = useState();\n  const [nameofcurrentclass, setNameofcurrentclass] = useState();\n  const [idofcurrentclass, setIdofcurrentclass] = useState();\n  const [starttimeofcurrentclass, setStarttimeofcurrentclass] = useState();\n  const [getdatedotnow, setDatedotnow] = useState();\n  const [arrayforconsequences, setArrayforconsequences] = useState();\n  const [totalinlineforbathroomlocal, setTotalinlineforbathroomlocal] = useState();\n\n  const [id, setId] = useState();\n  const [school, setSchool] = useState();\n  const [state, setState] = useState();\n  const [town, setTown] = useState();\n  const [role, setRole] = useState();\n  const [teacheriscalled, setTeacheriscalled] = useState();\n  const [email, setEmail] = useState();\n\n  const [userdata, setUserdata] = useState();\n  const [totalinline2, setTotalinline2] = useState();\n\n\n\n  const { currentsessionid, userinformation, school2, state2, town2, role2, id2, teacheriscalled2, email2, bathroompasslimit, drinkpasslimit, ifnegativeplusminus, nonbathroompasslimit, exclusivephonepassmaxstudents, exclusivephonepasstimelmit, lengthofclass, classid, coursename, section, location, teacherid,\n    starttime, lengthofclassesforacomputer, inpenalty, stoptimepenalty, starttimepenalty, totaltimepenalty, alreadyused, teacher, Selectedclassdestination, currentlocation, locationdestination, firstname, lastname, ledby, grouptime, drinkofwater, exclusivetime, donewithworkpass, bathroomtime, nonbathroomtime, bathroompassinuse, totalinlineforbathroom, lengthofclasses, endlastclasssubstitute, sessionended, phonepassduration, overunder, drinkpassduration, bathroompassduration, otherpassduration, maxstudentsphonepass, donewithworkphonepass, consequenceid, sessionending, maxstudentsbathroom, classsessionbegun, linkedclass\n  } = route.params;\n\n  console.log(drinkofwater, \" Drink of Water ,Main Menu \", id, \"this is the id\");\n\n\n  const getData = async () => {\n    try {\n      const value = await AsyncStorage.getItem('email').then((value) => {\n        setEmail(value);\n      })\n      const value2 = await AsyncStorage.getItem('id')\n      const value5 = await AsyncStorage.getItem('town')\n      const value6 = await AsyncStorage.getItem('school')\n      const value7 = await AsyncStorage.getItem('state')\n      const value8 = await AsyncStorage.getItem('teacheriscalled')\n      const value9 = await AsyncStorage.getItem('role')\n\n      console.log(email, value2, value9, value5, value6, value7, value8, value9, \"This is the stored value\");\n\n    } catch (e) {\n      // error reading value\n    }\n  }\n\n  useEffect(() => {\n    getData()\n  }, [id]);\n\n  useEffect(() => {\n    console.log(email, \"email was just set\")\n  }, [email]);\n\n\n  useEffect(() => {\n    if (typeof id2 != \"undefined\") {\n      setId(id2);\n      setSchool(school2);\n      setState(state2);\n      setTown(town2);\n      setRole(role2);\n      setTeacheriscalled(teacheriscalled2);\n      setEmail(email2);\n    }\n  }, [id2]);\n\n  useEffect(() => {\n    if (typeof id2 != \"undefined\") {\n      setId(id2);\n      setSchool(school2);\n      setState(state2);\n      setTown(town2);\n      setRole(role2);\n      setTeacheriscalled(teacheriscalled2);\n\n    }\n  }, [id2]);\n\n  const resetinfo = () => {\n    if (typeof id != \"undefined\") {\n\n      const docRef = doc(firebase, \"users\", id);\n      const docData = getDoc(docRef)\n\n        .then((docSnap) => {\n\n          setSchool(docSnap.data().school);\n          setTown(docSnap.data().town);\n          setState(docSnap.data().state);\n          setTeacheriscalled(docSnap.data().teacheriscalled);\n          setRole(docSnap.data().role);\n\n        })\n    } else {\n      const auth = getAuth();\n\n      onAuthStateChanged(auth, (user) => {\n\n        if (user) {\n          const uid = user.uid;\n          setId(uid);\n        } else {\n          navigation.navigate(\"SignIn\");\n        }\n      });\n    }\n\n  }\n\n\n  useEffect(() => {\n    setYoucangetpassclass(false);\n  }, [currentsessionid]);\n\n\n  async function runthisfunction() {\n\n    const q = query(collection(firebase, \"passes\"), where(\"classsessionid\", \"==\", currentsessionid), where(\"timeleftclass\", \"==\", 0), orderBy(\"placeinline\", \"asc\"));\n\n    const querySnapshot = await getDocs(q)\n\n      .then(function (snapshot) {\n        const array = []\n        snapshot.forEach(doc => {\n\n          array.push(doc.data())\n        })\n        setUserdata(array)\n      })\n  };\n\n\n  useEffect(() => {\n    if (typeof userdata != \"undefined\") {\n      setTotalinline2(userdata.length)\n    }\n  }, [userdata]);\n\n  useEffect(() => {\n    if ((typeof totalinline2 != \"undefined\") && (typeof classid != \"undefined\")) {\n      makechange();\n    }\n  }, [totalinline2]);\n\n\n  const makechange = () => {\n    console.log(\"Is this the last thing to get run?\")\n\n    updateDoc(doc(firebase, \"classesbeingtaught\", classid), {\n      totalinlineforbathroom: totalinline2\n    }).catch((error) => {\n      console.log(error); alert(error);\n    })\n\n  }\n\n\n\n  const rightnow = Date.now();\n\n  useEffect(() => {\n    if (sessionending < rightnow) {\n      setClassiscurrent(false);\n    }\n    else if (sessionending > rightnow) {\n      setClassiscurrent(true);\n    } else {\n      null;\n    }\n  }, [sessionending]);\n\n  useEffect(() => {\n    if (typeof classsessionbegun != \"undefined\") {\n      setYoucangetpassclass(false);\n    }\n  }, [classsessionbegun]);\n\n\n  const signoutfunction = () => {\n    auth.signOut();\n  }\n\n  const deleteaccount = () => {\n\n    Alert.alert('Please be aware.', 'Your account with all of its associated records will be removed from the database at the end of the school session.', [\n      {\n        text: 'Cancel',\n        onPress: () => console.log('Cancel Pressed'),\n        style: 'cancel',\n      },\n      { text: 'Delete Account', onPress: () => console.log(\"delete this account!\") },\n    ]);\n\n  }\n\n  useEffect(() => {\n    if (getdatedotnow > 0 && sessionending > 0) {\n      endsessionprematurely();\n    }\n  }, [getdatedotnow]);\n\n\n  const endsessionprematurely = () => {\n\n\n    console.log(sessionending, getdatedotnow, \"sessionending, getdatedotnow\", currentsessionid, \"currentsessionid\")\n\n    if (sessionending < getdatedotnow) {\n      console.log(sessionending, rightnow, \"sessionending,rightnow\")\n      setClassiscurrent(false);\n\n\n      updateDoc(doc(firebase, \"classsessions\", currentsessionid), {\n        status: \"Completed\"\n      })\n        .catch(error => {\n          console.log(error); alert(error);\n        })\n\n    } else {\n\n      setShowspinner(true);\n\n      Alert.alert('Please be aware.', 'This will end the current session.', [\n        {\n          text: 'Cancel',\n          onPress: () => setShowspinner(false),\n          style: 'cancel',\n        },\n        { text: 'End Session', onPress: () => setEndtime(Date.now()) },\n      ]);\n    }\n\n  }\n\n  useEffect(() => {\n\n    console.log(sessionending, \"sessionending\",)\n    if (currentsessionid) {\n      const array = [];\n\n      const q = query(collection(firebase, \"consequencephoneuse\"), where(\"sessionid\", \"==\", currentsessionid), where(\"stoptimepenalty\", \">\", endtime));\n\n      const querySnapshot = getDocs(q)\n\n        .then(function (snapshot) {\n\n          snapshot.forEach(docs => {\n            array.push({ id: docs.data().id, starttime: docs.data().starttimepenalty, studentid: docs.data().studentid });\n          })\n          setArrayforconsequences(array);\n        })\n    }\n  }, [endtime]);\n\n\n\n  useEffect(() => {\n\n    if (typeof arrayforconsequences != \"undefined\") {\n\n      for (let i = 0; i < arrayforconsequences.length; i++) {\n        updateDoc(doc(firebase, \"consequencephoneuse\", arrayforconsequences[i].id), {\n          stoptimepenalty: endtime,\n          totaltimeinpenalty: endtime - (arrayforconsequences[i].starttime),\n          penaltyminutes: (endtime - (arrayforconsequences[i].starttime)) / 60000,\n\n        }).catch((error) => {\n          console.log(error); alert(error);\n        })\n      }\n    }\n  }, [arrayforconsequences]);\n\n\n\n  useEffect(() => {\n    if (coursename) {\n      getstatus();\n      runthisfunction();\n    }\n  }, [coursename]);\n\n\n  useEffect(() => {\n    if (currentsessionid) {\n      getstatus();\n      runthisfunction();\n    }\n  }, [currentsessionid]);\n\n\n  async function getstatus() {\n    const trythis = collection(firebase, \"classsessions\");\n    const q = query(trythis, where(\"teacherid\", \"==\", id), where(\"status\", \"==\", \"Happening Now\"), orderBy(\"classbeginnumber\", \"asc\"))\n    const querySnapshot = await getDocs(q)\n      .then(function (snapshot) {\n        const array = [];\n        const truefalse = false;\n        let noww = Date.now();\n        console.log(\"Step 1, \", Date.now())\n        snapshot.forEach(doc => {\n\n          console.log(\"Step 2, \", doc.data(), doc.data().id, noww, doc.data().passesnolongeravailable, \"2 variables\")\n          if (noww > (doc.data().passesnolongeravailable)) {\n            array.push(doc.data().id);\n            let truefalse = true;\n            console.log(doc.data().id, \"TRUE HAPPENED --- class should be over\", array);\n            //Because class is over should say - \"Begin A Class\". \n          }\n          else if (noww < (doc.data().passesnolongeravailable)) {\n            console.log(\"CLASS IS HAPPENING!!!!!!!!!!!!!!!!\")\n            setClassiscurrent(true);\n            setNameofcurrentclass(doc.data().classname);\n            setIdofcurrentclass(doc.data().id);\n            setStarttimeofcurrentclass(doc.data().classbeginnumber)\n          }\n\n          else { console.log(\"no documents to update\") }\n        })\n\n\n        setthelastid(array);\n        setEndlastclass(truefalse);\n      })\n  };\n\n  useEffect(() => {\n    if (thelastid) {\n\n      for (let i = 0; i < thelastid.length; i++) {\n        updateDoc(doc(firebase, \"classsessions\", thelastid[i]), {\n          status: \"Completed\"\n        }).catch((error) => {\n          console.log(error); alert(error);\n        })\n\n      }\n    }\n  }, [endlastclass]);\n\n\n  useEffect(() => {\n    console.log(\"ENDING CLASSr \", currentsessionid, thelastid, \"+ \", starttime, \"starttime\", endtime, \"endtime\");\n\n    const rightnow = Date.now();\n\n    if (endtime > starttime) {\n      setClassiscurrent(false);\n\n      updateDoc(doc(firebase, \"classsessions\", currentsessionid), {\n        passesnolongeravailable: endtime,\n        lengthofclass: Math.round((endtime - starttime) / (60000)),\n        status: \"Completed\"\n      }).then(docRef => {\n        console.log(\"Value of an Existing Document Field has been updated\");\n        setShowspinner(false);\n\n      })\n        .catch(error => {\n          console.log(error); alert(error);\n        }),\n        updateDoc(doc(firebase, \"classesbeingtaught\", classid), {\n          currentsessionends: endtime,\n          inusebathroompass: 0,\n          inuseexclusivephonepass: 0,\n          passesareavailable: false,\n          totalinlineforbathroom: 0,\n          totalinlineforexclusivephone: 0,\n\n\n        }).catch((error) => {\n          console.log(error); alert(error);\n        }),\n\n        setEndlastclass(true);\n    }\n  }, [endtime]);\n\n  useEffect(() => {\n    console.log(currentsessionid, \"get all consequences that need to be reset and update there time thaat passes are no longer accepted. \")\n  }, [endtime]);\n\n\n\n  useEffect(() => {\n    navigation.setOptions({\n      headerLeft: () => (\n        <TouchableOpacity onPress={() =>\n          console.log(\"hello\")}>\n          <Text accessibilityLabel=\"Guest\" style={styles.error}>\n          </Text>\n        </TouchableOpacity>\n      ),\n    });\n\n  }, []);\n\n\n\n  useEffect(() => {\n    console.log(id, \"this is the id\")\n    if (typeof role === \"undefined\" || role === \"\" || typeof school === \"undefined\" || school === \"\" || typeof state === \"undefined\" || state === \"\" || typeof town === \"undefined\" || town === \"\" || typeof teacheriscalled === \"undefined\" || teacheriscalled === \"\" || typeof id === \"undefined\" || id === \"\") {\n      resetinfo();\n    } else {\n      console.log(\"Everything is cool!\")\n    }\n  }, []);\n\n  useEffect(() => {\n    console.log(id, \"This is the id\");\n    if (typeof role === \"undefined\" || typeof school === \"undefined\" || typeof state === \"undefined\" || typeof town === \"undefined\" || typeof teacheriscalled === \"undefined\" || teacheriscalled === \"\" || typeof id === \"undefined\") {\n      resetinfo();\n    } else {\n      console.log(\"Everything is cool!\")\n    }\n  }, [teacheriscalled]);\n\n  useEffect(() => {\n    console.log(email)\n    if (email2 != \"Mkrebs@rpsk12.org\" && email2 != \"Mjones@rpsk12.org\" && email2 != \"Nurse@rpsk12.org\") {\n      navigation.navigate(\"SignIn\");\n      alert(\"This App is in Development. Direct inquiries to mattkrebsemail@gmail.com.\")\n    } else {\n      console.log(\"let him in.\");\n    }\n  }, [teacheriscalled]);\n\n\n\n  useEffect(() => {\n\n    if (typeof coursename === \"undefined\") {\n      if (youcangetincomingpass) {\n        makeallincomingpassesavailable();\n      } else {\n        makeallincomingpassesunavailable();\n      }\n    }\n  }, [youcangetincomingpass]);\n\n\n\n  useEffect(() => {\n    if (coursename) {\n      if (youcangetpassclass) {\n        makepassesavailable();\n      } else {\n        makepassesunavailable();\n      }\n    }\n  }, [youcangetpassclass]);\n\n  useEffect(() => {\n    if (coursename) {\n      if (youcangetincomingpassclass) {\n        makeincomingpassesavailable();\n      } else {\n        makeincomingpassesunavailable();\n      }\n    }\n  }, [youcangetincomingpassclass]);\n\n  const makepassesavailable = () => {\n\n    updateDoc(doc(firebase, \"classesbeingtaught\", classid), {\n      passesareavailable: true,\n      currentsessionid: currentsessionid, sessionending: sessionending,\n    }).catch((error) => {\n      console.log(error); alert(error);\n    })\n\n  }\n\n  const makeincomingpassesavailable = () => {\n\n    updateDoc(doc(firebase, \"classesbeingtaught\", classid), {\n      acceptingincomingstudents: true,\n      currentsessionid: currentsessionid, sessionending: sessionending,\n    }).catch((error) => {\n      console.log(error); alert(error);\n    })\n\n  }\n\n  const makepassesunavailable = () => {\n\n    updateDoc(doc(firebase, \"classesbeingtaught\", classid), {\n      passesareavailable: false,\n    }).catch((error) => {\n      console.log(error); alert(error);\n    })\n\n  }\n  const makeincomingpassesunavailable = () => {\n\n    updateDoc(doc(firebase, \"classesbeingtaught\", classid), {\n      acceptingincomingstudents: false\n    }).catch((error) => {\n      console.log(error); alert(error);\n    })\n  }\n\n\n\n  async function makeallpassesunavailable() {\n\n    const q = query(collection(firebase, \"classesbeingtaught\"), where(\"teacherid\", \"==\", id));\n\n    const querySnapshot = await getDocs(q)\n\n      .then(function (snapshot) {\n\n        snapshot.forEach(docs => {\n          updateDoc(doc(firebase, \"classesbeingtaught\", docs.data().id), {\n            passesareavailable: false\n          }).catch((error) => {\n            console.log(error); alert(error);\n          })\n\n        })\n\n      })\n\n  };\n\n\n  async function makeallincomingpassesunavailable() {\n    if (typeof id != \"undefined\") {\n      const q = query(collection(firebase, \"classesbeingtaught\"), where(\"teacherid\", \"==\", id));\n\n      const querySnapshot = await getDocs(q)\n        .then(function (snapshot) {\n\n          snapshot.forEach(docs => {\n            updateDoc(doc(firebase, \"classesbeingtaught\", docs.data().id), {\n              acceptingincomingstudents: false\n            }).catch((error) => {\n              console.log(error); alert(error);\n            })\n\n          })\n\n        })\n    }\n  };\n\n\n\n\n  async function makeallpassesavailable() {\n    console.log(\"makeallpassesavailable was run\")\n\n\n    const q = query(collection(firebase, \"classesbeingtaught\"), where(\"teacherid\", \"==\", id));\n\n    const querySnapshot = await getDocs(q)\n\n      .then(function (snapshot) {\n\n        snapshot.forEach(docs => {\n          updateDoc(doc(firebase, \"classesbeingtaught\", docs.data().id), {\n            passesareavailable: true,\n            currentsessionid: currentsessionid, sessionending: sessionending,\n          }).catch((error) => {\n            console.log(error); alert(error);\n          })\n\n        })\n\n      })\n\n  };\n\n\n\n\n  async function makeallincomingpassesavailable() {\n    console.log(\"makeallincomingpassesavailable was run\")\n\n\n    const q = query(collection(firebase, \"classesbeingtaught\"), where(\"teacherid\", \"==\", id));\n\n    const querySnapshot = await getDocs(q)\n\n      .then(function (snapshot) {\n\n        snapshot.forEach(docs => {\n          updateDoc(doc(firebase, \"classesbeingtaught\", docs.data().id), {\n            acceptingincomingstudents: true,\n            currentsessionid: currentsessionid, sessionending: sessionending,\n          }).catch((error) => {\n            console.log(error); alert(error);\n          })\n\n        })\n      })\n\n  };\n\n  return (\n    <View style={styles.container}>\n      {coursename ? <View><Text style={styles.paragraph9}>Now Active: {'\\n'}{coursename} - {section} </Text></View> : <View><Text style={styles.paragraph9}>No Class is Active</Text></View>}\n\n\n      <ScrollView style={styles.scroll}>\n\n        <View style={styles.centerscroll}>\n\n          <View><Text style={styles.paragraph2}>Daily Management {'\\n'}</Text></View>\n\n          <View><ActivityIndicator\n            size=\"large\"\n            color=\"#FFF\"\n            animating={showspinner}\n            style={{\n              position: 'absolute',\n              alignItems: 'center',\n              justifyContent: 'center',\n              left: 0,\n              right: 0,\n              top: 0,\n              bottom: 0,\n            }} /></View>\n\n\n          {coursename && (classiscurrent && (Date.now() < sessionending)) ? <View style={styles.button}><Text style={styles.btext} onPress={(e) => setDatedotnow(Date.now())}>End Current Class Session</Text></View> : coursename && (!classiscurrent || (Date.now() > sessionending)) ? <View style={styles.button}><Text style={styles.btext} onPress={() => navigation.navigate(\"ClassesTeacher\", {\n            idofcurrentclass: idofcurrentclass, currentsessionid: currentsessionid, sessionending: sessionending, endlastclass: endlastclass, userinformation: userinformation, school: school, state: state, town: town, role: role, id: id, bathroompasslimit: bathroompasslimit, drinkpasslimit: drinkpasslimit, ifnegativeplusminus: ifnegativeplusminus, nonbathroompasslimit: nonbathroompasslimit, exclusivephonepassmaxstudents: exclusivephonepassmaxstudents, exclusivephonepasstimelmit: exclusivephonepasstimelmit, lengthofclass: lengthofclass, classiscurrent: classiscurrent, nameofcurrentclass: nameofcurrentclass, starttimeofcurrentclass: starttimeofcurrentclass, classid: classid, coursename: coursename, section: section, location: location, teacherid: teacherid, teacheriscalled: teacheriscalled,\n            email: email, starttime: starttime, lengthofclassesforacomputer: lengthofclassesforacomputer, inpenalty: inpenalty, stoptimepenalty: stoptimepenalty, starttimepenalty: starttimepenalty, totaltimepenalty: totaltimepenalty, alreadyused: alreadyused, teacher: teacher, Selectedclassdestination: Selectedclassdestination, currentlocation: currentlocation, locationdestination: locationdestination, firstname: firstname, lastname: lastname, ledby: ledby, grouptime: grouptime, drinkofwater: drinkofwater, exclusivetime: exclusivetime, donewithworkpass: donewithworkpass, bathroomtime: bathroomtime, nonbathroomtime: nonbathroomtime, bathroompassinuse: bathroompassinuse, totalinlineforbathroom: totalinlineforbathroom, lengthofclasses: lengthofclasses, endlastclasssubstitute: endlastclasssubstitute, sessionended: sessionended, thelastid: thelastid, phonepassduration: phonepassduration, drinkpassduration: drinkpassduration, bathroompassduration: bathroompassduration, overunder: overunder, otherpassduration: otherpassduration, maxstudentsphonepass: maxstudentsphonepass, donewithworkphonepass: donewithworkphonepass, consequenceid: consequenceid, maxstudentsbathroom: maxstudentsbathroom, linkedclass: linkedclass\n          })}>Begin A New Class Session</Text></View> : null}\n\n          {coursename ? <Text>{'\\n'}{'\\n'}</Text> : null}\n\n          {coursename ? null : <View style={styles.button}><Text style={styles.btext} onPress={(e) => navigation.navigate(\"ClassesTeacher\", {\n            idofcurrentclass: idofcurrentclass, currentsessionid: currentsessionid, sessionending: sessionending, endlastclass: endlastclass, userinformation: userinformation, school: school, state: state, town: town, role: role, id: id, bathroompasslimit: bathroompasslimit, drinkpasslimit: drinkpasslimit, ifnegativeplusminus: ifnegativeplusminus, nonbathroompasslimit: nonbathroompasslimit, exclusivephonepassmaxstudents: exclusivephonepassmaxstudents, exclusivephonepasstimelmit: exclusivephonepasstimelmit, lengthofclass: lengthofclass, classiscurrent: classiscurrent, nameofcurrentclass: nameofcurrentclass, starttimeofcurrentclass: starttimeofcurrentclass, classid: classid, coursename: coursename, section: section, location: location, teacherid: teacherid, teacheriscalled: teacheriscalled,\n            email: email, starttime: starttime, lengthofclassesforacomputer: lengthofclassesforacomputer, inpenalty: inpenalty, stoptimepenalty: stoptimepenalty, starttimepenalty: starttimepenalty, totaltimepenalty: totaltimepenalty, alreadyused: alreadyused, teacher: teacher, Selectedclassdestination: Selectedclassdestination, currentlocation: currentlocation, locationdestination: locationdestination, firstname: firstname, lastname: lastname, ledby: ledby, grouptime: grouptime, drinkofwater: drinkofwater, exclusivetime: exclusivetime, donewithworkpass: donewithworkpass, bathroomtime: bathroomtime, nonbathroomtime: nonbathroomtime, bathroompassinuse: bathroompassinuse, totalinlineforbathroom: totalinlineforbathroom, lengthofclasses: lengthofclasses, endlastclasssubstitute: endlastclasssubstitute, sessionended: sessionended, thelastid: thelastid, phonepassduration: phonepassduration, drinkpassduration: drinkpassduration, bathroompassduration: bathroompassduration, overunder: overunder, otherpassduration: otherpassduration, maxstudentsphonepass: maxstudentsphonepass, donewithworkphonepass: donewithworkphonepass, consequenceid: consequenceid, maxstudentsbathroom: maxstudentsbathroom, linkedclass: linkedclass\n          })}>Select a Class</Text></View>}\n\n          {coursename ? null : <Text>{'\\n'}{'\\n'}</Text>}\n\n\n          {/* <Text>{'\\n'}{'\\n'}</Text> */}\n\n\n\n          {coursename ? <View style={styles.button}><Text style={styles.btext} onPress={() => navigation.navigate(\"Classsessions\", {\n            idofcurrentclass: idofcurrentclass, currentsessionid: currentsessionid, sessionending: sessionending, endlastclass: endlastclass, userinformation: userinformation, school: school, state: state, town: town, role: role, id: id, bathroompasslimit: bathroompasslimit, drinkpasslimit: drinkpasslimit, ifnegativeplusminus: ifnegativeplusminus, nonbathroompasslimit: nonbathroompasslimit, exclusivephonepassmaxstudents: exclusivephonepassmaxstudents, exclusivephonepasstimelmit: exclusivephonepasstimelmit, lengthofclass: lengthofclass, classiscurrent: classiscurrent, nameofcurrentclass: nameofcurrentclass, starttimeofcurrentclass: starttimeofcurrentclass, classid: classid, coursename: coursename, section: section, location: location, teacherid: teacherid, teacheriscalled: teacheriscalled,\n            email: email, starttime: starttime, lengthofclassesforacomputer: lengthofclassesforacomputer, inpenalty: inpenalty, stoptimepenalty: stoptimepenalty, starttimepenalty: starttimepenalty, totaltimepenalty: totaltimepenalty, alreadyused: alreadyused, teacher: teacher, Selectedclassdestination: Selectedclassdestination, currentlocation: currentlocation, locationdestination: locationdestination, firstname: firstname, lastname: lastname, ledby: ledby, grouptime: grouptime, drinkofwater: drinkofwater, exclusivetime: exclusivetime, donewithworkpass: donewithworkpass, bathroomtime: bathroomtime, nonbathroomtime: nonbathroomtime, bathroompassinuse: bathroompassinuse, totalinlineforbathroom: totalinlineforbathroom, lengthofclasses: lengthofclasses, endlastclasssubstitute: endlastclasssubstitute, sessionended: sessionended, thelastid: thelastid, phonepassduration: phonepassduration, drinkpassduration: drinkpassduration, bathroompassduration: bathroompassduration, overunder: overunder, otherpassduration: otherpassduration, maxstudentsphonepass: maxstudentsphonepass, donewithworkphonepass: donewithworkphonepass, consequenceid: consequenceid, maxstudentsbathroom: maxstudentsbathroom, linkedclass: linkedclass\n\n          })}>Sessions from this Class</Text></View> : null}\n\n          {coursename ? <Text>{'\\n'}{'\\n'}</Text> : null}\n\n          {coursename ? <View style={styles.button}><Text style={styles.btext} onPress={() => navigation.navigate(\"Studentsenrolled\", {\n            idofcurrentclass: idofcurrentclass, currentsessionid: currentsessionid, sessionending: sessionending, endlastclass: endlastclass, userinformation: userinformation, school: school, state: state, town: town, role: role, id: id, bathroompasslimit: bathroompasslimit, drinkpasslimit: drinkpasslimit, ifnegativeplusminus: ifnegativeplusminus, nonbathroompasslimit: nonbathroompasslimit, exclusivephonepassmaxstudents: exclusivephonepassmaxstudents, exclusivephonepasstimelmit: exclusivephonepasstimelmit, lengthofclass: lengthofclass, classiscurrent: classiscurrent, nameofcurrentclass: nameofcurrentclass, starttimeofcurrentclass: starttimeofcurrentclass, classid: classid, coursename: coursename, section: section, location: location, teacherid: teacherid, teacheriscalled: teacheriscalled,\n            email: email, starttime: starttime, lengthofclassesforacomputer: lengthofclassesforacomputer, inpenalty: inpenalty, stoptimepenalty: stoptimepenalty, starttimepenalty: starttimepenalty, totaltimepenalty: totaltimepenalty, alreadyused: alreadyused, teacher: teacher, Selectedclassdestination: Selectedclassdestination, currentlocation: currentlocation, locationdestination: locationdestination, firstname: firstname, lastname: lastname, ledby: ledby, grouptime: grouptime, drinkofwater: drinkofwater, exclusivetime: exclusivetime, donewithworkpass: donewithworkpass, bathroomtime: bathroomtime, nonbathroomtime: nonbathroomtime, bathroompassinuse: bathroompassinuse, totalinlineforbathroom: totalinlineforbathroom, lengthofclasses: lengthofclasses, endlastclasssubstitute: endlastclasssubstitute, sessionended: sessionended, thelastid: thelastid, phonepassduration: phonepassduration, drinkpassduration: drinkpassduration, bathroompassduration: bathroompassduration, overunder: overunder, otherpassduration: otherpassduration, maxstudentsphonepass: maxstudentsphonepass, donewithworkphonepass: donewithworkphonepass, consequenceid: consequenceid, maxstudentsbathroom: maxstudentsbathroom, linkedclass: linkedclass\n\n          })}>All Students From This Class</Text></View> : null}\n\n          {coursename ? <Text>{'\\n'}{'\\n'}</Text> : null}\n\n          {coursename ? <View style={styles.button}><Text style={styles.btext} onPress={() => navigation.navigate(\"Classpasses\", {\n            idofcurrentclass: idofcurrentclass, currentsessionid: currentsessionid, sessionending: sessionending, endlastclass: endlastclass, userinformation: userinformation, school: school, state: state, town: town, role: role, id: id, bathroompasslimit: bathroompasslimit, drinkpasslimit: drinkpasslimit, ifnegativeplusminus: ifnegativeplusminus, nonbathroompasslimit: nonbathroompasslimit, exclusivephonepassmaxstudents: exclusivephonepassmaxstudents, exclusivephonepasstimelmit: exclusivephonepasstimelmit, lengthofclass: lengthofclass, classiscurrent: classiscurrent, nameofcurrentclass: nameofcurrentclass, starttimeofcurrentclass: starttimeofcurrentclass, classid: classid, coursename: coursename, section: section, location: location, teacherid: teacherid, teacheriscalled: teacheriscalled,\n            email: email, starttime: starttime, lengthofclassesforacomputer: lengthofclassesforacomputer, inpenalty: inpenalty, stoptimepenalty: stoptimepenalty, starttimepenalty: starttimepenalty, totaltimepenalty: totaltimepenalty, alreadyused: alreadyused, teacher: teacher, Selectedclassdestination: Selectedclassdestination, currentlocation: currentlocation, locationdestination: locationdestination, firstname: firstname, lastname: lastname, ledby: ledby, grouptime: grouptime, drinkofwater: drinkofwater, exclusivetime: exclusivetime, donewithworkpass: donewithworkpass, bathroomtime: bathroomtime, nonbathroomtime: nonbathroomtime, bathroompassinuse: bathroompassinuse, totalinlineforbathroom: totalinlineforbathroom, lengthofclasses: lengthofclasses, endlastclasssubstitute: endlastclasssubstitute, sessionended: sessionended, thelastid: thelastid, phonepassduration: phonepassduration, drinkpassduration: drinkpassduration, bathroompassduration: bathroompassduration, overunder: overunder, otherpassduration: otherpassduration, maxstudentsphonepass: maxstudentsphonepass, donewithworkphonepass: donewithworkphonepass, consequenceid: consequenceid, maxstudentsbathroom: maxstudentsbathroom, linkedclass: linkedclass\n\n          })}>Passes From This Class</Text></View> : null}\n\n          {coursename ? <Text>{'\\n'}{'\\n'}</Text> : null}\n\n\n          {classiscurrent == true && currentsessionid && youcangetpassclass && coursename ? <View style={styles.button}>\n            <Text style={styles.btext} onPress={() => setYoucangetpassclass(false)}>Turn Outgoing Passes OFF</Text></View> : classiscurrent == true && currentsessionid && !youcangetpassclass && coursename ? <View style={styles.button}><Text style={styles.btext} onPress={() => setYoucangetpassclass(true)}>Turn Outgoing Passes ON</Text></View> : null}\n\n\n\n          {classiscurrent == true && currentsessionid && coursename ? <Text>{'\\n'}{'\\n'}</Text> : null}\n\n          {currentsessionid && youcangetincomingpassclass && coursename ? <View style={styles.button}>\n\n            <Text style={styles.btext} onPress={() => setYoucangetincomingpassclass(false)} >Turn Incoming Passes OFF</Text></View> : currentsessionid && !youcangetincomingpassclass && coursename ? <View style={styles.button}><Text style={styles.btext} onPress={() => setYoucangetincomingpassclass(true)}>Turn Incoming Passes ON</Text></View> : null}\n\n          {currentsessionid && coursename ? <Text>{'\\n'}{'\\n'}</Text> : null}\n\n          {classiscurrent == true && coursename ? <View style={styles.button}>\n\n            <Text style={styles.btext} onPress={() => navigation.navigate(\"Lineforbathroompassteacher\", {\n              idofcurrentclass: idofcurrentclass, currentsessionid: currentsessionid, sessionending: sessionending, endlastclass: endlastclass, userinformation: userinformation, school: school, state: state, town: town, role: role, id: id, bathroompasslimit: bathroompasslimit, drinkpasslimit: drinkpasslimit, ifnegativeplusminus: ifnegativeplusminus, nonbathroompasslimit: nonbathroompasslimit, exclusivephonepassmaxstudents: exclusivephonepassmaxstudents, exclusivephonepasstimelmit: exclusivephonepasstimelmit, lengthofclass: lengthofclass, classiscurrent: classiscurrent, nameofcurrentclass: nameofcurrentclass, starttimeofcurrentclass: starttimeofcurrentclass, classid: classid, coursename: coursename, section: section, location: location, teacherid: teacherid, teacheriscalled: teacheriscalled,\n              email: email, starttime: starttime, lengthofclassesforacomputer: lengthofclassesforacomputer, inpenalty: inpenalty, stoptimepenalty: stoptimepenalty, starttimepenalty: starttimepenalty, totaltimepenalty: totaltimepenalty, alreadyused: alreadyused, teacher: teacher, Selectedclassdestination: Selectedclassdestination, currentlocation: currentlocation, locationdestination: locationdestination, firstname: firstname, lastname: lastname, ledby: ledby, grouptime: grouptime, drinkofwater: drinkofwater, exclusivetime: exclusivetime, donewithworkpass: donewithworkpass, bathroomtime: bathroomtime, nonbathroomtime: nonbathroomtime, bathroompassinuse: bathroompassinuse, totalinlineforbathroom: totalinlineforbathroom, lengthofclasses: lengthofclasses, endlastclasssubstitute: endlastclasssubstitute, sessionended: sessionended, thelastid: thelastid, phonepassduration: phonepassduration, drinkpassduration: drinkpassduration, bathroompassduration: bathroompassduration, overunder: overunder, otherpassduration: otherpassduration, maxstudentsphonepass: maxstudentsphonepass, donewithworkphonepass: donewithworkphonepass, consequenceid: consequenceid, maxstudentsbathroom: maxstudentsbathroom, linkedclass: linkedclass\n\n            })}>See Students In Line For Bathroom </Text></View> : <View></View>}\n\n          {classiscurrent == true && coursename ? <Text>{'\\n'}{'\\n'}</Text> : null}\n\n          <View><Text style={styles.paragraph2}> ___________________ </Text></View>\n          <View><Text style={styles.paragraph2}>Set-Up{'\\n'}</Text></View>\n\n          <View style={styles.button}>\n\n            <Text style={styles.btext} onPress={() => navigation.navigate(\"RegisterClasses\", {\n              idofcurrentclass: idofcurrentclass, currentsessionid: currentsessionid, sessionending: sessionending, endlastclass: endlastclass, userinformation: userinformation, school: school, state: state, town: town, role: role, id: id, bathroompasslimit: bathroompasslimit, drinkpasslimit: drinkpasslimit, ifnegativeplusminus: ifnegativeplusminus, nonbathroompasslimit: nonbathroompasslimit, exclusivephonepassmaxstudents: exclusivephonepassmaxstudents, exclusivephonepasstimelmit: exclusivephonepasstimelmit, lengthofclass: lengthofclass, classiscurrent: classiscurrent, nameofcurrentclass: nameofcurrentclass, starttimeofcurrentclass: starttimeofcurrentclass, classid: classid, coursename: coursename, section: section, location: location, teacherid: teacherid, teacheriscalled: teacheriscalled,\n              email: email, starttime: starttime, lengthofclassesforacomputer: lengthofclassesforacomputer, inpenalty: inpenalty, stoptimepenalty: stoptimepenalty, starttimepenalty: starttimepenalty, totaltimepenalty: totaltimepenalty, alreadyused: alreadyused, teacher: teacher, Selectedclassdestination: Selectedclassdestination, currentlocation: currentlocation, locationdestination: locationdestination, firstname: firstname, lastname: lastname, ledby: ledby, grouptime: grouptime, drinkofwater: drinkofwater, exclusivetime: exclusivetime, donewithworkpass: donewithworkpass, bathroomtime: bathroomtime, nonbathroomtime: nonbathroomtime, bathroompassinuse: bathroompassinuse, totalinlineforbathroom: totalinlineforbathroom, lengthofclasses: lengthofclasses, endlastclasssubstitute: endlastclasssubstitute, sessionended: sessionended, thelastid: thelastid, phonepassduration: phonepassduration, drinkpassduration: drinkpassduration, bathroompassduration: bathroompassduration, overunder: overunder, otherpassduration: otherpassduration, maxstudentsphonepass: maxstudentsphonepass, donewithworkphonepass: donewithworkphonepass, consequenceid: consequenceid, maxstudentsbathroom: maxstudentsbathroom, linkedclass: linkedclass\n            })}>Create A Class</Text></View>\n          <Text>{'\\n'} {'\\n'}</Text>\n\n\n          {/* {coursename ? <View style={styles.button}>\n            <Text style={styles.btext} onPress={() => navigation.navigate(\"Linkclasses\", {\n              idofcurrentclass: idofcurrentclass, currentsessionid: currentsessionid, sessionending: sessionending, endlastclass: endlastclass, userinformation: userinformation, school: school, state: state, town: town, role: role, id: id, bathroompasslimit: bathroompasslimit, ifnegativeplusminus: ifnegativeplusminus, nonbathroompasslimit: nonbathroompasslimit, drinkpasslimit: drinkpasslimit, exclusivephonepassmaxstudents: exclusivephonepassmaxstudents, exclusivephonepasstimelmit: exclusivephonepasstimelmit, lengthofclass: lengthofclass, classiscurrent: classiscurrent, nameofcurrentclass: nameofcurrentclass, starttimeofcurrentclass: starttimeofcurrentclass, classid: classid, coursename: coursename, section: section, location: location, teacherid: teacherid, teacheriscalled: teacheriscalled,\n              email: email, starttime: starttime, lengthofclassesforacomputer: lengthofclassesforacomputer, inpenalty: inpenalty, stoptimepenalty: stoptimepenalty, starttimepenalty: starttimepenalty, totaltimepenalty: totaltimepenalty, alreadyused: alreadyused, teacher: teacher, Selectedclassdestination: Selectedclassdestination,  currentlocation: currentlocation, locationdestination: locationdestination, firstname: firstname, lastname: lastname, ledby: ledby, grouptime: grouptime, drinkofwater: drinkofwater, exclusivetime: exclusivetime, donewithworkpass: donewithworkpass, bathroomtime: bathroomtime, nonbathroomtime: nonbathroomtime, bathroompassinuse: bathroompassinuse, totalinlineforbathroom: totalinlineforbathroom, lengthofclasses: lengthofclasses, endlastclasssubstitute: endlastclasssubstitute, sessionended: sessionended, thelastid: thelastid, phonepassduration: phonepassduration, drinkpassduration: drinkpassduration, bathroompassduration: bathroompassduration, overunder: overunder, otherpassduration: otherpassduration, maxstudentsphonepass: maxstudentsphonepass, donewithworkphonepass: donewithworkphonepass, consequenceid: consequenceid, maxstudentsbathroom: maxstudentsbathroom, linkedclass:linkedclass\n\n            })}>Link/Unlink class to 'Active' Class</Text></View> : null}\n\n\n          {coursename ? <Text>{'\\n'} {'\\n'}</Text> : null} */}\n\n          {coursename ? <View style={styles.button}>\n            <Text style={styles.btext} onPress={() => navigation.navigate(\"Studentsawaitingconfirmation\", {\n              idofcurrentclass: idofcurrentclass, currentsessionid: currentsessionid, sessionending: sessionending, endlastclass: endlastclass, userinformation: userinformation, school: school, state: state, town: town, role: role, id: id, bathroompasslimit: bathroompasslimit, ifnegativeplusminus: ifnegativeplusminus, nonbathroompasslimit: nonbathroompasslimit, drinkpasslimit: drinkpasslimit, exclusivephonepassmaxstudents: exclusivephonepassmaxstudents, exclusivephonepasstimelmit: exclusivephonepasstimelmit, lengthofclass: lengthofclass, classiscurrent: classiscurrent, nameofcurrentclass: nameofcurrentclass, starttimeofcurrentclass: starttimeofcurrentclass, classid: classid, coursename: coursename, section: section, location: location, teacherid: teacherid, teacheriscalled: teacheriscalled,\n              email: email, starttime: starttime, lengthofclassesforacomputer: lengthofclassesforacomputer, inpenalty: inpenalty, stoptimepenalty: stoptimepenalty, starttimepenalty: starttimepenalty, totaltimepenalty: totaltimepenalty, alreadyused: alreadyused, teacher: teacher, Selectedclassdestination: Selectedclassdestination, currentlocation: currentlocation, locationdestination: locationdestination, firstname: firstname, lastname: lastname, ledby: ledby, grouptime: grouptime, drinkofwater: drinkofwater, exclusivetime: exclusivetime, donewithworkpass: donewithworkpass, bathroomtime: bathroomtime, nonbathroomtime: nonbathroomtime, bathroompassinuse: bathroompassinuse, totalinlineforbathroom: totalinlineforbathroom, lengthofclasses: lengthofclasses, endlastclasssubstitute: endlastclasssubstitute, sessionended: sessionended, thelastid: thelastid, phonepassduration: phonepassduration, drinkpassduration: drinkpassduration, bathroompassduration: bathroompassduration, overunder: overunder, otherpassduration: otherpassduration, maxstudentsphonepass: maxstudentsphonepass, donewithworkphonepass: donewithworkphonepass, consequenceid: consequenceid, maxstudentsbathroom: maxstudentsbathroom, linkedclass: linkedclass\n\n            })}>Admit Students into 'Active' Class</Text></View> : null}\n          {coursename ? <Text>{'\\n'} {'\\n'}</Text> : null}\n\n          {coursename ? <View style={styles.button}>\n            <Text style={styles.btext} onPress={() => navigation.navigate(\"Studentsnotenrolled\", {\n              idofcurrentclass: idofcurrentclass, currentsessionid: currentsessionid, sessionending: sessionending, endlastclass: endlastclass, userinformation: userinformation, school: school, state: state, town: town, role: role, id: id, bathroompasslimit: bathroompasslimit, ifnegativeplusminus: ifnegativeplusminus, nonbathroompasslimit: nonbathroompasslimit, drinkpasslimit: drinkpasslimit, exclusivephonepassmaxstudents: exclusivephonepassmaxstudents, exclusivephonepasstimelmit: exclusivephonepasstimelmit, lengthofclass: lengthofclass, classiscurrent: classiscurrent, nameofcurrentclass: nameofcurrentclass, starttimeofcurrentclass: starttimeofcurrentclass, classid: classid, coursename: coursename, section: section, location: location, teacherid: teacherid, teacheriscalled: teacheriscalled,\n              email: email, starttime: starttime, lengthofclassesforacomputer: lengthofclassesforacomputer, inpenalty: inpenalty, stoptimepenalty: stoptimepenalty, starttimepenalty: starttimepenalty, totaltimepenalty: totaltimepenalty, alreadyused: alreadyused, teacher: teacher, Selectedclassdestination: Selectedclassdestination, currentlocation: currentlocation, locationdestination: locationdestination, firstname: firstname, lastname: lastname, ledby: ledby, grouptime: grouptime, drinkofwater: drinkofwater, exclusivetime: exclusivetime, donewithworkpass: donewithworkpass, bathroomtime: bathroomtime, nonbathroomtime: nonbathroomtime, bathroompassinuse: bathroompassinuse, totalinlineforbathroom: totalinlineforbathroom, lengthofclasses: lengthofclasses, endlastclasssubstitute: endlastclasssubstitute, sessionended: sessionended, thelastid: thelastid, phonepassduration: phonepassduration, drinkpassduration: drinkpassduration, bathroompassduration: bathroompassduration, overunder: overunder, otherpassduration: otherpassduration, maxstudentsphonepass: maxstudentsphonepass, donewithworkphonepass: donewithworkphonepass, consequenceid: consequenceid, maxstudentsbathroom: maxstudentsbathroom, linkedclass: linkedclass\n\n            })}>Students Not In This Class</Text></View> : null}\n          {coursename ? <Text>{'\\n'} {'\\n'}</Text> : null}\n\n          {coursename ? <View style={styles.button}>\n\n            <Text style={styles.btext} onPress={() => navigation.navigate(\"QuickSignUp\", {\n              idofcurrentclass: idofcurrentclass, currentsessionid: currentsessionid, sessionending: sessionending, endlastclass: endlastclass, userinformation: userinformation, school: school, state: state, town: town, role: role, id: id, bathroompasslimit: bathroompasslimit, ifnegativeplusminus: ifnegativeplusminus, nonbathroompasslimit: nonbathroompasslimit, drinkpasslimit: drinkpasslimit, exclusivephonepassmaxstudents: exclusivephonepassmaxstudents, exclusivephonepasstimelmit: exclusivephonepasstimelmit, lengthofclass: lengthofclass, classiscurrent: classiscurrent, nameofcurrentclass: nameofcurrentclass, starttimeofcurrentclass: starttimeofcurrentclass, classid: classid, coursename: coursename, section: section, location: location, teacherid: teacherid, teacheriscalled: teacheriscalled,\n              email: email, starttime: starttime, lengthofclassesforacomputer: lengthofclassesforacomputer, inpenalty: inpenalty, stoptimepenalty: stoptimepenalty, starttimepenalty: starttimepenalty, totaltimepenalty: totaltimepenalty, alreadyused: alreadyused, teacher: teacher, Selectedclassdestination: Selectedclassdestination, currentlocation: currentlocation, locationdestination: locationdestination, firstname: firstname, lastname: lastname, ledby: ledby, grouptime: grouptime, drinkofwater: drinkofwater, exclusivetime: exclusivetime, donewithworkpass: donewithworkpass, bathroomtime: bathroomtime, nonbathroomtime: nonbathroomtime, bathroompassinuse: bathroompassinuse, totalinlineforbathroom: totalinlineforbathroom, lengthofclasses: lengthofclasses, endlastclasssubstitute: endlastclasssubstitute, sessionended: sessionended, thelastid: thelastid, phonepassduration: phonepassduration, drinkpassduration: drinkpassduration, bathroompassduration: bathroompassduration, overunder: overunder, otherpassduration: otherpassduration, maxstudentsphonepass: maxstudentsphonepass, donewithworkphonepass: donewithworkphonepass, consequenceid: consequenceid, maxstudentsbathroom: maxstudentsbathroom, linkedclass: linkedclass\n            })}>Sign Up Phoneless Student</Text></View> : null}\n\n          {coursename ? <Text>{'\\n'} {'\\n'}</Text> : null}\n\n\n\n          {coursename ? <View style={styles.button}>\n\n            <Text style={styles.btext} onPress={() => navigation.navigate(\"Addconsequence\", {\n              idofcurrentclass: idofcurrentclass, currentsessionid: currentsessionid, sessionending: sessionending, endlastclass: endlastclass, userinformation: userinformation, school: school, state: state, town: town, role: role, id: id, bathroompasslimit: bathroompasslimit, ifnegativeplusminus: ifnegativeplusminus, nonbathroompasslimit: nonbathroompasslimit, drinkpasslimit: drinkpasslimit, exclusivephonepassmaxstudents: exclusivephonepassmaxstudents, exclusivephonepasstimelmit: exclusivephonepasstimelmit, lengthofclass: lengthofclass, classiscurrent: classiscurrent, nameofcurrentclass: nameofcurrentclass, starttimeofcurrentclass: starttimeofcurrentclass, classid: classid, coursename: coursename, section: section, location: location, teacherid: teacherid, teacheriscalled: teacheriscalled,\n              email: email, starttime: starttime, lengthofclassesforacomputer: lengthofclassesforacomputer, inpenalty: inpenalty, stoptimepenalty: stoptimepenalty, starttimepenalty: starttimepenalty, totaltimepenalty: totaltimepenalty, alreadyused: alreadyused, teacher: teacher, Selectedclassdestination: Selectedclassdestination, currentlocation: currentlocation, locationdestination: locationdestination, firstname: firstname, lastname: lastname, ledby: ledby, grouptime: grouptime, drinkofwater: drinkofwater, exclusivetime: exclusivetime, donewithworkpass: donewithworkpass, bathroomtime: bathroomtime, nonbathroomtime: nonbathroomtime, bathroompassinuse: bathroompassinuse, totalinlineforbathroom: totalinlineforbathroom, lengthofclasses: lengthofclasses, endlastclasssubstitute: endlastclasssubstitute, sessionended: sessionended, thelastid: thelastid, phonepassduration: phonepassduration, drinkpassduration: drinkpassduration, bathroompassduration: bathroompassduration, overunder: overunder, otherpassduration: otherpassduration, maxstudentsphonepass: maxstudentsphonepass, donewithworkphonepass: donewithworkphonepass, consequenceid: consequenceid, maxstudentsbathroom: maxstudentsbathroom, linkedclass: linkedclass\n            })}>Behaviors To Address</Text></View> : null}\n\n          {coursename ? <Text>{'\\n'} {'\\n'}</Text> : null}\n\n\n          {coursename && (classiscurrent && (Date.now() < sessionending)) ? <View style={styles.button}>\n\n            <Text style={styles.btext} onPress={() => navigation.navigate(\"Settingsteacher\", {\n              idofcurrentclass: idofcurrentclass, currentsessionid: currentsessionid, sessionending: sessionending, endlastclass: endlastclass, userinformation: userinformation, school: school, state: state, town: town, role: role, id: id, bathroompasslimit: bathroompasslimit, drinkpasslimit: drinkpasslimit, ifnegativeplusminus: ifnegativeplusminus, nonbathroompasslimit: nonbathroompasslimit, exclusivephonepassmaxstudents: exclusivephonepassmaxstudents, exclusivephonepasstimelmit: exclusivephonepasstimelmit, lengthofclass: lengthofclass, classiscurrent: classiscurrent, nameofcurrentclass: nameofcurrentclass, starttimeofcurrentclass: starttimeofcurrentclass, classid: classid, coursename: coursename, section: section, location: location, teacherid: teacherid, teacheriscalled: teacheriscalled,\n              email: email, starttime: starttime, lengthofclassesforacomputer: lengthofclassesforacomputer, inpenalty: inpenalty, stoptimepenalty: stoptimepenalty, starttimepenalty: starttimepenalty, totaltimepenalty: totaltimepenalty, alreadyused: alreadyused, teacher: teacher, Selectedclassdestination: Selectedclassdestination, currentlocation: currentlocation, locationdestination: locationdestination, firstname: firstname, lastname: lastname, ledby: ledby, grouptime: grouptime, drinkofwater: drinkofwater, exclusivetime: exclusivetime, donewithworkpass: donewithworkpass, bathroomtime: bathroomtime, nonbathroomtime: nonbathroomtime, bathroompassinuse: bathroompassinuse, totalinlineforbathroom: totalinlineforbathroom, lengthofclasses: lengthofclasses, endlastclasssubstitute: endlastclasssubstitute, sessionended: sessionended, thelastid: thelastid, phonepassduration: phonepassduration, drinkpassduration: drinkpassduration, bathroompassduration: bathroompassduration, overunder: overunder, otherpassduration: otherpassduration, maxstudentsphonepass: maxstudentsphonepass, donewithworkphonepass: donewithworkphonepass, consequenceid: consequenceid, maxstudentsbathroom: maxstudentsbathroom, linkedclass: linkedclass\n\n            })}>Settings for the 'Active' Class</Text></View> : <View style={styles.button}>\n\n            <Text style={styles.btext} onPress={() => navigation.navigate(\"Settingsteacher\", {\n              idofcurrentclass: idofcurrentclass, currentsessionid: currentsessionid, sessionending: sessionending, endlastclass: endlastclass, userinformation: userinformation, school: school, state: state, town: town, role: role, id: id, bathroompasslimit: bathroompasslimit, ifnegativeplusminus: ifnegativeplusminus, nonbathroompasslimit: nonbathroompasslimit, drinkpasslimit: drinkpasslimit, exclusivephonepassmaxstudents: exclusivephonepassmaxstudents, exclusivephonepasstimelmit: exclusivephonepasstimelmit, lengthofclass: lengthofclass, classiscurrent: classiscurrent, nameofcurrentclass: nameofcurrentclass, starttimeofcurrentclass: starttimeofcurrentclass, classid: classid, coursename: coursename, section: section, location: location, teacherid: teacherid, teacheriscalled: teacheriscalled,\n              email: email, starttime: starttime, lengthofclassesforacomputer: lengthofclassesforacomputer, inpenalty: inpenalty, stoptimepenalty: stoptimepenalty, starttimepenalty: starttimepenalty, totaltimepenalty: totaltimepenalty, alreadyused: alreadyused, teacher: teacher, Selectedclassdestination: Selectedclassdestination, currentlocation: currentlocation, locationdestination: locationdestination, firstname: firstname, lastname: lastname, ledby: ledby, grouptime: grouptime, drinkofwater: drinkofwater, exclusivetime: exclusivetime, donewithworkpass: donewithworkpass, bathroomtime: bathroomtime, nonbathroomtime: nonbathroomtime, bathroompassinuse: bathroompassinuse, totalinlineforbathroom: totalinlineforbathroom, lengthofclasses: lengthofclasses, endlastclasssubstitute: endlastclasssubstitute, sessionended: sessionended, thelastid: thelastid, phonepassduration: phonepassduration, drinkpassduration: drinkpassduration, bathroompassduration: bathroompassduration, overunder: overunder, otherpassduration: otherpassduration, maxstudentsphonepass: maxstudentsphonepass, donewithworkphonepass: donewithworkphonepass, consequenceid: consequenceid, maxstudentsbathroom: maxstudentsbathroom, linkedclass: linkedclass\n\n            })}>Settings</Text></View>}\n          <Text>{'\\n'} {'\\n'}</Text>\n\n          <View style={styles.button}>\n\n            <Text style={styles.btext} onPress={() => navigation.navigate(\"Definitions\", {\n              idofcurrentclass: idofcurrentclass, currentsessionid: currentsessionid, sessionending: sessionending, endlastclass: endlastclass, userinformation: userinformation, school: school, state: state, town: town, role: role, id: id, bathroompasslimit: bathroompasslimit, ifnegativeplusminus: ifnegativeplusminus, nonbathroompasslimit: nonbathroompasslimit, drinkpasslimit: drinkpasslimit, exclusivephonepassmaxstudents: exclusivephonepassmaxstudents, exclusivephonepasstimelmit: exclusivephonepasstimelmit, lengthofclass: lengthofclass, classiscurrent: classiscurrent, nameofcurrentclass: nameofcurrentclass, starttimeofcurrentclass: starttimeofcurrentclass, classid: classid, coursename: coursename, section: section, location: location, teacherid: teacherid, teacheriscalled: teacheriscalled,\n              email: email, starttime: starttime, lengthofclassesforacomputer: lengthofclassesforacomputer, inpenalty: inpenalty, stoptimepenalty: stoptimepenalty, starttimepenalty: starttimepenalty, totaltimepenalty: totaltimepenalty, alreadyused: alreadyused, teacher: teacher, Selectedclassdestination: Selectedclassdestination, currentlocation: currentlocation, locationdestination: locationdestination, firstname: firstname, lastname: lastname, ledby: ledby, grouptime: grouptime, exclusivetime: exclusivetime, drinkofwater: drinkofwater, donewithworkpass: donewithworkpass, bathroomtime: bathroomtime, nonbathroomtime: nonbathroomtime, bathroompassinuse: bathroompassinuse, totalinlineforbathroom: totalinlineforbathroom, lengthofclasses: lengthofclasses, endlastclasssubstitute: endlastclasssubstitute, sessionended: sessionended, thelastid: thelastid, drinkpassduration: drinkpassduration, phonepassduration: phonepassduration, bathroompassduration: bathroompassduration, overunder: overunder, otherpassduration: otherpassduration, maxstudentsphonepass: maxstudentsphonepass, donewithworkphonepass: donewithworkphonepass, consequenceid: consequenceid, maxstudentsbathroom: maxstudentsbathroom, linkedclass: linkedclass\n            })}>Definitions/Explanations</Text></View>\n          <Text>{'\\n'} {'\\n'}</Text>\n\n          <View style={styles.button}>\n\n            <Text style={styles.btext} onPress={() => navigation.navigate(\"QRCodes\", {\n              idofcurrentclass: idofcurrentclass, currentsessionid: currentsessionid, sessionending: sessionending, endlastclass: endlastclass, userinformation: userinformation, school: school, state: state, town: town, role: role, id: id, bathroompasslimit: bathroompasslimit, ifnegativeplusminus: ifnegativeplusminus, nonbathroompasslimit: nonbathroompasslimit, drinkpasslimit: drinkpasslimit, exclusivephonepassmaxstudents: exclusivephonepassmaxstudents, exclusivephonepasstimelmit: exclusivephonepasstimelmit, lengthofclass: lengthofclass, classiscurrent: classiscurrent, nameofcurrentclass: nameofcurrentclass, starttimeofcurrentclass: starttimeofcurrentclass, classid: classid, coursename: coursename, section: section, location: location, teacherid: teacherid, teacheriscalled: teacheriscalled,\n              email: email, starttime: starttime, lengthofclassesforacomputer: lengthofclassesforacomputer, inpenalty: inpenalty, stoptimepenalty: stoptimepenalty, starttimepenalty: starttimepenalty, totaltimepenalty: totaltimepenalty, alreadyused: alreadyused, teacher: teacher, Selectedclassdestination: Selectedclassdestination, currentlocation: currentlocation, locationdestination: locationdestination, firstname: firstname, lastname: lastname, ledby: ledby, grouptime: grouptime, exclusivetime: exclusivetime, drinkofwater: drinkofwater, donewithworkpass: donewithworkpass, bathroomtime: bathroomtime, nonbathroomtime: nonbathroomtime, bathroompassinuse: bathroompassinuse, totalinlineforbathroom: totalinlineforbathroom, lengthofclasses: lengthofclasses, endlastclasssubstitute: endlastclasssubstitute, sessionended: sessionended, thelastid: thelastid, drinkpassduration: drinkpassduration, phonepassduration: phonepassduration, bathroompassduration: bathroompassduration, overunder: overunder, otherpassduration: otherpassduration, maxstudentsphonepass: maxstudentsphonepass, donewithworkphonepass: donewithworkphonepass, consequenceid: consequenceid, maxstudentsbathroom: maxstudentsbathroom, linkedclass: linkedclass\n            })}>Get Your QR Codes</Text></View>\n          <Text>{'\\n'} {'\\n'}</Text>\n\n          <View><Text style={styles.paragraph2}> ___________________ </Text></View>\n          <TouchableOpacity onPress={() => signoutfunction()}>\n            <Text style={styles.paragraph2}>\n              Sign Out\n            </Text>\n          </TouchableOpacity>\n\n          <View><Text style={styles.paragraph2}> ___________________ </Text></View>\n          <TouchableOpacity onPress={() => deleteaccount()}>\n            <Text style={styles.paragraph2}>\n              Delete Account\n            </Text>\n          </TouchableOpacity>\n\n          <Text>{'\\n'} {'\\n'}{'\\n'} {'\\n'}{'\\n'} {'\\n'}{'\\n'} {'\\n'}{'\\n'}{'\\n'}{'\\n'} {'\\n'}{'\\n'} {'\\n'}{'\\n'} </Text>\n\n        </View>\n      </ScrollView>\n    </View>\n\n  );\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    backgroundColor: '#000000',\n    padding: 2,\n    alignItems: \"center\"\n  },\n  paragraph: {\n    margin: 24,\n    fontSize: 40,\n    textAlign: 'center',\n    padding: 10,\n    color: '#FFFFFF',\n    backgroundColor: '#000000',\n    fontWeight: \"bold\",\n\n  },\n  paragraph2: {\n    margin: 24,\n    fontSize: 20,\n    textAlign: 'center',\n    padding: 10,\n    color: '#FFFFFF',\n    backgroundColor: '#000000',\n    fontWeight: \"bold\"\n\n\n  },\n  paragraph9: {\n    margin: 24,\n    fontSize: 20,\n    textAlign: 'center',\n    padding: 10,\n    color: '#FFF',\n    backgroundColor: '#000000',\n\n  },\n  text: {\n    color: '#FFFFFF',\n    textAlign: \"center\"\n  },\n\n\n  section4: {\n    padding: 10,\n    height: \"20%\"\n\n  },\n  paragraph4: {\n\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    backgroundColor: '#000000',\n    color: \"#FFF\",\n\n    color: \"#FFF\",\n\n  },\n\n  scroll: {\n    width: \"100%\",\n\n  },\n  centerscroll: {\n    alignItems: \"center\",\n\n  },\n\n  button: {\n    width: \"90%\",\n    alignItems: \"center\",\n    textAlign: \"center\",\n    width: \"95%\",\n    borderColor: \"#E43522\",\n    borderWidth: 2,\n    justifyContent: \"center\",\n    color: \"#fff\",\n    backgroundColor: \"#013469\",\n    borderRadius: 20,\n  },\n\n  btext: {\n    margin: 10,\n    textAlign: \"center\",\n    fontSize: 16,\n    width: \"100%\",\n    justifyContent: \"center\",\n    color: \"#fff\",\n  },\n\n});\nexport default TeacherMainMenu; "],"mappings":"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"},"metadata":{},"sourceType":"module"}