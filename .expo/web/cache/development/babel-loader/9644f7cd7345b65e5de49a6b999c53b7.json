{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport Students from \"./Mapofstudentsawaitingconfirmation/Mapofstudentsawaitingconfirmation\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { auth, firebase } from \"../Firebase/Config\";\nimport { getAuth, onAuthStateChanged, createUserWithEmailAndPassword, sendEmailVerification } from \"@firebase/auth\";\nimport { onSnapshot, collection, addDoc, query, where, getDocs, deleteDoc, doc, setDoc, getDoc, updateDoc, arrayUnion, FieldValue } from \"@firebase/firestore\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar height = Dimensions.get(\"window\").height;\nexport default function SignUp(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _route$params = route.params,\n    idofcurrentclass = _route$params.idofcurrentclass,\n    currentsessionid = _route$params.currentsessionid,\n    endlastclass = _route$params.endlastclass,\n    userinformation = _route$params.userinformation,\n    school = _route$params.school,\n    state = _route$params.state,\n    town = _route$params.town,\n    role = _route$params.role,\n    bathroompasslimit = _route$params.bathroompasslimit,\n    ifnegativeplusminus = _route$params.ifnegativeplusminus,\n    nonbathroompasslimit = _route$params.nonbathroompasslimit,\n    exclusivephonepassmaxstudents = _route$params.exclusivephonepassmaxstudents,\n    drinkpasslimit = _route$params.drinkpasslimit,\n    exclusivephonepasstimelmit = _route$params.exclusivephonepasstimelmit,\n    lengthofclass = _route$params.lengthofclass,\n    classiscurrent = _route$params.classiscurrent,\n    nameofcurrentclass = _route$params.nameofcurrentclass,\n    starttimeofcurrentclass = _route$params.starttimeofcurrentclass,\n    classid = _route$params.classid,\n    coursename = _route$params.coursename,\n    section = _route$params.section,\n    location = _route$params.location,\n    teacherid = _route$params.teacherid,\n    teacheriscalled = _route$params.teacheriscalled,\n    email = _route$params.email,\n    starttime = _route$params.starttime,\n    lengthofclassesforacomputer = _route$params.lengthofclassesforacomputer,\n    inpenalty = _route$params.inpenalty,\n    stoptimepenalty = _route$params.stoptimepenalty,\n    starttimepenalty = _route$params.starttimepenalty,\n    totaltimepenalty = _route$params.totaltimepenalty,\n    alreadyused = _route$params.alreadyused,\n    teacher = _route$params.teacher,\n    Selectedclassdestination = _route$params.Selectedclassdestination,\n    youcangetpass = _route$params.youcangetpass,\n    currentlocation = _route$params.currentlocation,\n    locationdestination = _route$params.locationdestination,\n    ledby = _route$params.ledby,\n    grouptime = _route$params.grouptime,\n    drinkofwater = _route$params.drinkofwater,\n    exclusivetime = _route$params.exclusivetime,\n    donewithworkpass = _route$params.donewithworkpass,\n    bathroomtime = _route$params.bathroomtime,\n    nonbathroomtime = _route$params.nonbathroomtime,\n    bathroompassinuse = _route$params.bathroompassinuse,\n    totalinlineforbathroom = _route$params.totalinlineforbathroom,\n    lengthofclasses = _route$params.lengthofclasses,\n    endlastclasssubstitute = _route$params.endlastclasssubstitute,\n    sessionended = _route$params.sessionended,\n    thelastid = _route$params.thelastid,\n    phonepassduration = _route$params.phonepassduration,\n    overunder = _route$params.overunder,\n    bathroompassduration = _route$params.bathroompassduration,\n    drinkpassduration = _route$params.drinkpassduration,\n    otherpassduration = _route$params.otherpassduration,\n    maxstudentsphonepass = _route$params.maxstudentsphonepass,\n    donewithworkphonepass = _route$params.donewithworkphonepass,\n    consequenceid = _route$params.consequenceid,\n    id = _route$params.id,\n    sessionending = _route$params.sessionending,\n    maxstudentsbathroom = _route$params.maxstudentsbathroom,\n    linkedclass = _route$params.linkedclass;\n  console.log(idsfromgroup, \"Studentsawwaitingconfirmataion.js\", classid, \"Studentsawwaitingconfirmataion.js\");\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    userdata = _useState2[0],\n    setUserdata = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selected = _useState4[0],\n    setSelected = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    firstname = _useState6[0],\n    setFirstname = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    lastname = _useState8[0],\n    setLastname = _useState8[1];\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    idselected = _useState10[0],\n    setIdselected = _useState10[1];\n  var _useState11 = useState(),\n    _useState12 = _slicedToArray(_useState11, 2),\n    idsfromgroup = _useState12[0],\n    setIdsfromgroup = _useState12[1];\n  var _useState13 = useState(0),\n    _useState14 = _slicedToArray(_useState13, 2),\n    count = _useState14[0],\n    setCount = _useState14[1];\n  var _useState15 = useState(true),\n    _useState16 = _slicedToArray(_useState15, 2),\n    showspinner = _useState16[0],\n    setShowspinner = _useState16[1];\n  var _useState17 = useState(),\n    _useState18 = _slicedToArray(_useState17, 2),\n    idsofpasses = _useState18[0],\n    setIdsofpasses = _useState18[1];\n  var endpasses = function endpasses() {\n    if (sessionending < Date.now()) {\n      var q = query(collection(firebase, \"passes\"), where(\"classsessionid\", \"==\", currentsessionid), where(\"returned\", \"==\", 0));\n      var querySnapshot = getDocs(q).then(function (snapshot) {\n        var array = [];\n        snapshot.forEach(function (doc) {\n          array.push({\n            id: doc.data().id,\n            expectedreturn: doc.data().whenlimitwillbereached,\n            endofclasssession: doc.data().endofclasssession\n          });\n        });\n        if (array.length === 0) {\n          console.log(\"No passes to change\");\n        } else {\n          setIdsofpasses(array);\n          console.log(array, \"This is the pass \");\n        }\n      });\n    }\n  };\n  useEffect(function () {\n    if (typeof idsofpasses != \"undefined\") {\n      var t = Date.now();\n      for (var s = 0; s < idsofpasses.length; s++) {\n        var r = new Date(idsofpasses[s].endofclasssession);\n        updateDoc(doc(firebase, \"passes\", idsofpasses[s].id), {\n          returned: idsofpasses[s].endofclasssession,\n          timereturned: r.toLocaleTimeString([], {\n            hour12: true\n          }),\n          returnedbeforetimelimit: idsofpasses[s].expectedreturn > idsofpasses[s].endofclasssession,\n          differenceoverorunderinminutes: (idsofpasses[s].expectedreturn - idsofpasses[s].endofclasssession) / 60000\n        }).catch(function (error) {\n          console.log(error);\n          alert(error);\n        });\n      }\n    }\n  }, [idsofpasses]);\n  useEffect(function () {\n    setShowspinner(true);\n    console.log(selected, \"This is the Selected Value\");\n    setFirstname(selected.localfirstname);\n    setLastname(selected.locallastname);\n    setIdselected(selected.id);\n  }, [selected]);\n  useEffect(function () {\n    navigation.setOptions({\n      headerLeft: function headerLeft() {\n        return _jsx(TouchableOpacity, {\n          children: _jsx(Text, {\n            accessibilityLabel: \"Guest\",\n            style: styles.error\n          })\n        });\n      }\n    });\n  }, []);\n  var ifitshtere = function ifitshtere() {\n    if (sessionending < Date.now()) {\n      updateDoc(doc(firebase, \"classsessions\", currentsessionid), {\n        status: \"Completed\"\n      }).catch(function (error) {\n        console.log(error);\n        alert(\"2\", error);\n      });\n      endpasses();\n    }\n  };\n  useEffect(function () {\n    refresh3();\n  }, []);\n  function refresh3() {\n    return _refresh.apply(this, arguments);\n  }\n  function _refresh() {\n    _refresh = _asyncToGenerator(function* () {\n      if (typeof currentsessionid != \"undefined\") {\n        var docRef = doc(firebase, \"classsessions\", currentsessionid);\n        var docSnap = yield getDoc(docRef);\n        if (docSnap.exists()) {\n          ifitshtere();\n        } else {\n          console.log(\"No such document!\");\n        }\n        console.log(\"THIIIIS was NOW RUN\");\n      }\n    });\n    return _refresh.apply(this, arguments);\n  }\n  useEffect(function () {\n    getlocationsqrcodes();\n  }, []);\n  useEffect(function () {\n    return onSnapshot(doc(firebase, \"classesbeingtaught\", classid), function (doc) {\n      getlocationsqrcodes();\n    });\n  }, []);\n  function getlocationsqrcodes() {\n    return _getlocationsqrcodes.apply(this, arguments);\n  }\n  function _getlocationsqrcodes() {\n    _getlocationsqrcodes = _asyncToGenerator(function* () {\n      var q = query(collection(firebase, \"users\"), where(\"courseawaitingconfirmation\", \"==\", classid));\n      var querySnapshot = yield getDocs(q).then(function (snapshot) {\n        var userids = [];\n        var array = [];\n        snapshot.forEach(function (doc) {\n\n          userids.push(doc.data().id);\n          array.push(doc.data());\n        });\n        setIdsfromgroup(userids);\n        setUserdata(array);\n        setShowspinner(false);\n      });\n      console.log(idsfromgroup, \"here are the ids from the group\");\n    });\n    return _getlocationsqrcodes.apply(this, arguments);\n  }\n  ;\n  var enrollingAllstudents = function enrollingAllstudents() {\n    var percents = {\n      id: classid,\n      penaltyminutes: 0,\n      overunder: 0,\n      adjustments: 0,\n      level: \"Consequences For Lateness\"\n    };\n    var variable = \"\";\n    idsfromgroup.forEach(function (item) {\n      var _updateDoc;\n      console.log(item, \"item THIS IS \"), variable = item, console.log(item, \"item\", variable, \"THIS IS WHAT I printed\"), updateDoc(doc(firebase, \"users\", variable), (_updateDoc = {}, _defineProperty(_updateDoc, classid, percents), _defineProperty(_updateDoc, \"courseawaitingconfirmation\", \"\"), _defineProperty(_updateDoc, \"inpenalty\" + classid, false), _updateDoc)).catch(function (error) {\n        console.log(error);\n        alert(error);\n      }), updateDoc(doc(firebase, \"classesbeingtaught\", classid), _defineProperty({}, variable, variable)).catch(function (error) {\n        console.log(error);\n        alert(error);\n      }), console.log(variable, \"THIS IS WHAT I printed\");\n    });\n  };\n  var enrollingstudent = function enrollingstudent() {\n    var percents = {\n      id: classid,\n      penaltyminutes: 0,\n      overunder: 0,\n      adjustments: 0,\n      level: \"Consequences For Lateness\"\n    };\n    setShowspinner(true);\n    updateDoc(doc(firebase, \"users\", idselected), _defineProperty({}, classid, percents)).catch(function (error) {\n      console.log(error);\n      alert(error);\n    });\n    updateDoc(doc(firebase, \"classesbeingtaught\", classid), _defineProperty({}, idselected, idselected)).catch(function (error) {\n      console.log(error);\n      alert(error);\n    });\n    removestudent();\n  };\n  var removestudent = function removestudent() {\n    updateDoc(doc(firebase, \"users\", idselected), {\n      courseawaitingconfirmation: \"\"\n    }).catch(function (error) {\n      console.log(error);\n      alert(error);\n    });\n    setShowspinner(false);\n  };\n  return _jsxs(SafeAreaView, {\n    style: styles.largercontainer,\n    children: [_jsx(View, {\n      style: styles.container1,\n      children: coursename ? _jsxs(Text, {\n        style: styles.error,\n        children: [coursename, \", Section \", section, \" \"]\n      }) : _jsx(Text, {\n        style: styles.error,\n        onPress: function onPress() {\n          return navigation.navigate(\"ClassesTeacher\", {\n            idofcurrentclass: idofcurrentclass,\n            currentsessionid: currentsessionid,\n            sessionending: sessionending,\n            endlastclass: endlastclass,\n            userinformation: userinformation,\n            school: school,\n            state: state,\n            town: town,\n            role: role,\n            id: id,\n            bathroompasslimit: bathroompasslimit,\n            ifnegativeplusminus: ifnegativeplusminus,\n            drinkpasslimit: drinkpasslimit,\n            nonbathroompasslimit: nonbathroompasslimit,\n            exclusivephonepassmaxstudents: exclusivephonepassmaxstudents,\n            exclusivephonepasstimelmit: exclusivephonepasstimelmit,\n            lengthofclass: lengthofclass,\n            classiscurrent: classiscurrent,\n            nameofcurrentclass: nameofcurrentclass,\n            starttimeofcurrentclass: starttimeofcurrentclass,\n            classid: classid,\n            coursename: coursename,\n            section: section,\n            location: location,\n            teacherid: teacherid,\n            teacheriscalled: teacheriscalled,\n            email: email,\n            starttime: starttime,\n            lengthofclassesforacomputer: lengthofclassesforacomputer,\n            inpenalty: inpenalty,\n            stoptimepenalty: stoptimepenalty,\n            starttimepenalty: starttimepenalty,\n            totaltimepenalty: totaltimepenalty,\n            alreadyused: alreadyused,\n            teacher: teacher,\n            Selectedclassdestination: Selectedclassdestination,\n            youcangetpass: youcangetpass,\n            currentlocation: currentlocation,\n            locationdestination: locationdestination,\n            firstname: firstname,\n            lastname: lastname,\n            ledby: ledby,\n            grouptime: grouptime,\n            drinkofwater: drinkofwater,\n            exclusivetime: exclusivetime,\n            donewithworkpass: donewithworkpass,\n            bathroomtime: bathroomtime,\n            nonbathroomtime: nonbathroomtime,\n            bathroompassinuse: bathroompassinuse,\n            totalinlineforbathroom: totalinlineforbathroom,\n            lengthofclasses: lengthofclasses,\n            endlastclasssubstitute: endlastclasssubstitute,\n            sessionended: sessionended,\n            thelastid: thelastid,\n            phonepassduration: phonepassduration,\n            overunder: overunder,\n            bathroompassduration: bathroompassduration,\n            drinkpassduration: drinkpassduration,\n            otherpassduration: otherpassduration,\n            maxstudentsphonepass: maxstudentsphonepass,\n            donewithworkphonepass: donewithworkphonepass,\n            consequenceid: consequenceid,\n            maxstudentsbathroom: maxstudentsbathroom,\n            linkedclass: linkedclass\n          });\n        },\n        children: \"No Class is \\\"Active\\\"\"\n      })\n    }), _jsx(Pressable, {\n      style: styles.container2,\n      children: _jsx(Students, {\n        userdata: userdata,\n        id: id,\n        selected: selected,\n        setSelected: setSelected,\n        idselected: idselected,\n        setIdselected: setIdselected\n      })\n    }), _jsxs(ScrollView, {\n      children: [_jsx(Pressable, {\n        style: styles.section5,\n        children: firstname ? _jsxs(Text, {\n          style: styles.paragraph2,\n          onPress: function onPress() {\n            return removestudent();\n          },\n          children: [\"Do Not Add Student\", '\\n', \"Remove Student from Waiting List\"]\n        }) : _jsxs(Text, {\n          style: styles.paragraph2,\n          children: [\" \", '\\n', \" \"]\n        })\n      }), _jsx(Text, {\n        children: '\\n'\n      }), _jsx(Pressable, {\n        style: styles.section5,\n        children: firstname ? _jsx(Text, {\n          style: styles.paragraph2,\n          onPress: function onPress() {\n            return enrollingstudent();\n          },\n          children: \"Enroll Student\"\n        }) : _jsx(Text, {\n          style: styles.paragraph2,\n          onPress: function onPress() {\n            return enrollingAllstudents();\n          },\n          children: \"Enroll All Students\"\n        })\n      }), _jsx(Text, {\n        children: '\\n'\n      }), _jsxs(View, {\n        style: styles.section3,\n        children: [_jsx(View, {\n          children: _jsx(ActivityIndicator, {\n            size: \"large\",\n            color: \"#FFF\",\n            animating: showspinner,\n            style: {\n              position: 'absolute',\n              alignItems: 'center',\n              justifyContent: 'center',\n              left: 0,\n              right: 0,\n              top: 0,\n              bottom: 0\n            }\n          })\n        }), coursename ? _jsx(Text, {\n          style: styles.paragraph2,\n          onPress: function onPress() {\n            return navigation.navigate(\"ClassesTeacher\", {\n              idofcurrentclass: idofcurrentclass,\n              currentsessionid: currentsessionid,\n              sessionending: sessionending,\n              endlastclass: endlastclass,\n              userinformation: userinformation,\n              school: school,\n              state: state,\n              town: town,\n              role: role,\n              id: id,\n              bathroompasslimit: bathroompasslimit,\n              ifnegativeplusminus: ifnegativeplusminus,\n              drinkpasslimit: drinkpasslimit,\n              nonbathroompasslimit: nonbathroompasslimit,\n              exclusivephonepassmaxstudents: exclusivephonepassmaxstudents,\n              exclusivephonepasstimelmit: exclusivephonepasstimelmit,\n              lengthofclass: lengthofclass,\n              classiscurrent: classiscurrent,\n              nameofcurrentclass: nameofcurrentclass,\n              starttimeofcurrentclass: starttimeofcurrentclass,\n              classid: classid,\n              coursename: coursename,\n              section: section,\n              location: location,\n              teacherid: teacherid,\n              teacheriscalled: teacheriscalled,\n              email: email,\n              starttime: starttime,\n              lengthofclassesforacomputer: lengthofclassesforacomputer,\n              inpenalty: inpenalty,\n              stoptimepenalty: stoptimepenalty,\n              starttimepenalty: starttimepenalty,\n              totaltimepenalty: totaltimepenalty,\n              alreadyused: alreadyused,\n              teacher: teacher,\n              Selectedclassdestination: Selectedclassdestination,\n              youcangetpass: youcangetpass,\n              currentlocation: currentlocation,\n              locationdestination: locationdestination,\n              firstname: firstname,\n              lastname: lastname,\n              ledby: ledby,\n              grouptime: grouptime,\n              drinkofwater: drinkofwater,\n              exclusivetime: exclusivetime,\n              donewithworkpass: donewithworkpass,\n              bathroomtime: bathroomtime,\n              nonbathroomtime: nonbathroomtime,\n              bathroompassinuse: bathroompassinuse,\n              totalinlineforbathroom: totalinlineforbathroom,\n              lengthofclasses: lengthofclasses,\n              endlastclasssubstitute: endlastclasssubstitute,\n              sessionended: sessionended,\n              thelastid: thelastid,\n              phonepassduration: phonepassduration,\n              overunder: overunder,\n              bathroompassduration: bathroompassduration,\n              drinkpassduration: drinkpassduration,\n              otherpassduration: otherpassduration,\n              maxstudentsphonepass: maxstudentsphonepass,\n              donewithworkphonepass: donewithworkphonepass,\n              consequenceid: consequenceid,\n              maxstudentsbathroom: maxstudentsbathroom,\n              linkedclass: linkedclass\n            });\n          },\n          children: \"Switch \\\"Active\\\" Class \"\n        }) : _jsx(Text, {\n          style: styles.paragraph2,\n          onPress: function onPress() {\n            return navigation.navigate(\"ClassesTeacher\", {\n              idofcurrentclass: idofcurrentclass,\n              currentsessionid: currentsessionid,\n              sessionending: sessionending,\n              endlastclass: endlastclass,\n              userinformation: userinformation,\n              school: school,\n              state: state,\n              town: town,\n              role: role,\n              id: id,\n              bathroompasslimit: bathroompasslimit,\n              ifnegativeplusminus: ifnegativeplusminus,\n              drinkpasslimit: drinkpasslimit,\n              nonbathroompasslimit: nonbathroompasslimit,\n              exclusivephonepassmaxstudents: exclusivephonepassmaxstudents,\n              exclusivephonepasstimelmit: exclusivephonepasstimelmit,\n              lengthofclass: lengthofclass,\n              classiscurrent: classiscurrent,\n              nameofcurrentclass: nameofcurrentclass,\n              starttimeofcurrentclass: starttimeofcurrentclass,\n              classid: classid,\n              coursename: coursename,\n              section: section,\n              location: location,\n              teacherid: teacherid,\n              teacheriscalled: teacheriscalled,\n              email: email,\n              starttime: starttime,\n              lengthofclassesforacomputer: lengthofclassesforacomputer,\n              inpenalty: inpenalty,\n              stoptimepenalty: stoptimepenalty,\n              starttimepenalty: starttimepenalty,\n              totaltimepenalty: totaltimepenalty,\n              alreadyused: alreadyused,\n              teacher: teacher,\n              Selectedclassdestination: Selectedclassdestination,\n              youcangetpass: youcangetpass,\n              currentlocation: currentlocation,\n              locationdestination: locationdestination,\n              firstname: firstname,\n              lastname: lastname,\n              ledby: ledby,\n              grouptime: grouptime,\n              drinkofwater: drinkofwater,\n              exclusivetime: exclusivetime,\n              donewithworkpass: donewithworkpass,\n              bathroomtime: bathroomtime,\n              nonbathroomtime: nonbathroomtime,\n              bathroompassinuse: bathroompassinuse,\n              totalinlineforbathroom: totalinlineforbathroom,\n              lengthofclasses: lengthofclasses,\n              endlastclasssubstitute: endlastclasssubstitute,\n              sessionended: sessionended,\n              thelastid: thelastid,\n              phonepassduration: phonepassduration,\n              overunder: overunder,\n              bathroompassduration: bathroompassduration,\n              drinkpassduration: drinkpassduration,\n              otherpassduration: otherpassduration,\n              maxstudentsphonepass: maxstudentsphonepass,\n              donewithworkphonepass: donewithworkphonepass,\n              consequenceid: consequenceid,\n              maxstudentsbathroom: maxstudentsbathroom,\n              linkedclass: linkedclass\n            });\n          },\n          children: \"Make a Class \\\"Active\\\" \"\n        }), _jsx(Text, {\n          children: '\\n'\n        }), _jsxs(Text, {\n          style: styles.paragraph2,\n          onPress: function onPress() {\n            return navigation.navigate(\"Studentsenrolled\", {\n              idofcurrentclass: idofcurrentclass,\n              currentsessionid: currentsessionid,\n              sessionending: sessionending,\n              endlastclass: endlastclass,\n              userinformation: userinformation,\n              school: school,\n              state: state,\n              town: town,\n              role: role,\n              id: id,\n              bathroompasslimit: bathroompasslimit,\n              ifnegativeplusminus: ifnegativeplusminus,\n              nonbathroompasslimit: nonbathroompasslimit,\n              drinkpasslimit: drinkpasslimit,\n              exclusivephonepassmaxstudents: exclusivephonepassmaxstudents,\n              exclusivephonepasstimelmit: exclusivephonepasstimelmit,\n              lengthofclass: lengthofclass,\n              classiscurrent: classiscurrent,\n              nameofcurrentclass: nameofcurrentclass,\n              starttimeofcurrentclass: starttimeofcurrentclass,\n              classid: classid,\n              coursename: coursename,\n              section: section,\n              location: location,\n              teacherid: teacherid,\n              teacheriscalled: teacheriscalled,\n              email: email,\n              starttime: starttime,\n              lengthofclassesforacomputer: lengthofclassesforacomputer,\n              inpenalty: inpenalty,\n              stoptimepenalty: stoptimepenalty,\n              starttimepenalty: starttimepenalty,\n              totaltimepenalty: totaltimepenalty,\n              alreadyused: alreadyused,\n              teacher: teacher,\n              Selectedclassdestination: Selectedclassdestination,\n              youcangetpass: youcangetpass,\n              currentlocation: currentlocation,\n              locationdestination: locationdestination,\n              firstname: firstname,\n              lastname: lastname,\n              ledby: ledby,\n              grouptime: grouptime,\n              drinkofwater: drinkofwater,\n              exclusivetime: exclusivetime,\n              donewithworkpass: donewithworkpass,\n              bathroomtime: bathroomtime,\n              nonbathroomtime: nonbathroomtime,\n              bathroompassinuse: bathroompassinuse,\n              totalinlineforbathroom: totalinlineforbathroom,\n              lengthofclasses: lengthofclasses,\n              endlastclasssubstitute: endlastclasssubstitute,\n              sessionended: sessionended,\n              thelastid: thelastid,\n              phonepassduration: phonepassduration,\n              overunder: overunder,\n              bathroompassduration: bathroompassduration,\n              drinkpassduration: drinkpassduration,\n              otherpassduration: otherpassduration,\n              maxstudentsphonepass: maxstudentsphonepass,\n              donewithworkphonepass: donewithworkphonepass,\n              consequenceid: consequenceid,\n              maxstudentsbathroom: maxstudentsbathroom,\n              linkedclass: linkedclass\n            });\n          },\n          children: [\"See students enrolled\", '\\n', \"in the \\\"Active\\\" class \"]\n        }), _jsx(Text, {})]\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#000\",\n    alignItems: \"center\",\n    width: \"100%\"\n  },\n  largercontainer: {\n    height: height,\n    backgroundColor: \"#000\"\n  },\n  container1: {\n    height: \"10%\",\n    backgroundColor: '#000',\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  error: {\n    backgroundColor: '#000',\n    color: \"#FFF\",\n    marginLeft: \"3%\",\n    marginRight: \"3%\",\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  container2: {\n    height: \"30%\",\n    backgroundColor: \"#013469\",\n    width: \"100%\"\n  },\n  paragraph: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    backgroundColor: '#000000',\n    color: \"#fff\",\n    height: \"100%\",\n    textAlign: \"center\",\n    marginTop: \"10%\"\n  },\n  Newrow: {\n    backgroundColor: '#000000',\n    margin: 2,\n    textAlign: \"center\",\n    fontSize: 20,\n    width: \"90%\",\n    borderColor: \"#E43522\",\n    borderWidth: 4,\n    justifyContent: \"center\",\n    color: \"#fff\"\n  },\n  Newrowa: {\n    backgroundColor: '#000000',\n    margin: 4,\n    textAlign: \"center\",\n    fontSize: 20,\n    borderColor: \"#E43522\",\n    borderWidth: 4,\n    justifyContent: \"center\",\n    color: \"#fff\",\n    flex: 1\n  },\n  Newrowb: {\n    backgroundColor: '#000000',\n    margin: 4,\n    textAlign: \"center\",\n    fontSize: 20,\n    borderColor: \"#E43522\",\n    borderWidth: 4,\n    justifyContent: \"center\",\n    color: \"#fff\",\n    flex: .4\n  },\n  paragraph2: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: \"center\",\n    backgroundColor: '#000000',\n    color: \"#fff\",\n    justifyContent: \"center\"\n  },\n  paragraph4: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    backgroundColor: '#000000',\n    color: \"#fff\",\n    justifyContent: \"center\",\n    lineHeight: 30\n  },\n  section3: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    backgroundColor: \"#000\",\n    color: \"#fff\",\n    alignContent: \"center\",\n    height: \"50%\"\n  },\n  section5: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    backgroundColor: \"#000\",\n    color: \"#fff\",\n    alignContent: \"center\",\n    height: \"10%\"\n  },\n  paragraph6: {\n    color: \"#fff\",\n    fontSize: 17,\n    marginRight: 7\n  },\n  textContainer: {\n    flexDirection: 'row',\n    height: 50,\n    justifyContent: 'center',\n    marginBottom: 20\n  },\n  paragraph7: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: \"center\",\n    backgroundColor: '#000000',\n    color: \"#FFF\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","Students","auth","firebase","getAuth","onAuthStateChanged","createUserWithEmailAndPassword","sendEmailVerification","onSnapshot","collection","addDoc","query","where","getDocs","deleteDoc","doc","setDoc","getDoc","updateDoc","arrayUnion","FieldValue","height","Dimensions","get","SignUp","route","navigation","params","idofcurrentclass","currentsessionid","endlastclass","userinformation","school","state","town","role","bathroompasslimit","ifnegativeplusminus","nonbathroompasslimit","exclusivephonepassmaxstudents","drinkpasslimit","exclusivephonepasstimelmit","lengthofclass","classiscurrent","nameofcurrentclass","starttimeofcurrentclass","classid","coursename","section","location","teacherid","teacheriscalled","email","starttime","lengthofclassesforacomputer","inpenalty","stoptimepenalty","starttimepenalty","totaltimepenalty","alreadyused","teacher","Selectedclassdestination","youcangetpass","currentlocation","locationdestination","ledby","grouptime","drinkofwater","exclusivetime","donewithworkpass","bathroomtime","nonbathroomtime","bathroompassinuse","totalinlineforbathroom","lengthofclasses","endlastclasssubstitute","sessionended","thelastid","phonepassduration","overunder","bathroompassduration","drinkpassduration","otherpassduration","maxstudentsphonepass","donewithworkphonepass","consequenceid","id","sessionending","maxstudentsbathroom","linkedclass","console","log","idsfromgroup","userdata","setUserdata","selected","setSelected","firstname","setFirstname","lastname","setLastname","idselected","setIdselected","setIdsfromgroup","count","setCount","showspinner","setShowspinner","idsofpasses","setIdsofpasses","endpasses","Date","now","q","querySnapshot","then","snapshot","array","forEach","push","data","expectedreturn","whenlimitwillbereached","endofclasssession","length","t","s","r","returned","timereturned","toLocaleTimeString","hour12","returnedbeforetimelimit","differenceoverorunderinminutes","catch","error","alert","localfirstname","locallastname","setOptions","headerLeft","styles","ifitshtere","status","refresh3","docRef","docSnap","exists","getlocationsqrcodes","userids","enrollingAllstudents","percents","penaltyminutes","adjustments","level","variable","item","enrollingstudent","removestudent","courseawaitingconfirmation","largercontainer","container1","navigate","container2","section5","paragraph2","section3","position","alignItems","justifyContent","left","right","top","bottom","StyleSheet","create","container","backgroundColor","width","color","marginLeft","marginRight","fontSize","fontWeight","paragraph","textAlign","marginTop","Newrow","margin","borderColor","borderWidth","Newrowa","flex","Newrowb","paragraph4","lineHeight","alignContent","paragraph6","textContainer","flexDirection","marginBottom","paragraph7"],"sources":["/Users/matt/Desktop/hallpasstesting/Navigation/Components/Studentsawaitingconfirmation.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport Students from './Mapofstudentsawaitingconfirmation/Mapofstudentsawaitingconfirmation';\n\nimport { SafeAreaView, Text, View, TextInput, KeyboardAvoidingView, Platform, StyleSheet, ScrollView, TouchableOpacity, Dimensions, ActivityIndicator, Pressable } from 'react-native';\n\nimport { auth, firebase } from \"../Firebase/Config\";\nimport { getAuth, onAuthStateChanged, createUserWithEmailAndPassword, sendEmailVerification } from \"@firebase/auth\";\nimport { onSnapshot, collection, addDoc, query, where, getDocs, deleteDoc, doc, setDoc, getDoc, updateDoc, arrayUnion, FieldValue } from \"@firebase/firestore\";\n\n\nconst height = Dimensions.get(\"window\").height;\n\nexport default function SignUp({ route, navigation }) {\n\n    const { idofcurrentclass, currentsessionid, endlastclass, userinformation, school, state, town, role, bathroompasslimit, ifnegativeplusminus, nonbathroompasslimit, exclusivephonepassmaxstudents, drinkpasslimit, exclusivephonepasstimelmit, lengthofclass, classiscurrent, nameofcurrentclass, starttimeofcurrentclass, classid, coursename, section, location, teacherid, teacheriscalled,\n        email, starttime, lengthofclassesforacomputer, inpenalty, stoptimepenalty, starttimepenalty, totaltimepenalty, alreadyused, teacher, Selectedclassdestination, youcangetpass, currentlocation, locationdestination, ledby, grouptime, drinkofwater, exclusivetime, donewithworkpass, bathroomtime, nonbathroomtime, bathroompassinuse, totalinlineforbathroom, lengthofclasses, endlastclasssubstitute, sessionended, thelastid, phonepassduration, overunder, bathroompassduration,  drinkpassduration, otherpassduration, maxstudentsphonepass, donewithworkphonepass, consequenceid, id, sessionending, maxstudentsbathroom, linkedclass\n    } = route.params;\n    console.log(idsfromgroup, \"Studentsawwaitingconfirmataion.js\", classid, \"Studentsawwaitingconfirmataion.js\");\n\n\n    const [userdata, setUserdata] = useState([]);\n    const [selected, setSelected] = useState(\"\");\n\n    const [firstname, setFirstname] = useState(\"\");\n    const [lastname, setLastname] = useState(\"\");\n    const [idselected, setIdselected] = useState(\"\");\n    const [idsfromgroup, setIdsfromgroup] = useState();\n    const [count, setCount] = useState(0);\n\n    const [showspinner, setShowspinner] = useState(true);\n    const [idsofpasses, setIdsofpasses] = useState();\n\n\n\n    const endpasses = () => {\n\n        if (sessionending < Date.now()) {\n            const q = query(collection(firebase, \"passes\"), where(\"classsessionid\", \"==\", currentsessionid), where(\"returned\", \"==\", 0));\n\n            const querySnapshot = getDocs(q)\n                .then(function (snapshot) {\n                    let array = []\n                    snapshot.forEach(doc => {\n                        array.push({id: doc.data().id, expectedreturn: doc.data().whenlimitwillbereached,endofclasssession: doc.data().endofclasssession })\n                    })\n                    if (array.length === 0) {\n                        console.log(\"No passes to change\")\n                    } else {\n                        setIdsofpasses(array); console.log(array, \"This is the pass \");\n                    }\n                })\n        }\n\n    }\n    useEffect(() => {\n        if (typeof idsofpasses != \"undefined\") {\n            const t = Date.now();\n          \n            for (let s = 0; s < idsofpasses.length; s++) {\n\n                const r = new Date(idsofpasses[s].endofclasssession);\n\n                updateDoc(doc(firebase, \"passes\", idsofpasses[s].id), {\n\n                    returned: idsofpasses[s].endofclasssession,\n                    timereturned: r.toLocaleTimeString([], { hour12: true }),\n                    returnedbeforetimelimit: idsofpasses[s].expectedreturn > idsofpasses[s].endofclasssession,\n                    differenceoverorunderinminutes: (idsofpasses[s].expectedreturn - idsofpasses[s].endofclasssession) / 60000,\n\n\n                }).catch((error) => {\n                    console.log(error); alert(error);\n                })\n            }\n        }\n    }, [idsofpasses]);\n\n\n    useEffect(() => {\n\n        setShowspinner(true);\n\n        console.log(selected, \"This is the Selected Value\")\n        setFirstname(selected.localfirstname)\n        setLastname(selected.locallastname)\n        setIdselected(selected.id)\n\n    }, [selected]);\n\n    useEffect(() => {\n        navigation.setOptions({\n            headerLeft: () => (\n                <TouchableOpacity>\n                    <Text accessibilityLabel=\"Guest\" style={styles.error}>\n                    </Text>\n                </TouchableOpacity>\n            ),\n        });\n\n}, []);\n\nconst ifitshtere = () => {\n    if (sessionending < Date.now()) {\n        updateDoc(doc(firebase, \"classsessions\", currentsessionid), {\n            status: \"Completed\"\n        })\n            .catch(error => {\n                console.log(error); alert(\"2\", error);\n            })\n        endpasses();\n    }\n}\n\nuseEffect(() => {\n    refresh3();\n}, []);\n\n\nasync function refresh3() {\n\n    if (typeof currentsessionid != \"undefined\") {\n        const docRef = doc(firebase, \"classsessions\", currentsessionid);\n\n        const docSnap = await getDoc(docRef);\n\n        if (docSnap.exists()) {\n            ifitshtere();\n        } else {\n            // doc.data() will be undefined in this case\n            console.log(\"No such document!\");\n        }\n        console.log(\"THIIIIS was NOW RUN\")\n\n    }\n}\n\n\n    useEffect(() => {\n        getlocationsqrcodes()\n    }, []);\n\nuseEffect(() =>\nonSnapshot(doc(firebase, \"classesbeingtaught\", classid), (doc) => {\n    getlocationsqrcodes()\n}\n), []);\n\n    async function getlocationsqrcodes() {\n        const q = query(collection(firebase, \"users\"), where(\"courseawaitingconfirmation\", \"==\", classid));\n\n        const querySnapshot = await getDocs(q)\n\n\n            .then(function (snapshot) {\n                const userids = []\n                const array = []\n                snapshot.forEach(doc => {\n                    // userids.push({ id: doc.data().id, totalcourses: doc.data().totalcourses })\n\n                    userids.push(doc.data().id)\n\n                    array.push(doc.data())\n                })\n                setIdsfromgroup(userids);\n                setUserdata(array);\n                setShowspinner(false);\n            })\n\n        console.log(idsfromgroup, \"here are the ids from the group\")\n\n    };\n\n\n    const enrollingAllstudents = () => {\n        const percents = { id: classid, penaltyminutes: 0, overunder: 0, adjustments: 0, level: \"Consequences For Lateness\" }\n        let variable = \"\";\n\n        idsfromgroup.forEach((item) => {\n            console.log(item, \"item THIS IS \"),\n\n                variable = item,\n                console.log(item, \"item\", variable, \"THIS IS WHAT I printed\"),\n\n                updateDoc(doc(firebase, \"users\", variable), {\n                    [classid]: percents,\n                    courseawaitingconfirmation: \"\",\n                    [\"inpenalty\" + classid]: false,\n                    //   [starttime]: null,\n                    //   [stoptime]: null,\n                    //   [totaltime]: 0,\n\n                }).catch((error) => {\n                    console.log(error); alert(error);\n                }),\n\n                updateDoc(doc(firebase, \"classesbeingtaught\", classid), {\n                    [variable]: variable,\n                }).catch((error) => {\n                    console.log(error); alert(error);\n                }),\n\n                console.log(variable, \"THIS IS WHAT I printed\")\n\n        })\n\n\n    }\n\n\n    const enrollingstudent = () => {\n        const percents = { id: classid, penaltyminutes: 0, overunder: 0, adjustments: 0, level: \"Consequences For Lateness\" }\n        setShowspinner(true);\n\n        updateDoc(doc(firebase, \"users\", idselected), {\n            [classid]: percents\n\n        }).catch((error) => {\n            console.log(error); alert(error);\n        })\n\n        updateDoc(doc(firebase, \"classesbeingtaught\", classid), {\n            [idselected]: idselected,\n        }).catch((error) => {\n            console.log(error); alert(error);\n        })\n\n        removestudent();\n\n\n    }\n\n    const removestudent = () => {\n\n        updateDoc(doc(firebase, \"users\", idselected), {\n            courseawaitingconfirmation: \"\"\n        }).catch((error) => {\n            console.log(error); alert(error);\n        })\n\n        setShowspinner(false);\n    }\n\n    return (\n        <SafeAreaView style={styles.largercontainer}>\n            <View style={styles.container1}>\n                {coursename ? <Text style={styles.error}>{coursename}, Section {section} </Text> :\n                    <Text style={styles.error} onPress={() => navigation.navigate(\"ClassesTeacher\", {\n                        idofcurrentclass: idofcurrentclass, currentsessionid: currentsessionid, sessionending: sessionending, endlastclass: endlastclass, userinformation: userinformation, school: school, state: state, town: town, role: role, id: id, bathroompasslimit: bathroompasslimit, ifnegativeplusminus: ifnegativeplusminus, drinkpasslimit:drinkpasslimit, nonbathroompasslimit: nonbathroompasslimit, exclusivephonepassmaxstudents: exclusivephonepassmaxstudents, exclusivephonepasstimelmit: exclusivephonepasstimelmit, lengthofclass: lengthofclass, classiscurrent: classiscurrent, nameofcurrentclass: nameofcurrentclass, starttimeofcurrentclass: starttimeofcurrentclass, classid: classid, coursename: coursename, section: section, location: location, teacherid: teacherid, teacheriscalled: teacheriscalled,\n                        email: email, starttime: starttime, lengthofclassesforacomputer: lengthofclassesforacomputer, inpenalty: inpenalty, stoptimepenalty: stoptimepenalty, starttimepenalty: starttimepenalty, totaltimepenalty: totaltimepenalty, alreadyused: alreadyused, teacher: teacher, Selectedclassdestination: Selectedclassdestination, youcangetpass: youcangetpass, currentlocation: currentlocation, locationdestination: locationdestination, firstname: firstname, lastname: lastname, ledby: ledby, grouptime: grouptime, drinkofwater:drinkofwater, exclusivetime: exclusivetime, donewithworkpass: donewithworkpass, bathroomtime: bathroomtime, nonbathroomtime: nonbathroomtime, bathroompassinuse: bathroompassinuse, totalinlineforbathroom: totalinlineforbathroom, lengthofclasses: lengthofclasses, endlastclasssubstitute: endlastclasssubstitute, sessionended: sessionended, thelastid: thelastid, phonepassduration: phonepassduration, overunder: overunder, bathroompassduration: bathroompassduration,  drinkpassduration:drinkpassduration,otherpassduration: otherpassduration, maxstudentsphonepass: maxstudentsphonepass, donewithworkphonepass: donewithworkphonepass, consequenceid: consequenceid, maxstudentsbathroom:maxstudentsbathroom, linkedclass:linkedclass\n\n\n                    })}>No Class is \"Active\"</Text>}\n            </View>\n\n            <Pressable style={styles.container2}>\n\n                <Students userdata={userdata} id={id} selected={selected} setSelected={setSelected} idselected={idselected} setIdselected={setIdselected} />\n\n            </Pressable>\n            <ScrollView>\n                <Pressable style={styles.section5}>\n                    {firstname ? <Text style={styles.paragraph2} onPress={() => removestudent()}>Do Not Add Student{'\\n'}Remove Student from Waiting List</Text> : <Text style={styles.paragraph2} > {'\\n'} </Text>}\n                </Pressable>\n                <Text>{'\\n'}</Text>\n                <Pressable style={styles.section5}>\n                    {firstname ? <Text style={styles.paragraph2} onPress={() => enrollingstudent()} >Enroll Student</Text> : <Text style={styles.paragraph2} onPress={() => enrollingAllstudents()} >Enroll All Students</Text>}\n\n                </Pressable>\n                <Text>{'\\n'}</Text>\n\n\n                <View style={styles.section3}>\n\n                    <View><ActivityIndicator\n                        size=\"large\"\n                        color=\"#FFF\"\n                        animating={showspinner}\n                        style={{\n                            position: 'absolute',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            left: 0,\n                            right: 0,\n                            top: 0,\n                            bottom: 0,\n                        }} /></View>\n\n                    {coursename ? <Text style={styles.paragraph2} onPress={() => navigation.navigate(\"ClassesTeacher\", {\n                        idofcurrentclass: idofcurrentclass, currentsessionid: currentsessionid, sessionending: sessionending, endlastclass: endlastclass, userinformation: userinformation, school: school, state: state, town: town, role: role, id: id, bathroompasslimit: bathroompasslimit, ifnegativeplusminus: ifnegativeplusminus, drinkpasslimit:drinkpasslimit, nonbathroompasslimit: nonbathroompasslimit, exclusivephonepassmaxstudents: exclusivephonepassmaxstudents, exclusivephonepasstimelmit: exclusivephonepasstimelmit, lengthofclass: lengthofclass, classiscurrent: classiscurrent, nameofcurrentclass: nameofcurrentclass, starttimeofcurrentclass: starttimeofcurrentclass, classid: classid, coursename: coursename, section: section, location: location, teacherid: teacherid, teacheriscalled: teacheriscalled,\n                        email: email, starttime: starttime, lengthofclassesforacomputer: lengthofclassesforacomputer, inpenalty: inpenalty, stoptimepenalty: stoptimepenalty, starttimepenalty: starttimepenalty, totaltimepenalty: totaltimepenalty, alreadyused: alreadyused, teacher: teacher, Selectedclassdestination: Selectedclassdestination, youcangetpass: youcangetpass, currentlocation: currentlocation, locationdestination: locationdestination, firstname: firstname, lastname: lastname, ledby: ledby, grouptime: grouptime, drinkofwater:drinkofwater,exclusivetime: exclusivetime, donewithworkpass: donewithworkpass, bathroomtime: bathroomtime, nonbathroomtime: nonbathroomtime, bathroompassinuse: bathroompassinuse, totalinlineforbathroom: totalinlineforbathroom, lengthofclasses: lengthofclasses, endlastclasssubstitute: endlastclasssubstitute, sessionended: sessionended, thelastid: thelastid, phonepassduration: phonepassduration, overunder: overunder, bathroompassduration: bathroompassduration,  drinkpassduration:drinkpassduration,otherpassduration: otherpassduration, maxstudentsphonepass: maxstudentsphonepass, donewithworkphonepass: donewithworkphonepass, consequenceid: consequenceid, maxstudentsbathroom:maxstudentsbathroom,linkedclass:linkedclass\n                    })} >Switch \"Active\" Class </Text> : <Text style={styles.paragraph2} onPress={() => navigation.navigate(\"ClassesTeacher\", {\n                        idofcurrentclass: idofcurrentclass, currentsessionid: currentsessionid, sessionending: sessionending, endlastclass: endlastclass, userinformation: userinformation, school: school, state: state, town: town, role: role, id: id, bathroompasslimit: bathroompasslimit, ifnegativeplusminus: ifnegativeplusminus, drinkpasslimit:drinkpasslimit, nonbathroompasslimit: nonbathroompasslimit, exclusivephonepassmaxstudents: exclusivephonepassmaxstudents, exclusivephonepasstimelmit: exclusivephonepasstimelmit, lengthofclass: lengthofclass, classiscurrent: classiscurrent, nameofcurrentclass: nameofcurrentclass, starttimeofcurrentclass: starttimeofcurrentclass, classid: classid, coursename: coursename, section: section, location: location, teacherid: teacherid, teacheriscalled: teacheriscalled,\n                        email: email, starttime: starttime, lengthofclassesforacomputer: lengthofclassesforacomputer, inpenalty: inpenalty, stoptimepenalty: stoptimepenalty, starttimepenalty: starttimepenalty, totaltimepenalty: totaltimepenalty, alreadyused: alreadyused, teacher: teacher, Selectedclassdestination: Selectedclassdestination, youcangetpass: youcangetpass, currentlocation: currentlocation, locationdestination: locationdestination, firstname: firstname, lastname: lastname, ledby: ledby, grouptime: grouptime, drinkofwater:drinkofwater,exclusivetime: exclusivetime, donewithworkpass: donewithworkpass, bathroomtime: bathroomtime, nonbathroomtime: nonbathroomtime, bathroompassinuse: bathroompassinuse, totalinlineforbathroom: totalinlineforbathroom, lengthofclasses: lengthofclasses, endlastclasssubstitute: endlastclasssubstitute, sessionended: sessionended, thelastid: thelastid, phonepassduration: phonepassduration, overunder: overunder, bathroompassduration: bathroompassduration,  drinkpassduration:drinkpassduration,otherpassduration: otherpassduration, maxstudentsphonepass: maxstudentsphonepass, donewithworkphonepass: donewithworkphonepass, consequenceid: consequenceid, maxstudentsbathroom:maxstudentsbathroom, linkedclass:linkedclass\n                    })} >Make a Class \"Active\" </Text>}\n                    <Text>{'\\n'}</Text>\n                    <Text style={styles.paragraph2} onPress={() => navigation.navigate(\"Studentsenrolled\", {\n                        idofcurrentclass: idofcurrentclass, currentsessionid: currentsessionid, sessionending: sessionending, endlastclass: endlastclass, userinformation: userinformation, school: school, state: state, town: town, role: role, id: id, bathroompasslimit: bathroompasslimit, ifnegativeplusminus: ifnegativeplusminus, nonbathroompasslimit: nonbathroompasslimit, drinkpasslimit:drinkpasslimit, exclusivephonepassmaxstudents: exclusivephonepassmaxstudents, exclusivephonepasstimelmit: exclusivephonepasstimelmit, lengthofclass: lengthofclass, classiscurrent: classiscurrent, nameofcurrentclass: nameofcurrentclass, starttimeofcurrentclass: starttimeofcurrentclass, classid: classid, coursename: coursename, section: section, location: location, teacherid: teacherid, teacheriscalled: teacheriscalled,\n                        email: email, starttime: starttime, lengthofclassesforacomputer: lengthofclassesforacomputer, inpenalty: inpenalty, stoptimepenalty: stoptimepenalty, starttimepenalty: starttimepenalty, totaltimepenalty: totaltimepenalty, alreadyused: alreadyused, teacher: teacher, Selectedclassdestination: Selectedclassdestination, youcangetpass: youcangetpass, currentlocation: currentlocation, locationdestination: locationdestination, firstname: firstname, lastname: lastname, ledby: ledby, grouptime: grouptime, drinkofwater:drinkofwater,exclusivetime: exclusivetime, donewithworkpass: donewithworkpass, bathroomtime: bathroomtime, nonbathroomtime: nonbathroomtime, bathroompassinuse: bathroompassinuse, totalinlineforbathroom: totalinlineforbathroom, lengthofclasses: lengthofclasses, endlastclasssubstitute: endlastclasssubstitute, sessionended: sessionended, thelastid: thelastid, phonepassduration: phonepassduration, overunder: overunder, bathroompassduration: bathroompassduration,  drinkpassduration:drinkpassduration,otherpassduration: otherpassduration, maxstudentsphonepass: maxstudentsphonepass, donewithworkphonepass: donewithworkphonepass, consequenceid: consequenceid, maxstudentsbathroom:maxstudentsbathroom, linkedclass:linkedclass\n                    })} >See students enrolled{'\\n'}in the \"Active\" class </Text>\n\n\n\n                    <Text></Text>\n\n\n\n                </View>\n            </ScrollView>\n        </SafeAreaView>\n    );\n}\n\n\nconst styles = StyleSheet.create({\n\n    container: {\n        backgroundColor: \"#000\",\n        alignItems: \"center\",\n        width: \"100%\",\n\n    },\n    largercontainer: {\n        height: height,\n        backgroundColor: \"#000\",\n\n    },\n    container1: {\n        height: \"10%\",\n        backgroundColor: '#000',\n        width: \"100%\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n\n\n    },\n    error: {\n\n        backgroundColor: '#000',\n        color: \"#FFF\",\n        marginLeft: \"3%\",\n        marginRight: \"3%\",\n        fontSize: 18,\n        fontWeight: 'bold',\n\n\n    },\n\n\n    container2: {\n        height: \"30%\",\n        backgroundColor: \"#013469\",\n        width: \"100%\",\n\n    },\n    paragraph: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        backgroundColor: '#000000',\n        color: \"#fff\",\n        height: \"100%\",\n        textAlign: \"center\",\n        marginTop: \"10%\",\n    },\n    Newrow: {\n        backgroundColor: '#000000',\n\n        margin: 2,\n        textAlign: \"center\",\n        fontSize: 20,\n        width: \"90%\",\n        borderColor: \"#E43522\",\n        borderWidth: 4,\n        justifyContent: \"center\",\n        color: \"#fff\",\n    },\n    Newrowa: {\n        backgroundColor: '#000000',\n        margin: 4,\n        textAlign: \"center\",\n        fontSize: 20,\n        borderColor: \"#E43522\",\n        borderWidth: 4,\n        justifyContent: \"center\",\n        color: \"#fff\",\n        flex: 1,\n    },\n\n    Newrowb: {\n        backgroundColor: '#000000',\n        margin: 4,\n        textAlign: \"center\",\n        fontSize: 20,\n        borderColor: \"#E43522\",\n        borderWidth: 4,\n        justifyContent: \"center\",\n        color: \"#fff\",\n        flex: .4,\n    },\n\n    paragraph2: {\n\n        fontSize: 18,\n        fontWeight: 'bold',\n        textAlign: \"center\",\n        backgroundColor: '#000000',\n        color: \"#fff\",\n\n        justifyContent: \"center\",\n\n    },\n\n    paragraph4: {\n\n        fontSize: 18,\n        fontWeight: 'bold',\n        textAlign: 'center',\n        backgroundColor: '#000000',\n        color: \"#fff\",\n        justifyContent: \"center\",\n        lineHeight: 30,\n\n    },\n    section3: {\n\n        fontSize: 18,\n        fontWeight: 'bold',\n        textAlign: 'center',\n        backgroundColor: \"#000\",\n        color: \"#fff\",\n        alignContent: \"center\",\n        height: \"50%\",\n\n\n\n    },\n    section5: {\n\n        fontSize: 18,\n        fontWeight: 'bold',\n        textAlign: 'center',\n        backgroundColor: \"#000\",\n        color: \"#fff\",\n        alignContent: \"center\",\n        height: \"10%\",\n\n    },\n\n\n\n    paragraph6: {\n        color: \"#fff\",\n        fontSize: 17,\n        marginRight: 7\n\n\n    },\n    textContainer: {\n        flexDirection: 'row',\n        height: 50,\n        justifyContent: 'center',\n        marginBottom: 20,\n    },\n    paragraph7: {\n\n        fontSize: 18,\n        fontWeight: 'bold',\n        textAlign: \"center\",\n        backgroundColor: '#000000',\n        color: \"#FFF\",\n\n        justifyContent: \"center\",\n\n    },\n\n});\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,OAAOC,QAAQ;AAA8E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAI7F,SAASC,IAAI,EAAEC,QAAQ;AACvB,SAASC,OAAO,EAAEC,kBAAkB,EAAEC,8BAA8B,EAAEC,qBAAqB,QAAQ,gBAAgB;AACnH,SAASC,UAAU,EAAEC,UAAU,EAAEC,MAAM,EAAEC,KAAK,EAAEC,KAAK,EAAEC,OAAO,EAAEC,SAAS,EAAEC,GAAG,EAAEC,MAAM,EAAEC,MAAM,EAAEC,SAAS,EAAEC,UAAU,EAAEC,UAAU,QAAQ,qBAAqB;AAAC;AAAA;AAG/J,IAAMC,MAAM,GAAGC,UAAU,CAACC,GAAG,CAAC,QAAQ,CAAC,CAACF,MAAM;AAE9C,eAAe,SAASG,MAAM,OAAwB;EAAA,IAArBC,KAAK,QAALA,KAAK;IAAEC,UAAU,QAAVA,UAAU;EAE9C,oBAEID,KAAK,CAACE,MAAM;IAFRC,gBAAgB,iBAAhBA,gBAAgB;IAAEC,gBAAgB,iBAAhBA,gBAAgB;IAAEC,YAAY,iBAAZA,YAAY;IAAEC,eAAe,iBAAfA,eAAe;IAAEC,MAAM,iBAANA,MAAM;IAAEC,KAAK,iBAALA,KAAK;IAAEC,IAAI,iBAAJA,IAAI;IAAEC,IAAI,iBAAJA,IAAI;IAAEC,iBAAiB,iBAAjBA,iBAAiB;IAAEC,mBAAmB,iBAAnBA,mBAAmB;IAAEC,oBAAoB,iBAApBA,oBAAoB;IAAEC,6BAA6B,iBAA7BA,6BAA6B;IAAEC,cAAc,iBAAdA,cAAc;IAAEC,0BAA0B,iBAA1BA,0BAA0B;IAAEC,aAAa,iBAAbA,aAAa;IAAEC,cAAc,iBAAdA,cAAc;IAAEC,kBAAkB,iBAAlBA,kBAAkB;IAAEC,uBAAuB,iBAAvBA,uBAAuB;IAAEC,OAAO,iBAAPA,OAAO;IAAEC,UAAU,iBAAVA,UAAU;IAAEC,OAAO,iBAAPA,OAAO;IAAEC,QAAQ,iBAARA,QAAQ;IAAEC,SAAS,iBAATA,SAAS;IAAEC,eAAe,iBAAfA,eAAe;IACzXC,KAAK,iBAALA,KAAK;IAAEC,SAAS,iBAATA,SAAS;IAAEC,2BAA2B,iBAA3BA,2BAA2B;IAAEC,SAAS,iBAATA,SAAS;IAAEC,eAAe,iBAAfA,eAAe;IAAEC,gBAAgB,iBAAhBA,gBAAgB;IAAEC,gBAAgB,iBAAhBA,gBAAgB;IAAEC,WAAW,iBAAXA,WAAW;IAAEC,OAAO,iBAAPA,OAAO;IAAEC,wBAAwB,iBAAxBA,wBAAwB;IAAEC,aAAa,iBAAbA,aAAa;IAAEC,eAAe,iBAAfA,eAAe;IAAEC,mBAAmB,iBAAnBA,mBAAmB;IAAEC,KAAK,iBAALA,KAAK;IAAEC,SAAS,iBAATA,SAAS;IAAEC,YAAY,iBAAZA,YAAY;IAAEC,aAAa,iBAAbA,aAAa;IAAEC,gBAAgB,iBAAhBA,gBAAgB;IAAEC,YAAY,iBAAZA,YAAY;IAAEC,eAAe,iBAAfA,eAAe;IAAEC,iBAAiB,iBAAjBA,iBAAiB;IAAEC,sBAAsB,iBAAtBA,sBAAsB;IAAEC,eAAe,iBAAfA,eAAe;IAAEC,sBAAsB,iBAAtBA,sBAAsB;IAAEC,YAAY,iBAAZA,YAAY;IAAEC,SAAS,iBAATA,SAAS;IAAEC,iBAAiB,iBAAjBA,iBAAiB;IAAEC,SAAS,iBAATA,SAAS;IAAEC,oBAAoB,iBAApBA,oBAAoB;IAAGC,iBAAiB,iBAAjBA,iBAAiB;IAAEC,iBAAiB,iBAAjBA,iBAAiB;IAAEC,oBAAoB,iBAApBA,oBAAoB;IAAEC,qBAAqB,iBAArBA,qBAAqB;IAAEC,aAAa,iBAAbA,aAAa;IAAEC,EAAE,iBAAFA,EAAE;IAAEC,aAAa,iBAAbA,aAAa;IAAEC,mBAAmB,iBAAnBA,mBAAmB;IAAEC,WAAW,iBAAXA,WAAW;EAE/mBC,OAAO,CAACC,GAAG,CAACC,YAAY,EAAE,mCAAmC,EAAE9C,OAAO,EAAE,mCAAmC,CAAC;EAG5G,gBAAgC/C,QAAQ,CAAC,EAAE,CAAC;IAAA;IAArC8F,QAAQ;IAAEC,WAAW;EAC5B,iBAAgC/F,QAAQ,CAAC,EAAE,CAAC;IAAA;IAArCgG,QAAQ;IAAEC,WAAW;EAE5B,iBAAkCjG,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAvCkG,SAAS;IAAEC,YAAY;EAC9B,iBAAgCnG,QAAQ,CAAC,EAAE,CAAC;IAAA;IAArCoG,QAAQ;IAAEC,WAAW;EAC5B,iBAAoCrG,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAzCsG,UAAU;IAAEC,aAAa;EAChC,kBAAwCvG,QAAQ,EAAE;IAAA;IAA3C6F,YAAY;IAAEW,eAAe;EACpC,kBAA0BxG,QAAQ,CAAC,CAAC,CAAC;IAAA;IAA9ByG,KAAK;IAAEC,QAAQ;EAEtB,kBAAsC1G,QAAQ,CAAC,IAAI,CAAC;IAAA;IAA7C2G,WAAW;IAAEC,cAAc;EAClC,kBAAsC5G,QAAQ,EAAE;IAAA;IAAzC6G,WAAW;IAAEC,cAAc;EAIlC,IAAMC,SAAS,GAAG,SAAZA,SAAS,GAAS;IAEpB,IAAIvB,aAAa,GAAGwB,IAAI,CAACC,GAAG,EAAE,EAAE;MAC5B,IAAMC,CAAC,GAAGtG,KAAK,CAACF,UAAU,CAACN,QAAQ,EAAE,QAAQ,CAAC,EAAES,KAAK,CAAC,gBAAgB,EAAE,IAAI,EAAEiB,gBAAgB,CAAC,EAAEjB,KAAK,CAAC,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;MAE5H,IAAMsG,aAAa,GAAGrG,OAAO,CAACoG,CAAC,CAAC,CAC3BE,IAAI,CAAC,UAAUC,QAAQ,EAAE;QACtB,IAAIC,KAAK,GAAG,EAAE;QACdD,QAAQ,CAACE,OAAO,CAAC,UAAAvG,GAAG,EAAI;UACpBsG,KAAK,CAACE,IAAI,CAAC;YAACjC,EAAE,EAAEvE,GAAG,CAACyG,IAAI,EAAE,CAAClC,EAAE;YAAEmC,cAAc,EAAE1G,GAAG,CAACyG,IAAI,EAAE,CAACE,sBAAsB;YAACC,iBAAiB,EAAE5G,GAAG,CAACyG,IAAI,EAAE,CAACG;UAAkB,CAAC,CAAC;QACvI,CAAC,CAAC;QACF,IAAIN,KAAK,CAACO,MAAM,KAAK,CAAC,EAAE;UACpBlC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;QACtC,CAAC,MAAM;UACHkB,cAAc,CAACQ,KAAK,CAAC;UAAE3B,OAAO,CAACC,GAAG,CAAC0B,KAAK,EAAE,mBAAmB,CAAC;QAClE;MACJ,CAAC,CAAC;IACV;EAEJ,CAAC;EACDrH,SAAS,CAAC,YAAM;IACZ,IAAI,OAAO4G,WAAW,IAAI,WAAW,EAAE;MACnC,IAAMiB,CAAC,GAAGd,IAAI,CAACC,GAAG,EAAE;MAEpB,KAAK,IAAIc,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGlB,WAAW,CAACgB,MAAM,EAAEE,CAAC,EAAE,EAAE;QAEzC,IAAMC,CAAC,GAAG,IAAIhB,IAAI,CAACH,WAAW,CAACkB,CAAC,CAAC,CAACH,iBAAiB,CAAC;QAEpDzG,SAAS,CAACH,GAAG,CAACZ,QAAQ,EAAE,QAAQ,EAAEyG,WAAW,CAACkB,CAAC,CAAC,CAACxC,EAAE,CAAC,EAAE;UAElD0C,QAAQ,EAAEpB,WAAW,CAACkB,CAAC,CAAC,CAACH,iBAAiB;UAC1CM,YAAY,EAAEF,CAAC,CAACG,kBAAkB,CAAC,EAAE,EAAE;YAAEC,MAAM,EAAE;UAAK,CAAC,CAAC;UACxDC,uBAAuB,EAAExB,WAAW,CAACkB,CAAC,CAAC,CAACL,cAAc,GAAGb,WAAW,CAACkB,CAAC,CAAC,CAACH,iBAAiB;UACzFU,8BAA8B,EAAE,CAACzB,WAAW,CAACkB,CAAC,CAAC,CAACL,cAAc,GAAGb,WAAW,CAACkB,CAAC,CAAC,CAACH,iBAAiB,IAAI;QAGzG,CAAC,CAAC,CAACW,KAAK,CAAC,UAACC,KAAK,EAAK;UAChB7C,OAAO,CAACC,GAAG,CAAC4C,KAAK,CAAC;UAAEC,KAAK,CAACD,KAAK,CAAC;QACpC,CAAC,CAAC;MACN;IACJ;EACJ,CAAC,EAAE,CAAC3B,WAAW,CAAC,CAAC;EAGjB5G,SAAS,CAAC,YAAM;IAEZ2G,cAAc,CAAC,IAAI,CAAC;IAEpBjB,OAAO,CAACC,GAAG,CAACI,QAAQ,EAAE,4BAA4B,CAAC;IACnDG,YAAY,CAACH,QAAQ,CAAC0C,cAAc,CAAC;IACrCrC,WAAW,CAACL,QAAQ,CAAC2C,aAAa,CAAC;IACnCpC,aAAa,CAACP,QAAQ,CAACT,EAAE,CAAC;EAE9B,CAAC,EAAE,CAACS,QAAQ,CAAC,CAAC;EAEd/F,SAAS,CAAC,YAAM;IACZ0B,UAAU,CAACiH,UAAU,CAAC;MAClBC,UAAU,EAAE;QAAA,OACR,KAAC,gBAAgB;UAAA,UACb,KAAC,IAAI;YAAC,kBAAkB,EAAC,OAAO;YAAC,KAAK,EAAEC,MAAM,CAACN;UAAM;QAC9C,EACQ;MAAA;IAE3B,CAAC,CAAC;EAEV,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMO,UAAU,GAAG,SAAbA,UAAU,GAAS;IACrB,IAAIvD,aAAa,GAAGwB,IAAI,CAACC,GAAG,EAAE,EAAE;MAC5B9F,SAAS,CAACH,GAAG,CAACZ,QAAQ,EAAE,eAAe,EAAE0B,gBAAgB,CAAC,EAAE;QACxDkH,MAAM,EAAE;MACZ,CAAC,CAAC,CACGT,KAAK,CAAC,UAAAC,KAAK,EAAI;QACZ7C,OAAO,CAACC,GAAG,CAAC4C,KAAK,CAAC;QAAEC,KAAK,CAAC,GAAG,EAAED,KAAK,CAAC;MACzC,CAAC,CAAC;MACNzB,SAAS,EAAE;IACf;EACJ,CAAC;EAED9G,SAAS,CAAC,YAAM;IACZgJ,QAAQ,EAAE;EACd,CAAC,EAAE,EAAE,CAAC;EAAC,SAGQA,QAAQ;IAAA;EAAA;EAAA;IAAA,6BAAvB,aAA0B;MAEtB,IAAI,OAAOnH,gBAAgB,IAAI,WAAW,EAAE;QACxC,IAAMoH,MAAM,GAAGlI,GAAG,CAACZ,QAAQ,EAAE,eAAe,EAAE0B,gBAAgB,CAAC;QAE/D,IAAMqH,OAAO,SAASjI,MAAM,CAACgI,MAAM,CAAC;QAEpC,IAAIC,OAAO,CAACC,MAAM,EAAE,EAAE;UAClBL,UAAU,EAAE;QAChB,CAAC,MAAM;UAEHpD,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;QACpC;QACAD,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MAEtC;IACJ,CAAC;IAAA;EAAA;EAGG3F,SAAS,CAAC,YAAM;IACZoJ,mBAAmB,EAAE;EACzB,CAAC,EAAE,EAAE,CAAC;EAEVpJ,SAAS,CAAC;IAAA,OACVQ,UAAU,CAACO,GAAG,CAACZ,QAAQ,EAAE,oBAAoB,EAAE2C,OAAO,CAAC,EAAE,UAAC/B,GAAG,EAAK;MAC9DqI,mBAAmB,EAAE;IACzB,CAAC,CACA;EAAA,GAAE,EAAE,CAAC;EAAC,SAEYA,mBAAmB;IAAA;EAAA;EAAA;IAAA,yCAAlC,aAAqC;MACjC,IAAMnC,CAAC,GAAGtG,KAAK,CAACF,UAAU,CAACN,QAAQ,EAAE,OAAO,CAAC,EAAES,KAAK,CAAC,4BAA4B,EAAE,IAAI,EAAEkC,OAAO,CAAC,CAAC;MAElG,IAAMoE,aAAa,SAASrG,OAAO,CAACoG,CAAC,CAAC,CAGjCE,IAAI,CAAC,UAAUC,QAAQ,EAAE;QACtB,IAAMiC,OAAO,GAAG,EAAE;QAClB,IAAMhC,KAAK,GAAG,EAAE;QAChBD,QAAQ,CAACE,OAAO,CAAC,UAAAvG,GAAG,EAAI;;UAGpBsI,OAAO,CAAC9B,IAAI,CAACxG,GAAG,CAACyG,IAAI,EAAE,CAAClC,EAAE,CAAC;UAE3B+B,KAAK,CAACE,IAAI,CAACxG,GAAG,CAACyG,IAAI,EAAE,CAAC;QAC1B,CAAC,CAAC;QACFjB,eAAe,CAAC8C,OAAO,CAAC;QACxBvD,WAAW,CAACuB,KAAK,CAAC;QAClBV,cAAc,CAAC,KAAK,CAAC;MACzB,CAAC,CAAC;MAENjB,OAAO,CAACC,GAAG,CAACC,YAAY,EAAE,iCAAiC,CAAC;IAEhE,CAAC;IAAA;EAAA;EAAA;EAGD,IAAM0D,oBAAoB,GAAG,SAAvBA,oBAAoB,GAAS;IAC/B,IAAMC,QAAQ,GAAG;MAAEjE,EAAE,EAAExC,OAAO;MAAE0G,cAAc,EAAE,CAAC;MAAEzE,SAAS,EAAE,CAAC;MAAE0E,WAAW,EAAE,CAAC;MAAEC,KAAK,EAAE;IAA4B,CAAC;IACrH,IAAIC,QAAQ,GAAG,EAAE;IAEjB/D,YAAY,CAAC0B,OAAO,CAAC,UAACsC,IAAI,EAAK;MAAA;MAC3BlE,OAAO,CAACC,GAAG,CAACiE,IAAI,EAAE,eAAe,CAAC,EAE9BD,QAAQ,GAAGC,IAAI,EACflE,OAAO,CAACC,GAAG,CAACiE,IAAI,EAAE,MAAM,EAAED,QAAQ,EAAE,wBAAwB,CAAC,EAE7DzI,SAAS,CAACH,GAAG,CAACZ,QAAQ,EAAE,OAAO,EAAEwJ,QAAQ,CAAC,gDACrC7G,OAAO,EAAGyG,QAAQ,6DACS,EAAE,+BAC7B,WAAW,GAAGzG,OAAO,EAAG,KAAK,eAKhC,CAACwF,KAAK,CAAC,UAACC,KAAK,EAAK;QAChB7C,OAAO,CAACC,GAAG,CAAC4C,KAAK,CAAC;QAAEC,KAAK,CAACD,KAAK,CAAC;MACpC,CAAC,CAAC,EAEFrH,SAAS,CAACH,GAAG,CAACZ,QAAQ,EAAE,oBAAoB,EAAE2C,OAAO,CAAC,sBACjD6G,QAAQ,EAAGA,QAAQ,EACtB,CAACrB,KAAK,CAAC,UAACC,KAAK,EAAK;QAChB7C,OAAO,CAACC,GAAG,CAAC4C,KAAK,CAAC;QAAEC,KAAK,CAACD,KAAK,CAAC;MACpC,CAAC,CAAC,EAEF7C,OAAO,CAACC,GAAG,CAACgE,QAAQ,EAAE,wBAAwB,CAAC;IAEvD,CAAC,CAAC;EAGN,CAAC;EAGD,IAAME,gBAAgB,GAAG,SAAnBA,gBAAgB,GAAS;IAC3B,IAAMN,QAAQ,GAAG;MAAEjE,EAAE,EAAExC,OAAO;MAAE0G,cAAc,EAAE,CAAC;MAAEzE,SAAS,EAAE,CAAC;MAAE0E,WAAW,EAAE,CAAC;MAAEC,KAAK,EAAE;IAA4B,CAAC;IACrH/C,cAAc,CAAC,IAAI,CAAC;IAEpBzF,SAAS,CAACH,GAAG,CAACZ,QAAQ,EAAE,OAAO,EAAEkG,UAAU,CAAC,sBACvCvD,OAAO,EAAGyG,QAAQ,EAErB,CAACjB,KAAK,CAAC,UAACC,KAAK,EAAK;MAChB7C,OAAO,CAACC,GAAG,CAAC4C,KAAK,CAAC;MAAEC,KAAK,CAACD,KAAK,CAAC;IACpC,CAAC,CAAC;IAEFrH,SAAS,CAACH,GAAG,CAACZ,QAAQ,EAAE,oBAAoB,EAAE2C,OAAO,CAAC,sBACjDuD,UAAU,EAAGA,UAAU,EAC1B,CAACiC,KAAK,CAAC,UAACC,KAAK,EAAK;MAChB7C,OAAO,CAACC,GAAG,CAAC4C,KAAK,CAAC;MAAEC,KAAK,CAACD,KAAK,CAAC;IACpC,CAAC,CAAC;IAEFuB,aAAa,EAAE;EAGnB,CAAC;EAED,IAAMA,aAAa,GAAG,SAAhBA,aAAa,GAAS;IAExB5I,SAAS,CAACH,GAAG,CAACZ,QAAQ,EAAE,OAAO,EAAEkG,UAAU,CAAC,EAAE;MAC1C0D,0BAA0B,EAAE;IAChC,CAAC,CAAC,CAACzB,KAAK,CAAC,UAACC,KAAK,EAAK;MAChB7C,OAAO,CAACC,GAAG,CAAC4C,KAAK,CAAC;MAAEC,KAAK,CAACD,KAAK,CAAC;IACpC,CAAC,CAAC;IAEF5B,cAAc,CAAC,KAAK,CAAC;EACzB,CAAC;EAED,OACI,MAAC,YAAY;IAAC,KAAK,EAAEkC,MAAM,CAACmB,eAAgB;IAAA,WACxC,KAAC,IAAI;MAAC,KAAK,EAAEnB,MAAM,CAACoB,UAAW;MAAA,UAC1BlH,UAAU,GAAG,MAAC,IAAI;QAAC,KAAK,EAAE8F,MAAM,CAACN,KAAM;QAAA,WAAExF,UAAU,gBAAYC,OAAO;MAAA,EAAS,GAC5E,KAAC,IAAI;QAAC,KAAK,EAAE6F,MAAM,CAACN,KAAM;QAAC,OAAO,EAAE;UAAA,OAAM7G,UAAU,CAACwI,QAAQ,CAAC,gBAAgB,EAAE;YAC5EtI,gBAAgB,EAAEA,gBAAgB;YAAEC,gBAAgB,EAAEA,gBAAgB;YAAE0D,aAAa,EAAEA,aAAa;YAAEzD,YAAY,EAAEA,YAAY;YAAEC,eAAe,EAAEA,eAAe;YAAEC,MAAM,EAAEA,MAAM;YAAEC,KAAK,EAAEA,KAAK;YAAEC,IAAI,EAAEA,IAAI;YAAEC,IAAI,EAAEA,IAAI;YAAEmD,EAAE,EAAEA,EAAE;YAAElD,iBAAiB,EAAEA,iBAAiB;YAAEC,mBAAmB,EAAEA,mBAAmB;YAAEG,cAAc,EAACA,cAAc;YAAEF,oBAAoB,EAAEA,oBAAoB;YAAEC,6BAA6B,EAAEA,6BAA6B;YAAEE,0BAA0B,EAAEA,0BAA0B;YAAEC,aAAa,EAAEA,aAAa;YAAEC,cAAc,EAAEA,cAAc;YAAEC,kBAAkB,EAAEA,kBAAkB;YAAEC,uBAAuB,EAAEA,uBAAuB;YAAEC,OAAO,EAAEA,OAAO;YAAEC,UAAU,EAAEA,UAAU;YAAEC,OAAO,EAAEA,OAAO;YAAEC,QAAQ,EAAEA,QAAQ;YAAEC,SAAS,EAAEA,SAAS;YAAEC,eAAe,EAAEA,eAAe;YACjxBC,KAAK,EAAEA,KAAK;YAAEC,SAAS,EAAEA,SAAS;YAAEC,2BAA2B,EAAEA,2BAA2B;YAAEC,SAAS,EAAEA,SAAS;YAAEC,eAAe,EAAEA,eAAe;YAAEC,gBAAgB,EAAEA,gBAAgB;YAAEC,gBAAgB,EAAEA,gBAAgB;YAAEC,WAAW,EAAEA,WAAW;YAAEC,OAAO,EAAEA,OAAO;YAAEC,wBAAwB,EAAEA,wBAAwB;YAAEC,aAAa,EAAEA,aAAa;YAAEC,eAAe,EAAEA,eAAe;YAAEC,mBAAmB,EAAEA,mBAAmB;YAAEiC,SAAS,EAAEA,SAAS;YAAEE,QAAQ,EAAEA,QAAQ;YAAElC,KAAK,EAAEA,KAAK;YAAEC,SAAS,EAAEA,SAAS;YAAEC,YAAY,EAACA,YAAY;YAAEC,aAAa,EAAEA,aAAa;YAAEC,gBAAgB,EAAEA,gBAAgB;YAAEC,YAAY,EAAEA,YAAY;YAAEC,eAAe,EAAEA,eAAe;YAAEC,iBAAiB,EAAEA,iBAAiB;YAAEC,sBAAsB,EAAEA,sBAAsB;YAAEC,eAAe,EAAEA,eAAe;YAAEC,sBAAsB,EAAEA,sBAAsB;YAAEC,YAAY,EAAEA,YAAY;YAAEC,SAAS,EAAEA,SAAS;YAAEC,iBAAiB,EAAEA,iBAAiB;YAAEC,SAAS,EAAEA,SAAS;YAAEC,oBAAoB,EAAEA,oBAAoB;YAAGC,iBAAiB,EAACA,iBAAiB;YAACC,iBAAiB,EAAEA,iBAAiB;YAAEC,oBAAoB,EAAEA,oBAAoB;YAAEC,qBAAqB,EAAEA,qBAAqB;YAAEC,aAAa,EAAEA,aAAa;YAAEG,mBAAmB,EAACA,mBAAmB;YAAEC,WAAW,EAACA;UAG/sC,CAAC,CAAC;QAAA,CAAC;QAAA;MAAA;IAA4B,EAChC,EAEP,KAAC,SAAS;MAAC,KAAK,EAAEoD,MAAM,CAACsB,UAAW;MAAA,UAEhC,KAAC,QAAQ;QAAC,QAAQ,EAAEtE,QAAS;QAAC,EAAE,EAAEP,EAAG;QAAC,QAAQ,EAAES,QAAS;QAAC,WAAW,EAAEC,WAAY;QAAC,UAAU,EAAEK,UAAW;QAAC,aAAa,EAAEC;MAAc;IAAG,EAEpI,EACZ,MAAC,UAAU;MAAA,WACP,KAAC,SAAS;QAAC,KAAK,EAAEuC,MAAM,CAACuB,QAAS;QAAA,UAC7BnE,SAAS,GAAG,MAAC,IAAI;UAAC,KAAK,EAAE4C,MAAM,CAACwB,UAAW;UAAC,OAAO,EAAE;YAAA,OAAMP,aAAa,EAAE;UAAA,CAAC;UAAA,iCAAoB,IAAI;QAAA,EAAwC,GAAG,MAAC,IAAI;UAAC,KAAK,EAAEjB,MAAM,CAACwB,UAAW;UAAA,gBAAI,IAAI;QAAA;MAAS,EACvL,EACZ,KAAC,IAAI;QAAA,UAAE;MAAI,EAAQ,EACnB,KAAC,SAAS;QAAC,KAAK,EAAExB,MAAM,CAACuB,QAAS;QAAA,UAC7BnE,SAAS,GAAG,KAAC,IAAI;UAAC,KAAK,EAAE4C,MAAM,CAACwB,UAAW;UAAC,OAAO,EAAE;YAAA,OAAMR,gBAAgB,EAAE;UAAA,CAAC;UAAA;QAAA,EAAuB,GAAG,KAAC,IAAI;UAAC,KAAK,EAAEhB,MAAM,CAACwB,UAAW;UAAC,OAAO,EAAE;YAAA,OAAMf,oBAAoB,EAAE;UAAA,CAAC;UAAA;QAAA;MAA4B,EAEnM,EACZ,KAAC,IAAI;QAAA,UAAE;MAAI,EAAQ,EAGnB,MAAC,IAAI;QAAC,KAAK,EAAET,MAAM,CAACyB,QAAS;QAAA,WAEzB,KAAC,IAAI;UAAA,UAAC,KAAC,iBAAiB;YACpB,IAAI,EAAC,OAAO;YACZ,KAAK,EAAC,MAAM;YACZ,SAAS,EAAE5D,WAAY;YACvB,KAAK,EAAE;cACH6D,QAAQ,EAAE,UAAU;cACpBC,UAAU,EAAE,QAAQ;cACpBC,cAAc,EAAE,QAAQ;cACxBC,IAAI,EAAE,CAAC;cACPC,KAAK,EAAE,CAAC;cACRC,GAAG,EAAE,CAAC;cACNC,MAAM,EAAE;YACZ;UAAE;QAAG,EAAO,EAEf9H,UAAU,GAAG,KAAC,IAAI;UAAC,KAAK,EAAE8F,MAAM,CAACwB,UAAW;UAAC,OAAO,EAAE;YAAA,OAAM3I,UAAU,CAACwI,QAAQ,CAAC,gBAAgB,EAAE;cAC/FtI,gBAAgB,EAAEA,gBAAgB;cAAEC,gBAAgB,EAAEA,gBAAgB;cAAE0D,aAAa,EAAEA,aAAa;cAAEzD,YAAY,EAAEA,YAAY;cAAEC,eAAe,EAAEA,eAAe;cAAEC,MAAM,EAAEA,MAAM;cAAEC,KAAK,EAAEA,KAAK;cAAEC,IAAI,EAAEA,IAAI;cAAEC,IAAI,EAAEA,IAAI;cAAEmD,EAAE,EAAEA,EAAE;cAAElD,iBAAiB,EAAEA,iBAAiB;cAAEC,mBAAmB,EAAEA,mBAAmB;cAAEG,cAAc,EAACA,cAAc;cAAEF,oBAAoB,EAAEA,oBAAoB;cAAEC,6BAA6B,EAAEA,6BAA6B;cAAEE,0BAA0B,EAAEA,0BAA0B;cAAEC,aAAa,EAAEA,aAAa;cAAEC,cAAc,EAAEA,cAAc;cAAEC,kBAAkB,EAAEA,kBAAkB;cAAEC,uBAAuB,EAAEA,uBAAuB;cAAEC,OAAO,EAAEA,OAAO;cAAEC,UAAU,EAAEA,UAAU;cAAEC,OAAO,EAAEA,OAAO;cAAEC,QAAQ,EAAEA,QAAQ;cAAEC,SAAS,EAAEA,SAAS;cAAEC,eAAe,EAAEA,eAAe;cACjxBC,KAAK,EAAEA,KAAK;cAAEC,SAAS,EAAEA,SAAS;cAAEC,2BAA2B,EAAEA,2BAA2B;cAAEC,SAAS,EAAEA,SAAS;cAAEC,eAAe,EAAEA,eAAe;cAAEC,gBAAgB,EAAEA,gBAAgB;cAAEC,gBAAgB,EAAEA,gBAAgB;cAAEC,WAAW,EAAEA,WAAW;cAAEC,OAAO,EAAEA,OAAO;cAAEC,wBAAwB,EAAEA,wBAAwB;cAAEC,aAAa,EAAEA,aAAa;cAAEC,eAAe,EAAEA,eAAe;cAAEC,mBAAmB,EAAEA,mBAAmB;cAAEiC,SAAS,EAAEA,SAAS;cAAEE,QAAQ,EAAEA,QAAQ;cAAElC,KAAK,EAAEA,KAAK;cAAEC,SAAS,EAAEA,SAAS;cAAEC,YAAY,EAACA,YAAY;cAACC,aAAa,EAAEA,aAAa;cAAEC,gBAAgB,EAAEA,gBAAgB;cAAEC,YAAY,EAAEA,YAAY;cAAEC,eAAe,EAAEA,eAAe;cAAEC,iBAAiB,EAAEA,iBAAiB;cAAEC,sBAAsB,EAAEA,sBAAsB;cAAEC,eAAe,EAAEA,eAAe;cAAEC,sBAAsB,EAAEA,sBAAsB;cAAEC,YAAY,EAAEA,YAAY;cAAEC,SAAS,EAAEA,SAAS;cAAEC,iBAAiB,EAAEA,iBAAiB;cAAEC,SAAS,EAAEA,SAAS;cAAEC,oBAAoB,EAAEA,oBAAoB;cAAGC,iBAAiB,EAACA,iBAAiB;cAACC,iBAAiB,EAAEA,iBAAiB;cAAEC,oBAAoB,EAAEA,oBAAoB;cAAEC,qBAAqB,EAAEA,qBAAqB;cAAEC,aAAa,EAAEA,aAAa;cAAEG,mBAAmB,EAACA,mBAAmB;cAACC,WAAW,EAACA;YAC7sC,CAAC,CAAC;UAAA,CAAC;UAAA;QAAA,EAA+B,GAAG,KAAC,IAAI;UAAC,KAAK,EAAEoD,MAAM,CAACwB,UAAW;UAAC,OAAO,EAAE;YAAA,OAAM3I,UAAU,CAACwI,QAAQ,CAAC,gBAAgB,EAAE;cACtHtI,gBAAgB,EAAEA,gBAAgB;cAAEC,gBAAgB,EAAEA,gBAAgB;cAAE0D,aAAa,EAAEA,aAAa;cAAEzD,YAAY,EAAEA,YAAY;cAAEC,eAAe,EAAEA,eAAe;cAAEC,MAAM,EAAEA,MAAM;cAAEC,KAAK,EAAEA,KAAK;cAAEC,IAAI,EAAEA,IAAI;cAAEC,IAAI,EAAEA,IAAI;cAAEmD,EAAE,EAAEA,EAAE;cAAElD,iBAAiB,EAAEA,iBAAiB;cAAEC,mBAAmB,EAAEA,mBAAmB;cAAEG,cAAc,EAACA,cAAc;cAAEF,oBAAoB,EAAEA,oBAAoB;cAAEC,6BAA6B,EAAEA,6BAA6B;cAAEE,0BAA0B,EAAEA,0BAA0B;cAAEC,aAAa,EAAEA,aAAa;cAAEC,cAAc,EAAEA,cAAc;cAAEC,kBAAkB,EAAEA,kBAAkB;cAAEC,uBAAuB,EAAEA,uBAAuB;cAAEC,OAAO,EAAEA,OAAO;cAAEC,UAAU,EAAEA,UAAU;cAAEC,OAAO,EAAEA,OAAO;cAAEC,QAAQ,EAAEA,QAAQ;cAAEC,SAAS,EAAEA,SAAS;cAAEC,eAAe,EAAEA,eAAe;cACjxBC,KAAK,EAAEA,KAAK;cAAEC,SAAS,EAAEA,SAAS;cAAEC,2BAA2B,EAAEA,2BAA2B;cAAEC,SAAS,EAAEA,SAAS;cAAEC,eAAe,EAAEA,eAAe;cAAEC,gBAAgB,EAAEA,gBAAgB;cAAEC,gBAAgB,EAAEA,gBAAgB;cAAEC,WAAW,EAAEA,WAAW;cAAEC,OAAO,EAAEA,OAAO;cAAEC,wBAAwB,EAAEA,wBAAwB;cAAEC,aAAa,EAAEA,aAAa;cAAEC,eAAe,EAAEA,eAAe;cAAEC,mBAAmB,EAAEA,mBAAmB;cAAEiC,SAAS,EAAEA,SAAS;cAAEE,QAAQ,EAAEA,QAAQ;cAAElC,KAAK,EAAEA,KAAK;cAAEC,SAAS,EAAEA,SAAS;cAAEC,YAAY,EAACA,YAAY;cAACC,aAAa,EAAEA,aAAa;cAAEC,gBAAgB,EAAEA,gBAAgB;cAAEC,YAAY,EAAEA,YAAY;cAAEC,eAAe,EAAEA,eAAe;cAAEC,iBAAiB,EAAEA,iBAAiB;cAAEC,sBAAsB,EAAEA,sBAAsB;cAAEC,eAAe,EAAEA,eAAe;cAAEC,sBAAsB,EAAEA,sBAAsB;cAAEC,YAAY,EAAEA,YAAY;cAAEC,SAAS,EAAEA,SAAS;cAAEC,iBAAiB,EAAEA,iBAAiB;cAAEC,SAAS,EAAEA,SAAS;cAAEC,oBAAoB,EAAEA,oBAAoB;cAAGC,iBAAiB,EAACA,iBAAiB;cAACC,iBAAiB,EAAEA,iBAAiB;cAAEC,oBAAoB,EAAEA,oBAAoB;cAAEC,qBAAqB,EAAEA,qBAAqB;cAAEC,aAAa,EAAEA,aAAa;cAAEG,mBAAmB,EAACA,mBAAmB;cAAEC,WAAW,EAACA;YAC9sC,CAAC,CAAC;UAAA,CAAC;UAAA;QAAA,EAA+B,EAClC,KAAC,IAAI;UAAA,UAAE;QAAI,EAAQ,EACnB,MAAC,IAAI;UAAC,KAAK,EAAEoD,MAAM,CAACwB,UAAW;UAAC,OAAO,EAAE;YAAA,OAAM3I,UAAU,CAACwI,QAAQ,CAAC,kBAAkB,EAAE;cACnFtI,gBAAgB,EAAEA,gBAAgB;cAAEC,gBAAgB,EAAEA,gBAAgB;cAAE0D,aAAa,EAAEA,aAAa;cAAEzD,YAAY,EAAEA,YAAY;cAAEC,eAAe,EAAEA,eAAe;cAAEC,MAAM,EAAEA,MAAM;cAAEC,KAAK,EAAEA,KAAK;cAAEC,IAAI,EAAEA,IAAI;cAAEC,IAAI,EAAEA,IAAI;cAAEmD,EAAE,EAAEA,EAAE;cAAElD,iBAAiB,EAAEA,iBAAiB;cAAEC,mBAAmB,EAAEA,mBAAmB;cAAEC,oBAAoB,EAAEA,oBAAoB;cAAEE,cAAc,EAACA,cAAc;cAAED,6BAA6B,EAAEA,6BAA6B;cAAEE,0BAA0B,EAAEA,0BAA0B;cAAEC,aAAa,EAAEA,aAAa;cAAEC,cAAc,EAAEA,cAAc;cAAEC,kBAAkB,EAAEA,kBAAkB;cAAEC,uBAAuB,EAAEA,uBAAuB;cAAEC,OAAO,EAAEA,OAAO;cAAEC,UAAU,EAAEA,UAAU;cAAEC,OAAO,EAAEA,OAAO;cAAEC,QAAQ,EAAEA,QAAQ;cAAEC,SAAS,EAAEA,SAAS;cAAEC,eAAe,EAAEA,eAAe;cACjxBC,KAAK,EAAEA,KAAK;cAAEC,SAAS,EAAEA,SAAS;cAAEC,2BAA2B,EAAEA,2BAA2B;cAAEC,SAAS,EAAEA,SAAS;cAAEC,eAAe,EAAEA,eAAe;cAAEC,gBAAgB,EAAEA,gBAAgB;cAAEC,gBAAgB,EAAEA,gBAAgB;cAAEC,WAAW,EAAEA,WAAW;cAAEC,OAAO,EAAEA,OAAO;cAAEC,wBAAwB,EAAEA,wBAAwB;cAAEC,aAAa,EAAEA,aAAa;cAAEC,eAAe,EAAEA,eAAe;cAAEC,mBAAmB,EAAEA,mBAAmB;cAAEiC,SAAS,EAAEA,SAAS;cAAEE,QAAQ,EAAEA,QAAQ;cAAElC,KAAK,EAAEA,KAAK;cAAEC,SAAS,EAAEA,SAAS;cAAEC,YAAY,EAACA,YAAY;cAACC,aAAa,EAAEA,aAAa;cAAEC,gBAAgB,EAAEA,gBAAgB;cAAEC,YAAY,EAAEA,YAAY;cAAEC,eAAe,EAAEA,eAAe;cAAEC,iBAAiB,EAAEA,iBAAiB;cAAEC,sBAAsB,EAAEA,sBAAsB;cAAEC,eAAe,EAAEA,eAAe;cAAEC,sBAAsB,EAAEA,sBAAsB;cAAEC,YAAY,EAAEA,YAAY;cAAEC,SAAS,EAAEA,SAAS;cAAEC,iBAAiB,EAAEA,iBAAiB;cAAEC,SAAS,EAAEA,SAAS;cAAEC,oBAAoB,EAAEA,oBAAoB;cAAGC,iBAAiB,EAACA,iBAAiB;cAACC,iBAAiB,EAAEA,iBAAiB;cAAEC,oBAAoB,EAAEA,oBAAoB;cAAEC,qBAAqB,EAAEA,qBAAqB;cAAEC,aAAa,EAAEA,aAAa;cAAEG,mBAAmB,EAACA,mBAAmB;cAAEC,WAAW,EAACA;YAC9sC,CAAC,CAAC;UAAA,CAAC;UAAA,oCAAwB,IAAI;QAAA,EAA8B,EAI7D,KAAC,IAAI,KAAQ;MAAA,EAIV;IAAA,EACE;EAAA,EACF;AAEvB;AAGA,IAAMoD,MAAM,GAAGiC,UAAU,CAACC,MAAM,CAAC;EAE7BC,SAAS,EAAE;IACPC,eAAe,EAAE,MAAM;IACvBT,UAAU,EAAE,QAAQ;IACpBU,KAAK,EAAE;EAEX,CAAC;EACDlB,eAAe,EAAE;IACb3I,MAAM,EAAEA,MAAM;IACd4J,eAAe,EAAE;EAErB,CAAC;EACDhB,UAAU,EAAE;IACR5I,MAAM,EAAE,KAAK;IACb4J,eAAe,EAAE,MAAM;IACvBC,KAAK,EAAE,MAAM;IACbT,cAAc,EAAE,QAAQ;IACxBD,UAAU,EAAE;EAGhB,CAAC;EACDjC,KAAK,EAAE;IAEH0C,eAAe,EAAE,MAAM;IACvBE,KAAK,EAAE,MAAM;IACbC,UAAU,EAAE,IAAI;IAChBC,WAAW,EAAE,IAAI;IACjBC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EAGhB,CAAC;EAGDpB,UAAU,EAAE;IACR9I,MAAM,EAAE,KAAK;IACb4J,eAAe,EAAE,SAAS;IAC1BC,KAAK,EAAE;EAEX,CAAC;EACDM,SAAS,EAAE;IACPF,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBN,eAAe,EAAE,SAAS;IAC1BE,KAAK,EAAE,MAAM;IACb9J,MAAM,EAAE,MAAM;IACdoK,SAAS,EAAE,QAAQ;IACnBC,SAAS,EAAE;EACf,CAAC;EACDC,MAAM,EAAE;IACJV,eAAe,EAAE,SAAS;IAE1BW,MAAM,EAAE,CAAC;IACTH,SAAS,EAAE,QAAQ;IACnBH,QAAQ,EAAE,EAAE;IACZJ,KAAK,EAAE,KAAK;IACZW,WAAW,EAAE,SAAS;IACtBC,WAAW,EAAE,CAAC;IACdrB,cAAc,EAAE,QAAQ;IACxBU,KAAK,EAAE;EACX,CAAC;EACDY,OAAO,EAAE;IACLd,eAAe,EAAE,SAAS;IAC1BW,MAAM,EAAE,CAAC;IACTH,SAAS,EAAE,QAAQ;IACnBH,QAAQ,EAAE,EAAE;IACZO,WAAW,EAAE,SAAS;IACtBC,WAAW,EAAE,CAAC;IACdrB,cAAc,EAAE,QAAQ;IACxBU,KAAK,EAAE,MAAM;IACba,IAAI,EAAE;EACV,CAAC;EAEDC,OAAO,EAAE;IACLhB,eAAe,EAAE,SAAS;IAC1BW,MAAM,EAAE,CAAC;IACTH,SAAS,EAAE,QAAQ;IACnBH,QAAQ,EAAE,EAAE;IACZO,WAAW,EAAE,SAAS;IACtBC,WAAW,EAAE,CAAC;IACdrB,cAAc,EAAE,QAAQ;IACxBU,KAAK,EAAE,MAAM;IACba,IAAI,EAAE;EACV,CAAC;EAED3B,UAAU,EAAE;IAERiB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBE,SAAS,EAAE,QAAQ;IACnBR,eAAe,EAAE,SAAS;IAC1BE,KAAK,EAAE,MAAM;IAEbV,cAAc,EAAE;EAEpB,CAAC;EAEDyB,UAAU,EAAE;IAERZ,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBE,SAAS,EAAE,QAAQ;IACnBR,eAAe,EAAE,SAAS;IAC1BE,KAAK,EAAE,MAAM;IACbV,cAAc,EAAE,QAAQ;IACxB0B,UAAU,EAAE;EAEhB,CAAC;EACD7B,QAAQ,EAAE;IAENgB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBE,SAAS,EAAE,QAAQ;IACnBR,eAAe,EAAE,MAAM;IACvBE,KAAK,EAAE,MAAM;IACbiB,YAAY,EAAE,QAAQ;IACtB/K,MAAM,EAAE;EAIZ,CAAC;EACD+I,QAAQ,EAAE;IAENkB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBE,SAAS,EAAE,QAAQ;IACnBR,eAAe,EAAE,MAAM;IACvBE,KAAK,EAAE,MAAM;IACbiB,YAAY,EAAE,QAAQ;IACtB/K,MAAM,EAAE;EAEZ,CAAC;EAIDgL,UAAU,EAAE;IACRlB,KAAK,EAAE,MAAM;IACbG,QAAQ,EAAE,EAAE;IACZD,WAAW,EAAE;EAGjB,CAAC;EACDiB,aAAa,EAAE;IACXC,aAAa,EAAE,KAAK;IACpBlL,MAAM,EAAE,EAAE;IACVoJ,cAAc,EAAE,QAAQ;IACxB+B,YAAY,EAAE;EAClB,CAAC;EACDC,UAAU,EAAE;IAERnB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBE,SAAS,EAAE,QAAQ;IACnBR,eAAe,EAAE,SAAS;IAC1BE,KAAK,EAAE,MAAM;IAEbV,cAAc,EAAE;EAEpB;AAEJ,CAAC,CAAC"},"metadata":{},"sourceType":"module"}