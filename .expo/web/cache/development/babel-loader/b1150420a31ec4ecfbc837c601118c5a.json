{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport Passes from \"./Mapofclasspasses/Mapofclasspasses\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { auth, firebase } from \"../Firebase/Config\";\nimport { getAuth, onAuthStateChanged, createUserWithEmailAndPassword, sendEmailVerification } from \"@firebase/auth\";\nimport { onSnapshot, collection, addDoc, query, where, getDocs, deleteDoc, doc, setDoc, getDoc, updateDoc, FieldValue, arrayUnion, orderBy, limit } from \"@firebase/firestore\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar height = Dimensions.get(\"window\").height;\nexport default function SignUp(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _route$params = route.params,\n    idofcurrentclass = _route$params.idofcurrentclass,\n    currentsessionid = _route$params.currentsessionid,\n    endlastclass = _route$params.endlastclass,\n    userinformation = _route$params.userinformation,\n    school = _route$params.school,\n    state = _route$params.state,\n    town = _route$params.town,\n    role = _route$params.role,\n    bathroompasslimit = _route$params.bathroompasslimit,\n    ifnegativeplusminus = _route$params.ifnegativeplusminus,\n    nonbathroompasslimit = _route$params.nonbathroompasslimit,\n    exclusivephonepassmaxstudents = _route$params.exclusivephonepassmaxstudents,\n    exclusivephonepasstimelmit = _route$params.exclusivephonepasstimelmit,\n    lengthofclass = _route$params.lengthofclass,\n    classiscurrent = _route$params.classiscurrent,\n    nameofcurrentclass = _route$params.nameofcurrentclass,\n    starttimeofcurrentclass = _route$params.starttimeofcurrentclass,\n    classid = _route$params.classid,\n    coursename = _route$params.coursename,\n    section = _route$params.section,\n    location = _route$params.location,\n    teacherid = _route$params.teacherid,\n    teacheriscalled = _route$params.teacheriscalled,\n    email = _route$params.email,\n    starttime = _route$params.starttime,\n    lengthofclassesforacomputer = _route$params.lengthofclassesforacomputer,\n    inpenalty = _route$params.inpenalty,\n    stoptimepenalty = _route$params.stoptimepenalty,\n    starttimepenalty = _route$params.starttimepenalty,\n    totaltimepenalty = _route$params.totaltimepenalty,\n    alreadyused = _route$params.alreadyused,\n    teacher = _route$params.teacher,\n    Selectedclassdestination = _route$params.Selectedclassdestination,\n    youcangetpass = _route$params.youcangetpass,\n    currentlocation = _route$params.currentlocation,\n    locationdestination = _route$params.locationdestination,\n    firstname = _route$params.firstname,\n    lastname = _route$params.lastname,\n    ledby = _route$params.ledby,\n    grouptime = _route$params.grouptime,\n    drinkofwater = _route$params.drinkofwater,\n    exclusivetime = _route$params.exclusivetime,\n    donewithworkpass = _route$params.donewithworkpass,\n    bathroomtime = _route$params.bathroomtime,\n    nonbathroomtime = _route$params.nonbathroomtime,\n    bathroompassinuse = _route$params.bathroompassinuse,\n    totalinlineforbathroom = _route$params.totalinlineforbathroom,\n    lengthofclasses = _route$params.lengthofclasses,\n    endlastclasssubstitute = _route$params.endlastclasssubstitute,\n    thelastid = _route$params.thelastid,\n    phonepassduration = _route$params.phonepassduration,\n    overunder = _route$params.overunder,\n    drinkpassduration = _route$params.drinkpassduration,\n    bathroompassduration = _route$params.bathroompassduration,\n    otherpassduration = _route$params.otherpassduration,\n    maxstudentsphonepass = _route$params.maxstudentsphonepass,\n    donewithworkphonepass = _route$params.donewithworkphonepass,\n    consequenceid = _route$params.consequenceid,\n    id = _route$params.id,\n    sessionending = _route$params.sessionending,\n    maxstudentsbathroom = _route$params.maxstudentsbathroom,\n    totalclasstime = _route$params.totalclasstime,\n    idselected = _route$params.idselected,\n    penaltyminutes = _route$params.penaltyminutes,\n    adjustments = _route$params.adjustments,\n    abc = _route$params.abc,\n    drinkpasslimit = _route$params.drinkpasslimit,\n    linkedclass = _route$params.linkedclass;\n  console.log(totalinlineforbathroom, \"totalinline\", howmany, \"howmanypeopleinline\");\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    userdata = _useState2[0],\n    setUserdata = _useState2[1];\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    classdata = _useState4[0],\n    setClassdata = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedclass = _useState6[0],\n    setSelectedclass = _useState6[1];\n  var _useState7 = useState(),\n    _useState8 = _slicedToArray(_useState7, 2),\n    idselected2 = _useState8[0],\n    setIdselected2 = _useState8[1];\n  var _useState9 = useState(),\n    _useState10 = _slicedToArray(_useState9, 2),\n    empty = _useState10[0],\n    setEmpty = _useState10[1];\n  var _useState11 = useState(true),\n    _useState12 = _slicedToArray(_useState11, 2),\n    showspinner = _useState12[0],\n    setShowspinner = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    classtrue = _useState14[0],\n    setClasstrue = _useState14[1];\n  var _useState15 = useState(\"\"),\n    _useState16 = _slicedToArray(_useState15, 2),\n    classbegin = _useState16[0],\n    setclassbegin = _useState16[1];\n  var _useState17 = useState(0),\n    _useState18 = _slicedToArray(_useState17, 2),\n    duration = _useState18[0],\n    setduration = _useState18[1];\n  var _useState19 = useState(false),\n    _useState20 = _slicedToArray(_useState19, 2),\n    sessionended = _useState20[0],\n    setSessionended = _useState20[1];\n  var _useState21 = useState(),\n    _useState22 = _slicedToArray(_useState21, 2),\n    idsofpasses = _useState22[0],\n    setIdsofpasses = _useState22[1];\n  var _useState23 = useState(),\n    _useState24 = _slicedToArray(_useState23, 2),\n    newoverunder = _useState24[0],\n    setNewoverunder = _useState24[1];\n  var _useState25 = useState(),\n    _useState26 = _slicedToArray(_useState25, 2),\n    returnedzero = _useState26[0],\n    setReturnedzero = _useState26[1];\n  var _useState27 = useState(),\n    _useState28 = _slicedToArray(_useState27, 2),\n    limitreached = _useState28[0],\n    setLimitreached = _useState28[1];\n  var _useState29 = useState(),\n    _useState30 = _slicedToArray(_useState29, 2),\n    studentid = _useState30[0],\n    setStudentid = _useState30[1];\n  var _useState31 = useState(),\n    _useState32 = _slicedToArray(_useState31, 2),\n    dest = _useState32[0],\n    setDest = _useState32[1];\n  var _useState33 = useState(),\n    _useState34 = _slicedToArray(_useState33, 2),\n    howmany = _useState34[0],\n    setHowmanypeople = _useState34[1];\n  var _useState35 = useState(),\n    _useState36 = _slicedToArray(_useState35, 2),\n    leftclassonpass = _useState36[0],\n    setLeftclassonpass = _useState36[1];\n  var _useState37 = useState(),\n    _useState38 = _slicedToArray(_useState37, 2),\n    userdatabefore = _useState38[0],\n    setUserdatabefore = _useState38[1];\n  var _useState39 = useState(),\n    _useState40 = _slicedToArray(_useState39, 2),\n    localpercent = _useState40[0],\n    setLocalpercent = _useState40[1];\n  var _useState41 = useState([]),\n    _useState42 = _slicedToArray(_useState41, 2),\n    test = _useState42[0],\n    setTest = _useState42[1];\n  var _useState43 = useState(false),\n    _useState44 = _slicedToArray(_useState43, 2),\n    helpgiven = _useState44[0],\n    setHelpgiven = _useState44[1];\n  var _useState45 = useState(),\n    _useState46 = _slicedToArray(_useState45, 2),\n    studentfirstname = _useState46[0],\n    setStudentfirstname = _useState46[1];\n  var _useState47 = useState(),\n    _useState48 = _slicedToArray(_useState47, 2),\n    currentmax2 = _useState48[0],\n    setCurrentmax2 = _useState48[1];\n  useEffect(function () {\n    setCurrentmax2(maxstudentsbathroom);\n  }, []);\n  var letthenextstudentgo = function letthenextstudentgo() {\n    console.log(currentmax);\n    setCurrentmax2(currentmax2 + 1);\n  };\n  var reducemaxbathroom = function reducemaxbathroom() {\n    if (currentmax2 > 1) {\n      setCurrentmax2(currentmax2 - 1);\n    }\n  };\n  useEffect(function () {\n    if (currentmax2 > -2) {\n      updateDoc(doc(firebase, \"classesbeingtaught\", classid), {\n        bathroompassmaxstudents: currentmax2\n      }).catch(function (error) {\n        console.log(error);\n        alert(error);\n      });\n    } else {\n      null;\n    }\n  }, [currentmax2]);\n  useEffect(function () {\n    return onSnapshot(doc(firebase, \"classesbeingtaught\", classid), function (doc) {\n      checkDatabaseData2();\n    });\n  }, []);\n  useEffect(function () {\n    var classbegin = selectedclass.classbegin;\n    var duration = selectedclass.lengthofclass;\n    var idselect = selectedclass.id;\n    var returned = selectedclass.returned;\n    var limit = selectedclass.whenlimitwillbereached;\n    var student = selectedclass.studentid;\n    var destination = selectedclass.destination;\n    var left = selectedclass.leftclass;\n    var first = selectedclass.firstname;\n    setStudentfirstname(first);\n    setStudentid(student);\n    setDest(destination);\n    setLeftclassonpass(left);\n    setReturnedzero(returned);\n    setduration(duration);\n    setclassbegin(classbegin);\n    setLimitreached(limit);\n    setIdselected2(idselect);\n  }, [selectedclass]);\n  useEffect(function () {\n    if (typeof classid != \"undefined\") {\n      checkDatabaseData2();\n    }\n    setHelpgiven(false);\n  }, []);\n  useEffect(function () {\n    setHelpgiven(false);\n  }, [idselected2]);\n  useEffect(function () {\n    console.log(howmany, \"howmanypeople\");\n  }, [howmany]);\n  function checkDatabaseData2() {\n    return _checkDatabaseData.apply(this, arguments);\n  }\n  function _checkDatabaseData() {\n    _checkDatabaseData = _asyncToGenerator(function* () {\n      console.log(\"12Did it get this far? \");\n      var docRef = doc(firebase, \"classesbeingtaught\", classid);\n      var docSnap = yield getDoc(docRef);\n      if (docSnap.exists()) {\n        setHowmanypeople(docSnap.data().inusebathroompass);\n      } else {\n      }\n    });\n    return _checkDatabaseData.apply(this, arguments);\n  }\n  ;\n  var endpasses = function endpasses() {\n    if (sessionending < Date.now()) {\n      var q = query(collection(firebase, \"passes\"), where(\"classsessionid\", \"==\", currentsessionid), where(\"returned\", \"==\", 0));\n      var querySnapshot = getDocs(q).then(function (snapshot) {\n        var array = [];\n        snapshot.forEach(function (doc) {\n          array.push({\n            id: doc.data().id,\n            expectedreturn: doc.data().whenlimitwillbereached,\n            endofclasssession: doc.data().endofclasssession\n          });\n        });\n        if (array.length === 0) {\n          console.log(\"No passes to change\");\n        } else {\n          setIdsofpasses(array);\n          console.log(array, \"This is the pass \");\n        }\n      });\n    }\n  };\n  useEffect(function () {\n    if (typeof idsofpasses != \"undefined\") {\n      var t = Date.now();\n      for (var s = 0; s < idsofpasses.length; s++) {\n        var r = new Date(idsofpasses[s].endofclasssession);\n        updateDoc(doc(firebase, \"passes\", idsofpasses[s].id), {\n          returned: idsofpasses[s].endofclasssession,\n          timereturned: r.toLocaleTimeString([], {\n            hour12: true\n          }),\n          returnedbeforetimelimit: idsofpasses[s].expectedreturn > idsofpasses[s].endofclasssession,\n          differenceoverorunderinminutes: (idsofpasses[s].expectedreturn - idsofpasses[s].endofclasssession) / 60000\n        }).catch(function (error) {\n          console.log(error);\n          alert(error);\n        });\n      }\n    }\n  }, [idsofpasses]);\n  var ifitshtere = function ifitshtere() {\n    if (sessionending < Date.now()) {\n      updateDoc(doc(firebase, \"classsessions\", currentsessionid), {\n        status: \"Completed\"\n      }).catch(function (error) {\n        console.log(error);\n        alert(\"2\", error);\n      });\n      endpasses();\n    }\n  };\n  useEffect(function () {\n    refresh3();\n  }, []);\n  function refresh3() {\n    return _refresh.apply(this, arguments);\n  }\n  function _refresh() {\n    _refresh = _asyncToGenerator(function* () {\n      if (typeof currentsessionid != \"undefined\") {\n        var docRef = doc(firebase, \"classsessions\", currentsessionid);\n        var docSnap = yield getDoc(docRef);\n        if (docSnap.exists()) {\n          ifitshtere();\n        } else {\n          console.log(\"No such document!\");\n        }\n        console.log(\"THIIIIS was NOW RUN\");\n      }\n    });\n    return _refresh.apply(this, arguments);\n  }\n  useEffect(function () {\n    console.log(\"THIS IS THE IDddddddddddddd\");\n    getlocationsqrcodes();\n  }, []);\n  useEffect(function () {\n    console.log(\"THIS IS THE IDddddddddddddd\");\n    getlocationsqrcodes();\n  }, [test]);\n  useEffect(function () {\n    userdata.forEach(function (obj) {\n      console.log(obj.id, obj.differenceoverorunderinminutes, \"THI SI SIS THE USSERDATA\");\n    });\n  }, [userdata]);\n\n  function getlocationsqrcodes() {\n    return _getlocationsqrcodes.apply(this, arguments);\n  }\n  function _getlocationsqrcodes() {\n    _getlocationsqrcodes = _asyncToGenerator(function* () {\n      if (typeof userdatabefore === \"undefined\") {\n\n        var q = query(collection(firebase, \"passes\"), where('classesinvolved', 'array-contains-any', [classid]), orderBy(\"timepassinitiated\", \"desc\"), limit(20));\n\n        var querySnapshot = yield getDocs(q).then(function (snapshot) {\n          var statusarray = [];\n          var array = [];\n          snapshot.forEach(function (doc) {\n            array.push(doc.data());\n            statusarray.push(doc.data().status);\n          });\n          if (array.length === 0) {\n            setUserdata([{\n              classname: \"You haven't Registered\"\n            }]);\n            setEmpty(true);\n          } else {\n\n            setEmpty(false);\n            setUserdata(array);\n            console.log(\"HEEEEEEEEYYYYY,\", idselected, \"HEEEEEEEEEEEEy\");\n          }\n          if (statusarray.includes(\"Happening Now\")) {\n            setSessionended(false);\n          } else {\n            setSessionended(true);\n          }\n        });\n        setShowspinner(false);\n      }\n    });\n    return _getlocationsqrcodes.apply(this, arguments);\n  }\n  ;\n  useEffect(function () {\n    if (coursename) {\n      navigation.setOptions({\n        headerLeft: function headerLeft() {\n          return _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return navigation.navigate(\"Mainmenuteacher\", {\n                idofcurrentclass: idofcurrentclass,\n                currentsessionid: currentsessionid,\n                sessionending: sessionending,\n                endlastclass: endlastclass,\n                userinformation: userinformation,\n                school: school,\n                state: state,\n                town: town,\n                role: role,\n                id: id,\n                bathroompasslimit: bathroompasslimit,\n                ifnegativeplusminus: ifnegativeplusminus,\n                drinkpasslimit: drinkpasslimit,\n                nonbathroompasslimit: nonbathroompasslimit,\n                exclusivephonepassmaxstudents: exclusivephonepassmaxstudents,\n                exclusivephonepasstimelmit: exclusivephonepasstimelmit,\n                lengthofclass: lengthofclass,\n                classiscurrent: classiscurrent,\n                nameofcurrentclass: nameofcurrentclass,\n                starttimeofcurrentclass: starttimeofcurrentclass,\n                classid: classid,\n                coursename: coursename,\n                section: section,\n                location: location,\n                teacherid: teacherid,\n                teacheriscalled: teacheriscalled,\n                email: email,\n                starttime: starttime,\n                lengthofclassesforacomputer: lengthofclassesforacomputer,\n                inpenalty: inpenalty,\n                stoptimepenalty: stoptimepenalty,\n                starttimepenalty: starttimepenalty,\n                totaltimepenalty: totaltimepenalty,\n                alreadyused: alreadyused,\n                teacher: teacher,\n                Selectedclassdestination: Selectedclassdestination,\n                youcangetpass: youcangetpass,\n                currentlocation: currentlocation,\n                locationdestination: locationdestination,\n                firstname: firstname,\n                lastname: lastname,\n                ledby: ledby,\n                grouptime: grouptime,\n                drinkofwater: drinkofwater,\n                drinkofwater: drinkofwater,\n                exclusivetime: exclusivetime,\n                donewithworkpass: donewithworkpass,\n                bathroomtime: bathroomtime,\n                nonbathroomtime: nonbathroomtime,\n                bathroompassinuse: bathroompassinuse,\n                totalinlineforbathroom: totalinlineforbathroom,\n                lengthofclasses: lengthofclasses,\n                endlastclasssubstitute: endlastclasssubstitute,\n                sessionended: sessionended,\n                thelastid: thelastid,\n                drinkpassduration: drinkpassduration,\n                phonepassduration: phonepassduration,\n                bathroompassduration: bathroompassduration,\n                overunder: overunder,\n                otherpassduration: otherpassduration,\n                maxstudentsphonepass: maxstudentsphonepass,\n                donewithworkphonepass: donewithworkphonepass,\n                consequenceid: consequenceid,\n                maxstudentsbathroom: maxstudentsbathroom,\n                newoverunder: newoverunder,\n                penaltyminutes: penaltyminutes,\n                adjustments: adjustments,\n                abc: abc,\n                linkedclass: linkedclass\n              });\n            },\n            children: _jsx(Text, {\n              accessibilityLabel: \"Guest\",\n              style: styles.error5,\n              children: \"Main Menu\"\n            })\n          });\n        }\n      });\n    } else {\n      navigation.setOptions({\n        headerLeft: function headerLeft() {\n          return _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return navigation.navigate(\"Mainmenuteacher\", {\n                idofcurrentclass: idofcurrentclass,\n                currentsessionid: currentsessionid,\n                sessionending: sessionending,\n                endlastclass: endlastclass,\n                userinformation: userinformation,\n                school: school,\n                state: state,\n                town: town,\n                role: role,\n                id: id,\n                bathroompasslimit: bathroompasslimit,\n                ifnegativeplusminus: ifnegativeplusminus,\n                nonbathroompasslimit: nonbathroompasslimit,\n                drinkpasslimit: drinkpasslimit,\n                exclusivephonepassmaxstudents: exclusivephonepassmaxstudents,\n                exclusivephonepasstimelmit: exclusivephonepasstimelmit,\n                lengthofclass: lengthofclass,\n                classiscurrent: classiscurrent,\n                nameofcurrentclass: nameofcurrentclass,\n                starttimeofcurrentclass: starttimeofcurrentclass,\n                classid: classid,\n                coursename: coursename,\n                section: section,\n                location: location,\n                teacherid: teacherid,\n                teacheriscalled: teacheriscalled,\n                email: email,\n                starttime: starttime,\n                lengthofclassesforacomputer: lengthofclassesforacomputer,\n                inpenalty: inpenalty,\n                stoptimepenalty: stoptimepenalty,\n                starttimepenalty: starttimepenalty,\n                totaltimepenalty: totaltimepenalty,\n                alreadyused: alreadyused,\n                teacher: teacher,\n                Selectedclassdestination: Selectedclassdestination,\n                youcangetpass: youcangetpass,\n                currentlocation: currentlocation,\n                locationdestination: locationdestination,\n                firstname: firstname,\n                lastname: lastname,\n                ledby: ledby,\n                grouptime: grouptime,\n                drinkofwater: drinkofwater,\n                exclusivetime: exclusivetime,\n                donewithworkpass: donewithworkpass,\n                bathroomtime: bathroomtime,\n                nonbathroomtime: nonbathroomtime,\n                bathroompassinuse: bathroompassinuse,\n                totalinlineforbathroom: totalinlineforbathroom,\n                lengthofclasses: lengthofclasses,\n                endlastclasssubstitute: endlastclasssubstitute,\n                sessionended: sessionended,\n                thelastid: thelastid,\n                drinkpassduration: drinkpassduration,\n                phonepassduration: phonepassduration,\n                bathroompassduration: bathroompassduration,\n                overunder: overunder,\n                otherpassduration: otherpassduration,\n                maxstudentsphonepass: maxstudentsphonepass,\n                donewithworkphonepass: donewithworkphonepass,\n                consequenceid: consequenceid,\n                maxstudentsbathroom: maxstudentsbathroom,\n                newoverunder: newoverunder,\n                penaltyminutes: penaltyminutes,\n                adjustments: adjustments,\n                abc: abc,\n                linkedclass: linkedclass\n              });\n            },\n            children: _jsx(Text, {\n              accessibilityLabel: \"Guest\",\n              style: styles.error5,\n              children: \"Main Menu\"\n            })\n          });\n        }\n      });\n    }\n  }, [coursename]);\n  var createTwoButtonAlert = function createTwoButtonAlert() {\n    return Alert.alert('Please be aware.', 'This will permanently remove this pass from the system.', [{\n      text: 'Cancel',\n      onPress: function onPress() {\n        return console.log('Cancel Pressed');\n      },\n      style: 'cancel'\n    }, {\n      text: 'Delete Pass',\n      onPress: function onPress() {\n        return deleteToDo();\n      }\n    }]);\n  };\n  var deleteToDo = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var userDoc = doc(firebase, \"passes\", idselected2);\n      yield deleteDoc(userDoc).then(_asyncToGenerator(function* () {\n        getlocationsqrcodes();\n      }));\n    });\n    return function deleteToDo() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  function ReturnStudnet2() {\n    return _ReturnStudnet.apply(this, arguments);\n  }\n  function _ReturnStudnet() {\n    _ReturnStudnet = _asyncToGenerator(function* () {\n      if (howmany > 0) {\n        yield updateDoc(doc(firebase, \"classesbeingtaught\", classid), {\n          inusebathroompass: howmany - 1\n        }).catch(function (error) {\n          console.log(error);\n          alert(error);\n        }).then(_asyncToGenerator(function* () {\n          console.log(\"comppleted\");\n          setHowmanypeople(howmany - 1);\n        }));\n      } else {\n        yield updateDoc(doc(firebase, \"classesbeingtaught\", classid), {\n          inusebathroompass: 0\n        }).catch(function (error) {\n          console.log(error);\n          alert(error);\n        }).then(_asyncToGenerator(function* () {\n          console.log(\"comppleted\");\n          setHowmanypeople(0);\n        }));\n      }\n    });\n    return _ReturnStudnet.apply(this, arguments);\n  }\n  function ReturnStudentFromPass() {\n    return _ReturnStudentFromPass.apply(this, arguments);\n  }\n  function _ReturnStudentFromPass() {\n    _ReturnStudentFromPass = _asyncToGenerator(function* () {\n      var r = new Date();\n      var t = Date.now();\n      var ontime = limitreached > t;\n      console.log(\"2 was this run?,\", t, r, \"endofclasssession\", \"newDate\");\n      var currentdiff = (limitreached - t) / 60000;\n      if (dest === \"Bathroom\") {\n        yield updateDoc(doc(firebase, \"passes\", idselected2), {\n          returned: t,\n          timereturned: r.toLocaleTimeString([], {\n            hour12: true\n          }),\n          returnedbeforetimelimit: ontime,\n          differenceoverorunderinminutes: currentdiff\n        }).catch(function (error) {\n          console.log(error);\n          alert(error);\n        }), yield updateDoc(doc(firebase, \"users\", studentid), {\n          passid: \"\",\n          status: \"\"\n        }).catch(function (error) {\n          console.log(error);\n          alert(error);\n        }), yield updateDoc(doc(firebase, \"classesbeingtaught\", classid), {\n          inusebathroompass: howmany - 1\n        }).catch(function (error) {\n          console.log(error);\n          alert(error);\n        }).then(_asyncToGenerator(function* () {\n          console.log(\"comppleted\");\n        }));\n      } else {\n        yield updateDoc(doc(firebase, \"passes\", idselected2), {\n          returned: t,\n          timereturned: r.toLocaleTimeString([], {\n            hour12: true\n          }),\n          returnedbeforetimelimit: ontime,\n          differenceoverorunderinminutes: currentdiff\n        }).catch(function (error) {\n          console.log(error);\n          alert(error);\n        }), yield updateDoc(doc(firebase, \"users\", studentid), {\n          passid: \"\",\n          status: \"\"\n        }).catch(function (error) {\n          console.log(error);\n          alert(error);\n        }).then(_asyncToGenerator(function* () {\n          console.log(\"comppleted\");\n        }));\n      }\n      getlocationsqrcodes();\n    });\n    return _ReturnStudentFromPass.apply(this, arguments);\n  }\n  function Sendonpass() {\n    return _Sendonpass.apply(this, arguments);\n  }\n  function _Sendonpass() {\n    _Sendonpass = _asyncToGenerator(function* () {\n      yield updateDoc(doc(firebase, \"classesbeingtaught\", classid), {\n        removescanneraddbutton: true\n      }).catch(function (error) {\n        console.log(error);\n        alert(error);\n      }).then(function () {\n        var _ref8 = _asyncToGenerator(function* (check) {\n          setHelpgiven(true);\n        });\n        return function (_x) {\n          return _ref8.apply(this, arguments);\n        };\n      }()).catch(function (error) {\n        console.log(error);\n        alert(error);\n      });\n    });\n    return _Sendonpass.apply(this, arguments);\n  }\n  useEffect(function () {\n    if (typeof userdata != \"undefined\") {\n      setUserdatabefore();\n    }\n  }, [userdata]);\n  return _jsxs(SafeAreaView, {\n    style: styles.largercontainer,\n    children: [_jsx(View, {\n      style: styles.container1,\n      children: _jsx(View, {\n        children: _jsx(TouchableOpacity, {\n          children: _jsxs(Text, {\n            style: styles.error,\n            children: [\"Passes/Tardies:\", '\\n', coursename, \" -- Bathroom (\", howmany, \"-\", currentmax2, \") \"]\n          })\n        })\n      })\n    }), _jsx(View, {\n      style: styles.container2,\n      children: _jsx(Passes, {\n        userdata: userdata,\n        id: id,\n        setSelectedclass: setSelectedclass,\n        selectedclass: selectedclass,\n        idselected: idselected2,\n        localpercent: localpercent,\n        test: test,\n        setTest: setTest\n      })\n    }), _jsx(ScrollView, {\n      children: _jsxs(View, {\n        style: styles.section3,\n        children: [_jsx(View, {\n          children: _jsx(ActivityIndicator, {\n            size: \"large\",\n            color: \"#FFF\",\n            animating: showspinner,\n            style: {\n              position: 'absolute',\n              alignItems: 'center',\n              justifyContent: 'center',\n              left: 0,\n              right: 0,\n              top: 0,\n              bottom: 0\n            }\n          })\n        }), idselected2 && leftclassonpass === 0 && helpgiven === false ? _jsx(Text, {\n          style: styles.paragraph2,\n          onPress: function onPress(e) {\n            return Sendonpass();\n          },\n          children: \"Give Shortcut: Send On Pass\"\n        }) : idselected2 && returnedzero == 0 && helpgiven === false ? _jsx(Text, {\n          style: styles.paragraph2,\n          onPress: function onPress() {\n            return Sendonpass();\n          },\n          children: \"Give Shortcut: Return Pass\"\n        }) : idselected2 && returnedzero == 0 && helpgiven === true ? _jsxs(Text, {\n          style: styles.paragraph2,\n          children: [studentfirstname, \" has Shortcut option\"]\n        }) : _jsx(Text, {\n          style: styles.paragraph2,\n          children: \"    \"\n        }), idselected2 ? _jsx(Text, {\n          style: styles.paragraph2,\n          onPress: function onPress(e) {\n            return createTwoButtonAlert();\n          },\n          children: \"Delete Pass/Tardy \"\n        }) : _jsx(Text, {\n          style: styles.paragraph2,\n          children: \"    \"\n        }), idselected2 && returnedzero === 0 && leftclassonpass != 0 ? _jsx(Text, {\n          style: styles.paragraph2,\n          onPress: function onPress(e) {\n            return ReturnStudentFromPass();\n          },\n          children: \"Return Pass\"\n        }) : _jsx(Text, {\n          style: styles.paragraph2,\n          onPress: function onPress(e) {\n            return ReturnStudnet2();\n          },\n          children: \"Reset Bathroom Availability\"\n        }), _jsx(Pressable, {\n          children: _jsxs(Text, {\n            style: styles.paragraph2,\n            onPress: function onPress() {\n              return letthenextstudentgo();\n            },\n            children: [\"Increase Total Number of\", '\\n', \"Students Allowed in Bathroom\", '\\n']\n          })\n        }), currentmax2 > 1 ? _jsx(Pressable, {\n          onPress: function onPress() {\n            return reducemaxbathroom();\n          },\n          children: _jsxs(Text, {\n            style: styles.paragraph2,\n            children: [\"Decrease Total Number of\", '\\n', \"Students Allowed in Bathroom\", '\\n']\n          })\n        }) : null, _jsxs(Text, {\n          style: styles.paragraph2,\n          children: [\"___________________ \", '\\n']\n        }), _jsx(Text, {\n          style: styles.paragraph2,\n          onPress: function onPress() {\n            return navigation.navigate(\"Mainmenuteacher\", {\n              idofcurrentclass: idofcurrentclass,\n              currentsessionid: currentsessionid,\n              sessionending: sessionending,\n              endlastclass: endlastclass,\n              userinformation: userinformation,\n              school: school,\n              state: state,\n              town: town,\n              role: role,\n              bathroompasslimit: bathroompasslimit,\n              ifnegativeplusminus: ifnegativeplusminus,\n              nonbathroompasslimit: nonbathroompasslimit,\n              drinkpasslimit: drinkpasslimit,\n              exclusivephonepassmaxstudents: exclusivephonepassmaxstudents,\n              exclusivephonepasstimelmit: exclusivephonepasstimelmit,\n              lengthofclass: lengthofclass,\n              classiscurrent: classiscurrent,\n              nameofcurrentclass: nameofcurrentclass,\n              starttimeofcurrentclass: starttimeofcurrentclass,\n              classid: classid,\n              coursename: coursename,\n              section: section,\n              location: location,\n              teacherid: teacherid,\n              teacheriscalled: teacheriscalled,\n              teacheriscalled: teacheriscalled,\n              email: email,\n              starttime: starttime,\n              lengthofclassesforacomputer: lengthofclassesforacomputer,\n              inpenalty: inpenalty,\n              stoptimepenalty: stoptimepenalty,\n              starttimepenalty: starttimepenalty,\n              totaltimepenalty: totaltimepenalty,\n              alreadyused: alreadyused,\n              teacher: teacher,\n              Selectedclassdestination: Selectedclassdestination,\n              youcangetpass: youcangetpass,\n              currentlocation: currentlocation,\n              locationdestination: locationdestination,\n              firstname: firstname,\n              lastname: lastname,\n              ledby: ledby,\n              grouptime: grouptime,\n              drinkofwater: drinkofwater,\n              drinkofwater: drinkofwater,\n              exclusivetime: exclusivetime,\n              donewithworkpass: donewithworkpass,\n              bathroomtime: bathroomtime,\n              nonbathroomtime: nonbathroomtime,\n              bathroompassinuse: bathroompassinuse,\n              totalinlineforbathroom: totalinlineforbathroom,\n              lengthofclasses: lengthofclasses,\n              endlastclasssubstitute: endlastclasssubstitute,\n              sessionended: sessionended,\n              thelastid: thelastid,\n              drinkpassduration: drinkpassduration,\n              phonepassduration: phonepassduration,\n              overunder: overunder,\n              bathroompassduration: bathroompassduration,\n              otherpassduration: otherpassduration,\n              maxstudentsphonepass: maxstudentsphonepass,\n              donewithworkphonepass: donewithworkphonepass,\n              consequenceid: consequenceid,\n              maxstudentsbathroom: maxstudentsbathroom,\n              newoverunder: newoverunder,\n              penaltyminutes: penaltyminutes,\n              adjustments: adjustments,\n              abc: abc,\n              linkedclass: linkedclass\n            });\n          },\n          children: \"Return to Main Menu\"\n        })]\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#000\",\n    alignItems: \"center\",\n    width: \"100%\"\n  },\n  largercontainer: {\n    height: height,\n    backgroundColor: \"#000\"\n  },\n  container1: {\n    height: \"16%\",\n    backgroundColor: '#000',\n    width: \"100%\",\n    justifyContent: \"center\"\n  },\n  error: {\n    backgroundColor: '#000',\n    color: \"#FFF\",\n    marginLeft: \"3%\",\n    marginRight: \"3%\",\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: \"center\"\n  },\n  container2: {\n    height: \"35%\",\n    backgroundColor: \"#013469\",\n    width: \"100%\"\n  },\n  paragraph: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    backgroundColor: '#000000',\n    color: \"#fff\",\n    height: \"100%\",\n    textAlign: \"center\",\n    marginTop: \"10%\"\n  },\n  Newrow: {\n    backgroundColor: '#000000',\n    margin: 2,\n    textAlign: \"center\",\n    fontSize: 20,\n    width: \"90%\",\n    borderColor: \"#E43522\",\n    borderWidth: 4,\n    justifyContent: \"center\",\n    color: \"#fff\"\n  },\n  Newrowa: {\n    backgroundColor: '#000000',\n    margin: 4,\n    textAlign: \"center\",\n    fontSize: 20,\n    borderColor: \"#E43522\",\n    borderWidth: 4,\n    justifyContent: \"center\",\n    color: \"#fff\",\n    flex: 1\n  },\n  Newrowb: {\n    backgroundColor: '#000000',\n    margin: 4,\n    textAlign: \"center\",\n    fontSize: 20,\n    borderColor: \"#E43522\",\n    borderWidth: 4,\n    justifyContent: \"center\",\n    color: \"#fff\",\n    flex: .4\n  },\n  paragraph2: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: \"center\",\n    backgroundColor: '#000000',\n    color: \"#fff\",\n    justifyContent: \"center\",\n    marginTop: 30\n  },\n  paragraph4: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    backgroundColor: '#000000',\n    color: \"#fff\",\n    justifyContent: \"center\",\n    lineHeight: 30\n  },\n  section3: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    backgroundColor: \"#000\",\n    color: \"#fff\",\n    alignContent: \"center\",\n    height: \"49%\"\n  },\n  paragraph6: {\n    color: \"#fff\",\n    fontSize: 17,\n    marginRight: 7\n  },\n  textContainer: {\n    flexDirection: 'row',\n    height: 50,\n    justifyContent: 'center',\n    marginBottom: 20\n  },\n  error5: {\n    backgroundColor: '#000',\n    color: \"#FFF\",\n    marginLeft: \"3%\",\n    marginRight: \"3%\",\n    fontSize: 17,\n    fontWeight: 'bold',\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","Passes","auth","firebase","getAuth","onAuthStateChanged","createUserWithEmailAndPassword","sendEmailVerification","onSnapshot","collection","addDoc","query","where","getDocs","deleteDoc","doc","setDoc","getDoc","updateDoc","FieldValue","arrayUnion","orderBy","limit","height","Dimensions","get","SignUp","route","navigation","params","idofcurrentclass","currentsessionid","endlastclass","userinformation","school","state","town","role","bathroompasslimit","ifnegativeplusminus","nonbathroompasslimit","exclusivephonepassmaxstudents","exclusivephonepasstimelmit","lengthofclass","classiscurrent","nameofcurrentclass","starttimeofcurrentclass","classid","coursename","section","location","teacherid","teacheriscalled","email","starttime","lengthofclassesforacomputer","inpenalty","stoptimepenalty","starttimepenalty","totaltimepenalty","alreadyused","teacher","Selectedclassdestination","youcangetpass","currentlocation","locationdestination","firstname","lastname","ledby","grouptime","drinkofwater","exclusivetime","donewithworkpass","bathroomtime","nonbathroomtime","bathroompassinuse","totalinlineforbathroom","lengthofclasses","endlastclasssubstitute","thelastid","phonepassduration","overunder","drinkpassduration","bathroompassduration","otherpassduration","maxstudentsphonepass","donewithworkphonepass","consequenceid","id","sessionending","maxstudentsbathroom","totalclasstime","idselected","penaltyminutes","adjustments","abc","drinkpasslimit","linkedclass","console","log","howmany","userdata","setUserdata","classdata","setClassdata","selectedclass","setSelectedclass","idselected2","setIdselected2","empty","setEmpty","showspinner","setShowspinner","classtrue","setClasstrue","classbegin","setclassbegin","duration","setduration","sessionended","setSessionended","idsofpasses","setIdsofpasses","newoverunder","setNewoverunder","returnedzero","setReturnedzero","limitreached","setLimitreached","studentid","setStudentid","dest","setDest","setHowmanypeople","leftclassonpass","setLeftclassonpass","userdatabefore","setUserdatabefore","localpercent","setLocalpercent","test","setTest","helpgiven","setHelpgiven","studentfirstname","setStudentfirstname","currentmax2","setCurrentmax2","letthenextstudentgo","currentmax","reducemaxbathroom","bathroompassmaxstudents","catch","error","alert","checkDatabaseData2","idselect","returned","whenlimitwillbereached","student","destination","left","leftclass","first","docRef","docSnap","exists","data","inusebathroompass","endpasses","Date","now","q","querySnapshot","then","snapshot","array","forEach","push","expectedreturn","endofclasssession","length","t","s","r","timereturned","toLocaleTimeString","hour12","returnedbeforetimelimit","differenceoverorunderinminutes","ifitshtere","status","refresh3","getlocationsqrcodes","obj","statusarray","classname","includes","setOptions","headerLeft","navigate","styles","error5","createTwoButtonAlert","Alert","text","onPress","style","deleteToDo","userDoc","ReturnStudnet2","ReturnStudentFromPass","ontime","currentdiff","passid","Sendonpass","removescanneraddbutton","check","largercontainer","container1","container2","section3","position","alignItems","justifyContent","right","top","bottom","paragraph2","e","StyleSheet","create","container","backgroundColor","width","color","marginLeft","marginRight","fontSize","fontWeight","textAlign","paragraph","marginTop","Newrow","margin","borderColor","borderWidth","Newrowa","flex","Newrowb","paragraph4","lineHeight","alignContent","paragraph6","textContainer","flexDirection","marginBottom"],"sources":["/Users/matt/Desktop/hallpasstesting/Navigation/Components/Passesfromthisclass.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Passes from './Mapofclasspasses/Mapofclasspasses';\n\nimport { Alert, SafeAreaView, Text, View, TextInput, KeyboardAvoidingView, Platform, StyleSheet, ScrollView, TouchableOpacity, Dimensions, ActivityIndicator } from 'react-native';\n\nimport { auth, firebase } from \"../Firebase/Config\";\nimport { getAuth, onAuthStateChanged, createUserWithEmailAndPassword, sendEmailVerification } from \"@firebase/auth\";\nimport { onSnapshot, collection, addDoc, query, where, getDocs, deleteDoc, doc, setDoc, getDoc, updateDoc, FieldValue, arrayUnion, orderBy, limit } from \"@firebase/firestore\";\n\n\nconst height = Dimensions.get(\"window\").height;\n\nexport default function SignUp({ route, navigation }) {\n\n    const { idofcurrentclass, currentsessionid, endlastclass, userinformation, school, state, town, role, bathroompasslimit, ifnegativeplusminus, nonbathroompasslimit, exclusivephonepassmaxstudents, exclusivephonepasstimelmit, lengthofclass, classiscurrent, nameofcurrentclass, starttimeofcurrentclass, classid, coursename, section, location, teacherid, teacheriscalled,\n        email, starttime, lengthofclassesforacomputer, inpenalty, stoptimepenalty, starttimepenalty, totaltimepenalty, alreadyused, teacher, Selectedclassdestination, youcangetpass, currentlocation, locationdestination, firstname, lastname, ledby, grouptime, drinkofwater, exclusivetime, donewithworkpass, bathroomtime, nonbathroomtime, bathroompassinuse, totalinlineforbathroom, lengthofclasses, endlastclasssubstitute, thelastid, phonepassduration, overunder, drinkpassduration, bathroompassduration, otherpassduration, maxstudentsphonepass, donewithworkphonepass, consequenceid, id, sessionending, maxstudentsbathroom, totalclasstime, idselected, penaltyminutes, adjustments, abc, drinkpasslimit, linkedclass\n    } = route.params;\n    console.log(totalinlineforbathroom, \"totalinline\", howmany, \"howmanypeopleinline\");\n\n    const [userdata, setUserdata] = useState([]);\n    const [classdata, setClassdata] = useState();\n    const [selectedclass, setSelectedclass] = useState(\"\");\n    const [idselected2, setIdselected2] = useState();\n    const [empty, setEmpty] = useState();\n\n    const [showspinner, setShowspinner] = useState(true);\n    const [classtrue, setClasstrue] = useState(false)\n    const [classbegin, setclassbegin] = useState(\"\");\n    const [duration, setduration] = useState(0);\n    const [sessionended, setSessionended] = useState(false);\n\n    const [idsofpasses, setIdsofpasses] = useState();\n\n    const [newoverunder, setNewoverunder] = useState();\n    const [returnedzero, setReturnedzero] = useState();\n    const [limitreached, setLimitreached] = useState();\n    const [studentid, setStudentid] = useState();\n    const [dest, setDest] = useState();\n    const [howmany, setHowmanypeople] = useState();\n    const [leftclassonpass, setLeftclassonpass] = useState();\n    const [userdatabefore, setUserdatabefore] = useState();\n    const [localpercent, setLocalpercent] = useState();\n    const [test, setTest] = useState([]);\n    const [helpgiven, setHelpgiven] = useState(false);\n    const [studentfirstname, setStudentfirstname] = useState();\n\n    const [currentmax2, setCurrentmax2] = useState();\n\n    useEffect(() => {\n        setCurrentmax2(maxstudentsbathroom);\n    }, []);\n\n    const letthenextstudentgo = () => {\n        console.log(currentmax);\n        setCurrentmax2(currentmax2 + 1);\n    }\n\n    const reducemaxbathroom = () => {\n        if (currentmax2 > 1) {\n            setCurrentmax2(currentmax2 - 1);\n        }\n    }\n\n    useEffect(() => {\n        if (currentmax2 > -2) {\n            updateDoc(doc(firebase, \"classesbeingtaught\", classid), {\n                bathroompassmaxstudents: currentmax2\n            }).catch((error) => {\n                console.log(error); alert(error);\n            })\n        } else {\n            null\n        }\n    }, [currentmax2]);\n\n\n    useEffect(() =>\n        onSnapshot(doc(firebase, \"classesbeingtaught\", classid), (doc) => {\n            checkDatabaseData2();\n        }\n        ), []);\n\n\n\n    useEffect(() => {\n        let classbegin = selectedclass.classbegin;\n        let duration = selectedclass.lengthofclass;\n        let idselect = selectedclass.id;\n        let returned = selectedclass.returned;\n        let limit = selectedclass.whenlimitwillbereached;\n        let student = selectedclass.studentid;\n        let destination = selectedclass.destination;\n        let left = selectedclass.leftclass;\n\n        let first = selectedclass.firstname;\n\n        setStudentfirstname(first);\n        setStudentid(student);\n        setDest(destination);\n        setLeftclassonpass(left);\n\n        setReturnedzero(returned);\n        setduration(duration);\n        setclassbegin(classbegin);\n        setLimitreached(limit);\n\n        setIdselected2(idselect);\n\n    }, [selectedclass]);\n\n    useEffect(() => {\n        if (typeof classid != \"undefined\") {\n            checkDatabaseData2();\n        }\n        setHelpgiven(false);\n    }, []);\n\n    useEffect(() => {\n        setHelpgiven(false);\n    }, [idselected2]);\n\n\n\n    useEffect(() => {\n        console.log(howmany, \"howmanypeople\")\n    }, [howmany]);\n\n\n    async function checkDatabaseData2() {\n        console.log(\"12Did it get this far? \");\n\n        const docRef = doc(firebase, \"classesbeingtaught\", classid);\n\n        const docSnap = await getDoc(docRef);\n\n        if (docSnap.exists()) {\n            setHowmanypeople(docSnap.data().inusebathroompass)\n        } else {\n            // doc.data() will be undefined in this case\n        }\n    };\n\n\n    const endpasses = () => {\n\n        if (sessionending < Date.now()) {\n            const q = query(collection(firebase, \"passes\"), where(\"classsessionid\", \"==\", currentsessionid), where(\"returned\", \"==\", 0));\n\n            const querySnapshot = getDocs(q)\n                .then(function (snapshot) {\n                    let array = []\n                    snapshot.forEach(doc => {\n                        array.push({ id: doc.data().id, expectedreturn: doc.data().whenlimitwillbereached, endofclasssession: doc.data().endofclasssession })\n                    })\n                    if (array.length === 0) {\n                        console.log(\"No passes to change\")\n                    } else {\n                        setIdsofpasses(array); console.log(array, \"This is the pass \");\n                    }\n                })\n        }\n\n    }\n    useEffect(() => {\n        if (typeof idsofpasses != \"undefined\") {\n            const t = Date.now();\n\n            for (let s = 0; s < idsofpasses.length; s++) {\n\n                const r = new Date(idsofpasses[s].endofclasssession)\n\n                updateDoc(doc(firebase, \"passes\", idsofpasses[s].id), {\n\n                    returned: idsofpasses[s].endofclasssession,\n                    timereturned: r.toLocaleTimeString([], { hour12: true }),\n                    returnedbeforetimelimit: idsofpasses[s].expectedreturn > idsofpasses[s].endofclasssession,\n                    differenceoverorunderinminutes: (idsofpasses[s].expectedreturn - idsofpasses[s].endofclasssession) / 60000,\n\n\n                }).catch((error) => {\n                    console.log(error); alert(error);\n                })\n            }\n        }\n    }, [idsofpasses]);\n\n\n    const ifitshtere = () => {\n        if (sessionending < Date.now()) {\n            updateDoc(doc(firebase, \"classsessions\", currentsessionid), {\n                status: \"Completed\"\n            })\n                .catch(error => {\n                    console.log(error); alert(\"2\", error);\n                })\n            endpasses();\n        }\n    }\n\n    useEffect(() => {\n        refresh3();\n    }, []);\n\n\n    async function refresh3() {\n\n        if (typeof currentsessionid != \"undefined\") {\n            const docRef = doc(firebase, \"classsessions\", currentsessionid);\n\n            const docSnap = await getDoc(docRef);\n\n            if (docSnap.exists()) {\n                ifitshtere();\n            } else {\n                // doc.data() will be undefined in this case\n                console.log(\"No such document!\");\n            }\n            console.log(\"THIIIIS was NOW RUN\")\n\n        }\n    }\n\n\n    useEffect(() => {\n        console.log(\"THIS IS THE IDddddddddddddd\");\n        getlocationsqrcodes();\n    }, []);\n\n\n    useEffect(() => {\n        console.log(\"THIS IS THE IDddddddddddddd\");\n        getlocationsqrcodes();\n    }, [test]);\n\n\n\n\n\n    useEffect(() => {\n        userdata.forEach(obj => {\n            console.log(obj.id, obj.differenceoverorunderinminutes, \"THI SI SIS THE USSERDATA\")\n        });\n    }, [userdata]);\n\n\n\n    // useEffect(() => {\n\n    //     if (typeof userdatabefore != \"undefined\") {\n    //         const filteredData = userdatabefore.filter((person) => {\n    //             if (person.timepassinitiated > 0) {\n    //                 return person.timepassinitiated > (Date.now() - 432000000)\n    //             } else {\n    //                 return person.leftclass > (Date.now() - 432000000);\n    //             }\n    //         })\n\n    //         setUserdata(filteredData)\n    //     }\n    // }, [userdatabefore]);\n\n\n    async function getlocationsqrcodes() {\n\n        if (typeof userdatabefore === \"undefined\") {\n\n            // Should be changed back to this as soon as \"timepassinitiated\" is on all pass documnents\n\n            // const q = query(collection(firebase, \"passes\"), where(\"classid\", \"==\", classid), orderBy(\"timepassinitiated\", \"desc\"), limit(20));\n\n            const q = query(collection(firebase, \"passes\"), where('classesinvolved', 'array-contains-any', [classid]), orderBy(\"timepassinitiated\", \"desc\"), limit(20));\n\n\n\n\n\n            // const q = query(collection(firebase, \"passes\"), where(\"classid\", \"==\", classid));\n\n\n            const querySnapshot = await getDocs(q)\n\n\n                .then(function (snapshot) {\n                    let statusarray = []\n                    let array = []\n                    snapshot.forEach(doc => {\n                        array.push(doc.data())\n                        statusarray.push(doc.data().status)\n\n                    })\n                    if (array.length === 0) {\n                        setUserdata([{ classname: \"You haven't Registered\" }]);\n                        setEmpty(true);\n\n                    } else {\n                        // setIdselected2();\n\n                        setEmpty(false);\n                        setUserdata(array);\n                        console.log(\"HEEEEEEEEYYYYY,\", idselected, \"HEEEEEEEEEEEEy\");\n                    }\n\n\n                    if (statusarray.includes(\"Happening Now\")) {\n                        setSessionended(false)\n                    } else {\n                        setSessionended(true)\n                    }\n\n\n                })\n            setShowspinner(false);\n\n        }\n    };\n\n\n\n    useEffect(() => {\n        if (coursename) {\n            navigation.setOptions({\n                headerLeft: () => (\n                    <TouchableOpacity onPress={() => navigation.navigate(\"Mainmenuteacher\", {\n                        idofcurrentclass: idofcurrentclass, currentsessionid: currentsessionid, sessionending: sessionending, endlastclass: endlastclass, userinformation: userinformation, school: school, state: state, town: town, role: role, id: id, bathroompasslimit: bathroompasslimit, ifnegativeplusminus: ifnegativeplusminus, drinkpasslimit: drinkpasslimit, nonbathroompasslimit: nonbathroompasslimit, exclusivephonepassmaxstudents: exclusivephonepassmaxstudents, exclusivephonepasstimelmit: exclusivephonepasstimelmit, lengthofclass: lengthofclass, classiscurrent: classiscurrent, nameofcurrentclass: nameofcurrentclass, starttimeofcurrentclass: starttimeofcurrentclass, classid: classid, coursename: coursename, section: section, location: location, teacherid: teacherid, teacheriscalled: teacheriscalled,\n                        email: email, starttime: starttime, lengthofclassesforacomputer: lengthofclassesforacomputer, inpenalty: inpenalty, stoptimepenalty: stoptimepenalty, starttimepenalty: starttimepenalty, totaltimepenalty: totaltimepenalty, alreadyused: alreadyused, teacher: teacher, Selectedclassdestination: Selectedclassdestination, youcangetpass: youcangetpass, currentlocation: currentlocation, locationdestination: locationdestination, firstname: firstname, lastname: lastname, ledby: ledby, grouptime: grouptime, drinkofwater: drinkofwater, drinkofwater: drinkofwater, exclusivetime: exclusivetime, donewithworkpass: donewithworkpass, bathroomtime: bathroomtime, nonbathroomtime: nonbathroomtime, bathroompassinuse: bathroompassinuse, totalinlineforbathroom: totalinlineforbathroom, lengthofclasses: lengthofclasses, endlastclasssubstitute: endlastclasssubstitute, sessionended: sessionended, thelastid: thelastid, drinkpassduration: drinkpassduration, phonepassduration: phonepassduration, bathroompassduration: bathroompassduration, overunder: overunder, otherpassduration: otherpassduration, maxstudentsphonepass: maxstudentsphonepass, donewithworkphonepass: donewithworkphonepass, consequenceid: consequenceid, maxstudentsbathroom: maxstudentsbathroom,\n                        newoverunder: newoverunder, penaltyminutes: penaltyminutes, adjustments: adjustments, abc: abc, linkedclass: linkedclass\n                    })}>\n\n                        <Text accessibilityLabel=\"Guest\" style={styles.error5}>\n                            Main Menu\n                        </Text>\n                    </TouchableOpacity>\n                ),\n            });\n        } else {\n\n            navigation.setOptions({\n                headerLeft: () => (\n                    <TouchableOpacity onPress={() => navigation.navigate(\"Mainmenuteacher\", {\n                        idofcurrentclass: idofcurrentclass, currentsessionid: currentsessionid, sessionending: sessionending, endlastclass: endlastclass, userinformation: userinformation, school: school, state: state, town: town, role: role, id: id, bathroompasslimit: bathroompasslimit, ifnegativeplusminus: ifnegativeplusminus, nonbathroompasslimit: nonbathroompasslimit, drinkpasslimit: drinkpasslimit, exclusivephonepassmaxstudents: exclusivephonepassmaxstudents, exclusivephonepasstimelmit: exclusivephonepasstimelmit, lengthofclass: lengthofclass, classiscurrent: classiscurrent, nameofcurrentclass: nameofcurrentclass, starttimeofcurrentclass: starttimeofcurrentclass, classid: classid, coursename: coursename, section: section, location: location, teacherid: teacherid, teacheriscalled: teacheriscalled,\n                        email: email, starttime: starttime, lengthofclassesforacomputer: lengthofclassesforacomputer, inpenalty: inpenalty, stoptimepenalty: stoptimepenalty, starttimepenalty: starttimepenalty, totaltimepenalty: totaltimepenalty, alreadyused: alreadyused, teacher: teacher, Selectedclassdestination: Selectedclassdestination, youcangetpass: youcangetpass, currentlocation: currentlocation, locationdestination: locationdestination, firstname: firstname, lastname: lastname, ledby: ledby, grouptime: grouptime, drinkofwater: drinkofwater, exclusivetime: exclusivetime, donewithworkpass: donewithworkpass, bathroomtime: bathroomtime, nonbathroomtime: nonbathroomtime, bathroompassinuse: bathroompassinuse, totalinlineforbathroom: totalinlineforbathroom, lengthofclasses: lengthofclasses, endlastclasssubstitute: endlastclasssubstitute, sessionended: sessionended, thelastid: thelastid, drinkpassduration: drinkpassduration, phonepassduration: phonepassduration, bathroompassduration: bathroompassduration, overunder: overunder, otherpassduration: otherpassduration, maxstudentsphonepass: maxstudentsphonepass, donewithworkphonepass: donewithworkphonepass, consequenceid: consequenceid, maxstudentsbathroom: maxstudentsbathroom,\n                        newoverunder: newoverunder, penaltyminutes: penaltyminutes, adjustments: adjustments, abc: abc, linkedclass: linkedclass\n                    })}>\n\n                        <Text accessibilityLabel=\"Guest\" style={styles.error5}>\n                            Main Menu\n                        </Text>\n                    </TouchableOpacity>\n                ),\n            });\n\n        }\n\n    }, [coursename]);\n\n    const createTwoButtonAlert = () =>\n\n\n        Alert.alert('Please be aware.', 'This will permanently remove this pass from the system.', [\n            {\n                text: 'Cancel',\n                onPress: () => console.log('Cancel Pressed'),\n                style: 'cancel',\n            },\n            { text: 'Delete Pass', onPress: () => deleteToDo() },\n        ]);\n\n    const deleteToDo = async () => {\n\n        const userDoc = doc(firebase, \"passes\",\n            idselected2)\n\n        await deleteDoc(userDoc)\n            .then(async () => {\n                getlocationsqrcodes();\n            })\n    };\n\n    async function ReturnStudnet2() {\n        if (howmany > 0) {\n\n            await updateDoc(doc(firebase, \"classesbeingtaught\", classid), {\n                inusebathroompass: howmany - 1,\n            }).catch((error) => {\n                console.log(error); alert(error);\n            }).then(async () => {\n                console.log(\"comppleted\");\n                setHowmanypeople(howmany - 1);\n            })\n        } else {\n            await updateDoc(doc(firebase, \"classesbeingtaught\", classid), {\n                inusebathroompass: 0,\n            }).catch((error) => {\n                console.log(error); alert(error);\n            }).then(async () => {\n                console.log(\"comppleted\");\n                setHowmanypeople(0);\n            })\n        }\n\n    }\n\n    async function ReturnStudentFromPass() {\n\n        const r = new Date();\n        const t = Date.now();\n\n        const ontime = limitreached > t;\n\n        console.log(\"2 was this run?,\", t, r, \"endofclasssession\", \"newDate\")\n\n        const currentdiff = ((limitreached - t) / 60000);\n\n        if (dest === \"Bathroom\") {\n            await updateDoc(doc(firebase, \"passes\", idselected2), {\n                returned: t,\n                timereturned: r.toLocaleTimeString([], { hour12: true }),\n                returnedbeforetimelimit: ontime,\n                differenceoverorunderinminutes: currentdiff,\n\n            }).catch((error) => {\n                console.log(error); alert(error);\n            }),\n\n\n                await updateDoc(doc(firebase, \"users\", studentid), {\n                    passid: \"\",\n                    status: \"\",\n\n                }).catch((error) => {\n                    console.log(error); alert(error);\n                }),\n\n                await updateDoc(doc(firebase, \"classesbeingtaught\", classid), {\n                    inusebathroompass: howmany - 1,\n                }).catch((error) => {\n                    console.log(error); alert(error);\n\n                }).then(async () => {\n                    console.log(\"comppleted\")\n                })\n        } else {\n\n            await updateDoc(doc(firebase, \"passes\", idselected2), {\n                returned: t,\n                timereturned: r.toLocaleTimeString([], { hour12: true }),\n                returnedbeforetimelimit: ontime,\n                differenceoverorunderinminutes: currentdiff,\n\n            }).catch((error) => {\n                console.log(error); alert(error);\n            }),\n\n\n                await updateDoc(doc(firebase, \"users\", studentid), {\n                    passid: \"\",\n                    status: \"\",\n\n                }).catch((error) => {\n                    console.log(error); alert(error);\n                }).then(async () => {\n                    console.log(\"comppleted\")\n                })\n        }\n        getlocationsqrcodes();\n    }\n\n\n    async function Sendonpass() {\n        await updateDoc(doc(firebase, \"classesbeingtaught\", classid), {\n            removescanneraddbutton: true\n        }).catch((error) => {\n            console.log(error); alert(error);\n\n        }).then(async (check) => {\n            setHelpgiven(true);\n        }).catch((error) => {\n            console.log(error); alert(error);\n        });\n    }\n\n\n\n\n    useEffect(() => {\n        if (typeof userdata != \"undefined\") {\n            setUserdatabefore();\n        }\n    }, [userdata]);\n\n\n    return (\n        <SafeAreaView style={styles.largercontainer}>\n            <View style={styles.container1}>\n                <View><TouchableOpacity><Text style={styles.error}>Passes/Tardies:{'\\n'}{coursename} -- Bathroom ({howmany}-{currentmax2}) </Text></TouchableOpacity></View>\n            </View>\n\n            <View style={styles.container2}>\n\n                <Passes userdata={userdata} id={id} setSelectedclass={setSelectedclass} selectedclass={selectedclass} idselected={idselected2} localpercent={localpercent} test={test} setTest={setTest} />\n\n            </View>\n            <ScrollView>\n                <View style={styles.section3}>\n\n                    <View><ActivityIndicator\n                        size=\"large\"\n                        color=\"#FFF\"\n                        animating={showspinner}\n                        style={{\n                            position: 'absolute',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            left: 0,\n                            right: 0,\n                            top: 0,\n                            bottom: 0,\n                        }} /></View>\n\n\n\n                    {idselected2 && leftclassonpass === 0 && helpgiven === false ? <Text style={styles.paragraph2} onPress={(e) => Sendonpass()} >Give Shortcut: Send On Pass</Text> : idselected2 && returnedzero == 0 && helpgiven === false ? <Text style={styles.paragraph2} onPress={() => Sendonpass()}>Give Shortcut: Return Pass</Text> : idselected2 && returnedzero == 0 && helpgiven === true ? <Text style={styles.paragraph2}>{studentfirstname} has Shortcut option</Text> : <Text style={styles.paragraph2}>    </Text>}\n\n                    {idselected2 ? <Text style={styles.paragraph2} onPress={(e) => createTwoButtonAlert()} >Delete Pass/Tardy </Text> : <Text style={styles.paragraph2}>    </Text>}\n\n                    {idselected2 && returnedzero === 0 && leftclassonpass != 0 ? <Text style={styles.paragraph2} onPress={(e) => ReturnStudentFromPass()}>Return Pass</Text> : <Text style={styles.paragraph2} onPress={(e) => ReturnStudnet2()}>Reset Bathroom Availability</Text>}\n\n                    <Pressable>\n                    <Text style={styles.paragraph2} onPress={() => letthenextstudentgo()}>Increase Total Number of{'\\n'}Students Allowed in Bathroom{'\\n'}</Text>\n                </Pressable>\n                {currentmax2 > 1 ? <Pressable onPress={() => reducemaxbathroom()}>\n                    <Text style={styles.paragraph2}>Decrease Total Number of{'\\n'}Students Allowed in Bathroom{'\\n'}</Text>\n                </Pressable> : null}\n\n                    <Text style={styles.paragraph2}>___________________ {'\\n'}</Text>\n\n                    <Text style={styles.paragraph2} onPress={() => navigation.navigate(\"Mainmenuteacher\", {\n                        idofcurrentclass: idofcurrentclass, currentsessionid: currentsessionid, sessionending: sessionending, endlastclass: endlastclass, userinformation: userinformation, school: school, state: state, town: town, role: role, bathroompasslimit: bathroompasslimit, ifnegativeplusminus: ifnegativeplusminus, nonbathroompasslimit: nonbathroompasslimit, drinkpasslimit: drinkpasslimit, exclusivephonepassmaxstudents: exclusivephonepassmaxstudents, exclusivephonepasstimelmit: exclusivephonepasstimelmit, lengthofclass: lengthofclass, classiscurrent: classiscurrent, nameofcurrentclass: nameofcurrentclass, starttimeofcurrentclass: starttimeofcurrentclass, classid: classid, coursename: coursename, section: section, location: location, teacherid: teacherid, teacheriscalled: teacheriscalled, teacheriscalled: teacheriscalled,\n                        email: email, starttime: starttime, lengthofclassesforacomputer: lengthofclassesforacomputer, inpenalty: inpenalty, stoptimepenalty: stoptimepenalty, starttimepenalty: starttimepenalty, totaltimepenalty: totaltimepenalty, alreadyused: alreadyused, teacher: teacher, Selectedclassdestination: Selectedclassdestination, youcangetpass: youcangetpass, currentlocation: currentlocation, locationdestination: locationdestination, firstname: firstname, lastname: lastname, ledby: ledby, grouptime: grouptime, drinkofwater: drinkofwater, drinkofwater: drinkofwater, exclusivetime: exclusivetime, donewithworkpass: donewithworkpass, bathroomtime: bathroomtime, nonbathroomtime: nonbathroomtime, bathroompassinuse: bathroompassinuse, totalinlineforbathroom: totalinlineforbathroom, lengthofclasses: lengthofclasses, endlastclasssubstitute: endlastclasssubstitute, sessionended: sessionended, thelastid: thelastid, drinkpassduration: drinkpassduration, phonepassduration: phonepassduration, overunder: overunder, bathroompassduration: bathroompassduration, otherpassduration: otherpassduration, maxstudentsphonepass: maxstudentsphonepass, donewithworkphonepass: donewithworkphonepass, consequenceid: consequenceid, maxstudentsbathroom: maxstudentsbathroom,\n                        newoverunder: newoverunder, penaltyminutes: penaltyminutes, adjustments: adjustments, abc: abc, linkedclass: linkedclass\n                    })}  >Return to Main Menu</Text>\n\n\n                </View>\n            </ScrollView>\n        </SafeAreaView>\n    );\n}\n\n\nconst styles = StyleSheet.create({\n\n    container: {\n        backgroundColor: \"#000\",\n        alignItems: \"center\",\n        width: \"100%\",\n\n    },\n    largercontainer: {\n        height: height,\n        backgroundColor: \"#000\",\n\n    },\n    container1: {\n        height: \"16%\",\n        backgroundColor: '#000',\n        width: \"100%\",\n        justifyContent: \"center\",\n\n\n    },\n    error: {\n\n        backgroundColor: '#000',\n        color: \"#FFF\",\n        marginLeft: \"3%\",\n        marginRight: \"3%\",\n        fontSize: 18,\n        fontWeight: 'bold',\n        textAlign: \"center\",\n\n    },\n    container2: {\n        height: \"35%\",\n        backgroundColor: \"#013469\",\n        width: \"100%\",\n\n    },\n    paragraph: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        backgroundColor: '#000000',\n        color: \"#fff\",\n        height: \"100%\",\n        textAlign: \"center\",\n        marginTop: \"10%\",\n    },\n    Newrow: {\n        backgroundColor: '#000000',\n\n        margin: 2,\n        textAlign: \"center\",\n        fontSize: 20,\n        width: \"90%\",\n        borderColor: \"#E43522\",\n        borderWidth: 4,\n        justifyContent: \"center\",\n        color: \"#fff\",\n    },\n    Newrowa: {\n        backgroundColor: '#000000',\n        margin: 4,\n        textAlign: \"center\",\n        fontSize: 20,\n        borderColor: \"#E43522\",\n        borderWidth: 4,\n        justifyContent: \"center\",\n        color: \"#fff\",\n        flex: 1,\n    },\n\n    Newrowb: {\n        backgroundColor: '#000000',\n        margin: 4,\n        textAlign: \"center\",\n        fontSize: 20,\n        borderColor: \"#E43522\",\n        borderWidth: 4,\n        justifyContent: \"center\",\n        color: \"#fff\",\n        flex: .4,\n    },\n\n    paragraph2: {\n\n        fontSize: 18,\n        fontWeight: 'bold',\n        textAlign: \"center\",\n        backgroundColor: '#000000',\n        color: \"#fff\",\n\n        justifyContent: \"center\",\n        marginTop: 30,\n    },\n\n    paragraph4: {\n\n        fontSize: 18,\n        fontWeight: 'bold',\n        textAlign: 'center',\n        backgroundColor: '#000000',\n        color: \"#fff\",\n        justifyContent: \"center\",\n        lineHeight: 30,\n\n    },\n    section3: {\n\n        fontSize: 18,\n        fontWeight: 'bold',\n        textAlign: 'center',\n        backgroundColor: \"#000\",\n        color: \"#fff\",\n        alignContent: \"center\",\n        height: \"49%\",\n\n    },\n\n\n    paragraph6: {\n        color: \"#fff\",\n        fontSize: 17,\n        marginRight: 7\n\n\n    },\n    textContainer: {\n        flexDirection: 'row',\n        height: 50,\n        justifyContent: 'center',\n        marginBottom: 20,\n    },\n    error5: {\n\n        backgroundColor: '#000',\n        color: \"#FFF\",\n        marginLeft: \"3%\",\n        marginRight: \"3%\",\n        fontSize: 17,\n        fontWeight: 'bold',\n        textAlign: \"center\",\n\n    },\n\n});\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM;AAA4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIzD,SAASC,IAAI,EAAEC,QAAQ;AACvB,SAASC,OAAO,EAAEC,kBAAkB,EAAEC,8BAA8B,EAAEC,qBAAqB,QAAQ,gBAAgB;AACnH,SAASC,UAAU,EAAEC,UAAU,EAAEC,MAAM,EAAEC,KAAK,EAAEC,KAAK,EAAEC,OAAO,EAAEC,SAAS,EAAEC,GAAG,EAAEC,MAAM,EAAEC,MAAM,EAAEC,SAAS,EAAEC,UAAU,EAAEC,UAAU,EAAEC,OAAO,EAAEC,KAAK,QAAQ,qBAAqB;AAAC;AAAA;AAG/K,IAAMC,MAAM,GAAGC,UAAU,CAACC,GAAG,CAAC,QAAQ,CAAC,CAACF,MAAM;AAE9C,eAAe,SAASG,MAAM,OAAwB;EAAA,IAArBC,KAAK,QAALA,KAAK;IAAEC,UAAU,QAAVA,UAAU;EAE9C,oBAEID,KAAK,CAACE,MAAM;IAFRC,gBAAgB,iBAAhBA,gBAAgB;IAAEC,gBAAgB,iBAAhBA,gBAAgB;IAAEC,YAAY,iBAAZA,YAAY;IAAEC,eAAe,iBAAfA,eAAe;IAAEC,MAAM,iBAANA,MAAM;IAAEC,KAAK,iBAALA,KAAK;IAAEC,IAAI,iBAAJA,IAAI;IAAEC,IAAI,iBAAJA,IAAI;IAAEC,iBAAiB,iBAAjBA,iBAAiB;IAAEC,mBAAmB,iBAAnBA,mBAAmB;IAAEC,oBAAoB,iBAApBA,oBAAoB;IAAEC,6BAA6B,iBAA7BA,6BAA6B;IAAEC,0BAA0B,iBAA1BA,0BAA0B;IAAEC,aAAa,iBAAbA,aAAa;IAAEC,cAAc,iBAAdA,cAAc;IAAEC,kBAAkB,iBAAlBA,kBAAkB;IAAEC,uBAAuB,iBAAvBA,uBAAuB;IAAEC,OAAO,iBAAPA,OAAO;IAAEC,UAAU,iBAAVA,UAAU;IAAEC,OAAO,iBAAPA,OAAO;IAAEC,QAAQ,iBAARA,QAAQ;IAAEC,SAAS,iBAATA,SAAS;IAAEC,eAAe,iBAAfA,eAAe;IACzWC,KAAK,iBAALA,KAAK;IAAEC,SAAS,iBAATA,SAAS;IAAEC,2BAA2B,iBAA3BA,2BAA2B;IAAEC,SAAS,iBAATA,SAAS;IAAEC,eAAe,iBAAfA,eAAe;IAAEC,gBAAgB,iBAAhBA,gBAAgB;IAAEC,gBAAgB,iBAAhBA,gBAAgB;IAAEC,WAAW,iBAAXA,WAAW;IAAEC,OAAO,iBAAPA,OAAO;IAAEC,wBAAwB,iBAAxBA,wBAAwB;IAAEC,aAAa,iBAAbA,aAAa;IAAEC,eAAe,iBAAfA,eAAe;IAAEC,mBAAmB,iBAAnBA,mBAAmB;IAAEC,SAAS,iBAATA,SAAS;IAAEC,QAAQ,iBAARA,QAAQ;IAAEC,KAAK,iBAALA,KAAK;IAAEC,SAAS,iBAATA,SAAS;IAAEC,YAAY,iBAAZA,YAAY;IAAEC,aAAa,iBAAbA,aAAa;IAAEC,gBAAgB,iBAAhBA,gBAAgB;IAAEC,YAAY,iBAAZA,YAAY;IAAEC,eAAe,iBAAfA,eAAe;IAAEC,iBAAiB,iBAAjBA,iBAAiB;IAAEC,sBAAsB,iBAAtBA,sBAAsB;IAAEC,eAAe,iBAAfA,eAAe;IAAEC,sBAAsB,iBAAtBA,sBAAsB;IAAEC,SAAS,iBAATA,SAAS;IAAEC,iBAAiB,iBAAjBA,iBAAiB;IAAEC,SAAS,iBAATA,SAAS;IAAEC,iBAAiB,iBAAjBA,iBAAiB;IAAEC,oBAAoB,iBAApBA,oBAAoB;IAAEC,iBAAiB,iBAAjBA,iBAAiB;IAAEC,oBAAoB,iBAApBA,oBAAoB;IAAEC,qBAAqB,iBAArBA,qBAAqB;IAAEC,aAAa,iBAAbA,aAAa;IAAEC,EAAE,iBAAFA,EAAE;IAAEC,aAAa,iBAAbA,aAAa;IAAEC,mBAAmB,iBAAnBA,mBAAmB;IAAEC,cAAc,iBAAdA,cAAc;IAAEC,UAAU,iBAAVA,UAAU;IAAEC,cAAc,iBAAdA,cAAc;IAAEC,WAAW,iBAAXA,WAAW;IAAEC,GAAG,iBAAHA,GAAG;IAAEC,cAAc,iBAAdA,cAAc;IAAEC,WAAW,iBAAXA,WAAW;EAEnsBC,OAAO,CAACC,GAAG,CAACvB,sBAAsB,EAAE,aAAa,EAAEwB,OAAO,EAAE,qBAAqB,CAAC;EAElF,gBAAgCrG,QAAQ,CAAC,EAAE,CAAC;IAAA;IAArCsG,QAAQ;IAAEC,WAAW;EAC5B,iBAAkCvG,QAAQ,EAAE;IAAA;IAArCwG,SAAS;IAAEC,YAAY;EAC9B,iBAA0CzG,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA/C0G,aAAa;IAAEC,gBAAgB;EACtC,iBAAsC3G,QAAQ,EAAE;IAAA;IAAzC4G,WAAW;IAAEC,cAAc;EAClC,iBAA0B7G,QAAQ,EAAE;IAAA;IAA7B8G,KAAK;IAAEC,QAAQ;EAEtB,kBAAsC/G,QAAQ,CAAC,IAAI,CAAC;IAAA;IAA7CgH,WAAW;IAAEC,cAAc;EAClC,kBAAkCjH,QAAQ,CAAC,KAAK,CAAC;IAAA;IAA1CkH,SAAS;IAAEC,YAAY;EAC9B,kBAAoCnH,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAzCoH,UAAU;IAAEC,aAAa;EAChC,kBAAgCrH,QAAQ,CAAC,CAAC,CAAC;IAAA;IAApCsH,QAAQ;IAAEC,WAAW;EAC5B,kBAAwCvH,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAhDwH,YAAY;IAAEC,eAAe;EAEpC,kBAAsCzH,QAAQ,EAAE;IAAA;IAAzC0H,WAAW;IAAEC,cAAc;EAElC,kBAAwC3H,QAAQ,EAAE;IAAA;IAA3C4H,YAAY;IAAEC,eAAe;EACpC,kBAAwC7H,QAAQ,EAAE;IAAA;IAA3C8H,YAAY;IAAEC,eAAe;EACpC,kBAAwC/H,QAAQ,EAAE;IAAA;IAA3CgI,YAAY;IAAEC,eAAe;EACpC,kBAAkCjI,QAAQ,EAAE;IAAA;IAArCkI,SAAS;IAAEC,YAAY;EAC9B,kBAAwBnI,QAAQ,EAAE;IAAA;IAA3BoI,IAAI;IAAEC,OAAO;EACpB,kBAAoCrI,QAAQ,EAAE;IAAA;IAAvCqG,OAAO;IAAEiC,gBAAgB;EAChC,kBAA8CtI,QAAQ,EAAE;IAAA;IAAjDuI,eAAe;IAAEC,kBAAkB;EAC1C,kBAA4CxI,QAAQ,EAAE;IAAA;IAA/CyI,cAAc;IAAEC,iBAAiB;EACxC,kBAAwC1I,QAAQ,EAAE;IAAA;IAA3C2I,YAAY;IAAEC,eAAe;EACpC,kBAAwB5I,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA7B6I,IAAI;IAAEC,OAAO;EACpB,kBAAkC9I,QAAQ,CAAC,KAAK,CAAC;IAAA;IAA1C+I,SAAS;IAAEC,YAAY;EAC9B,kBAAgDhJ,QAAQ,EAAE;IAAA;IAAnDiJ,gBAAgB;IAAEC,mBAAmB;EAE5C,kBAAsClJ,QAAQ,EAAE;IAAA;IAAzCmJ,WAAW;IAAEC,cAAc;EAElCnJ,SAAS,CAAC,YAAM;IACZmJ,cAAc,CAACzD,mBAAmB,CAAC;EACvC,CAAC,EAAE,EAAE,CAAC;EAEN,IAAM0D,mBAAmB,GAAG,SAAtBA,mBAAmB,GAAS;IAC9BlD,OAAO,CAACC,GAAG,CAACkD,UAAU,CAAC;IACvBF,cAAc,CAACD,WAAW,GAAG,CAAC,CAAC;EACnC,CAAC;EAED,IAAMI,iBAAiB,GAAG,SAApBA,iBAAiB,GAAS;IAC5B,IAAIJ,WAAW,GAAG,CAAC,EAAE;MACjBC,cAAc,CAACD,WAAW,GAAG,CAAC,CAAC;IACnC;EACJ,CAAC;EAEDlJ,SAAS,CAAC,YAAM;IACZ,IAAIkJ,WAAW,GAAG,CAAC,CAAC,EAAE;MAClBhI,SAAS,CAACH,GAAG,CAACZ,QAAQ,EAAE,oBAAoB,EAAE4C,OAAO,CAAC,EAAE;QACpDwG,uBAAuB,EAAEL;MAC7B,CAAC,CAAC,CAACM,KAAK,CAAC,UAACC,KAAK,EAAK;QAChBvD,OAAO,CAACC,GAAG,CAACsD,KAAK,CAAC;QAAEC,KAAK,CAACD,KAAK,CAAC;MACpC,CAAC,CAAC;IACN,CAAC,MAAM;MACH,IAAI;IACR;EACJ,CAAC,EAAE,CAACP,WAAW,CAAC,CAAC;EAGjBlJ,SAAS,CAAC;IAAA,OACNQ,UAAU,CAACO,GAAG,CAACZ,QAAQ,EAAE,oBAAoB,EAAE4C,OAAO,CAAC,EAAE,UAAChC,GAAG,EAAK;MAC9D4I,kBAAkB,EAAE;IACxB,CAAC,CACA;EAAA,GAAE,EAAE,CAAC;EAIV3J,SAAS,CAAC,YAAM;IACZ,IAAImH,UAAU,GAAGV,aAAa,CAACU,UAAU;IACzC,IAAIE,QAAQ,GAAGZ,aAAa,CAAC9D,aAAa;IAC1C,IAAIiH,QAAQ,GAAGnD,aAAa,CAACjB,EAAE;IAC/B,IAAIqE,QAAQ,GAAGpD,aAAa,CAACoD,QAAQ;IACrC,IAAIvI,KAAK,GAAGmF,aAAa,CAACqD,sBAAsB;IAChD,IAAIC,OAAO,GAAGtD,aAAa,CAACwB,SAAS;IACrC,IAAI+B,WAAW,GAAGvD,aAAa,CAACuD,WAAW;IAC3C,IAAIC,IAAI,GAAGxD,aAAa,CAACyD,SAAS;IAElC,IAAIC,KAAK,GAAG1D,aAAa,CAACvC,SAAS;IAEnC+E,mBAAmB,CAACkB,KAAK,CAAC;IAC1BjC,YAAY,CAAC6B,OAAO,CAAC;IACrB3B,OAAO,CAAC4B,WAAW,CAAC;IACpBzB,kBAAkB,CAAC0B,IAAI,CAAC;IAExBnC,eAAe,CAAC+B,QAAQ,CAAC;IACzBvC,WAAW,CAACD,QAAQ,CAAC;IACrBD,aAAa,CAACD,UAAU,CAAC;IACzBa,eAAe,CAAC1G,KAAK,CAAC;IAEtBsF,cAAc,CAACgD,QAAQ,CAAC;EAE5B,CAAC,EAAE,CAACnD,aAAa,CAAC,CAAC;EAEnBzG,SAAS,CAAC,YAAM;IACZ,IAAI,OAAO+C,OAAO,IAAI,WAAW,EAAE;MAC/B4G,kBAAkB,EAAE;IACxB;IACAZ,YAAY,CAAC,KAAK,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN/I,SAAS,CAAC,YAAM;IACZ+I,YAAY,CAAC,KAAK,CAAC;EACvB,CAAC,EAAE,CAACpC,WAAW,CAAC,CAAC;EAIjB3G,SAAS,CAAC,YAAM;IACZkG,OAAO,CAACC,GAAG,CAACC,OAAO,EAAE,eAAe,CAAC;EACzC,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAAC,SAGCuD,kBAAkB;IAAA;EAAA;EAAA;IAAA,uCAAjC,aAAoC;MAChCzD,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;MAEtC,IAAMiE,MAAM,GAAGrJ,GAAG,CAACZ,QAAQ,EAAE,oBAAoB,EAAE4C,OAAO,CAAC;MAE3D,IAAMsH,OAAO,SAASpJ,MAAM,CAACmJ,MAAM,CAAC;MAEpC,IAAIC,OAAO,CAACC,MAAM,EAAE,EAAE;QAClBjC,gBAAgB,CAACgC,OAAO,CAACE,IAAI,EAAE,CAACC,iBAAiB,CAAC;MACtD,CAAC,MAAM;MAEP;IACJ,CAAC;IAAA;EAAA;EAAA;EAGD,IAAMC,SAAS,GAAG,SAAZA,SAAS,GAAS;IAEpB,IAAIhF,aAAa,GAAGiF,IAAI,CAACC,GAAG,EAAE,EAAE;MAC5B,IAAMC,CAAC,GAAGjK,KAAK,CAACF,UAAU,CAACN,QAAQ,EAAE,QAAQ,CAAC,EAAES,KAAK,CAAC,gBAAgB,EAAE,IAAI,EAAEmB,gBAAgB,CAAC,EAAEnB,KAAK,CAAC,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;MAE5H,IAAMiK,aAAa,GAAGhK,OAAO,CAAC+J,CAAC,CAAC,CAC3BE,IAAI,CAAC,UAAUC,QAAQ,EAAE;QACtB,IAAIC,KAAK,GAAG,EAAE;QACdD,QAAQ,CAACE,OAAO,CAAC,UAAAlK,GAAG,EAAI;UACpBiK,KAAK,CAACE,IAAI,CAAC;YAAE1F,EAAE,EAAEzE,GAAG,CAACwJ,IAAI,EAAE,CAAC/E,EAAE;YAAE2F,cAAc,EAAEpK,GAAG,CAACwJ,IAAI,EAAE,CAACT,sBAAsB;YAAEsB,iBAAiB,EAAErK,GAAG,CAACwJ,IAAI,EAAE,CAACa;UAAkB,CAAC,CAAC;QACzI,CAAC,CAAC;QACF,IAAIJ,KAAK,CAACK,MAAM,KAAK,CAAC,EAAE;UACpBnF,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;QACtC,CAAC,MAAM;UACHuB,cAAc,CAACsD,KAAK,CAAC;UAAE9E,OAAO,CAACC,GAAG,CAAC6E,KAAK,EAAE,mBAAmB,CAAC;QAClE;MACJ,CAAC,CAAC;IACV;EAEJ,CAAC;EACDhL,SAAS,CAAC,YAAM;IACZ,IAAI,OAAOyH,WAAW,IAAI,WAAW,EAAE;MACnC,IAAM6D,CAAC,GAAGZ,IAAI,CAACC,GAAG,EAAE;MAEpB,KAAK,IAAIY,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG9D,WAAW,CAAC4D,MAAM,EAAEE,CAAC,EAAE,EAAE;QAEzC,IAAMC,CAAC,GAAG,IAAId,IAAI,CAACjD,WAAW,CAAC8D,CAAC,CAAC,CAACH,iBAAiB,CAAC;QAEpDlK,SAAS,CAACH,GAAG,CAACZ,QAAQ,EAAE,QAAQ,EAAEsH,WAAW,CAAC8D,CAAC,CAAC,CAAC/F,EAAE,CAAC,EAAE;UAElDqE,QAAQ,EAAEpC,WAAW,CAAC8D,CAAC,CAAC,CAACH,iBAAiB;UAC1CK,YAAY,EAAED,CAAC,CAACE,kBAAkB,CAAC,EAAE,EAAE;YAAEC,MAAM,EAAE;UAAK,CAAC,CAAC;UACxDC,uBAAuB,EAAEnE,WAAW,CAAC8D,CAAC,CAAC,CAACJ,cAAc,GAAG1D,WAAW,CAAC8D,CAAC,CAAC,CAACH,iBAAiB;UACzFS,8BAA8B,EAAE,CAACpE,WAAW,CAAC8D,CAAC,CAAC,CAACJ,cAAc,GAAG1D,WAAW,CAAC8D,CAAC,CAAC,CAACH,iBAAiB,IAAI;QAGzG,CAAC,CAAC,CAAC5B,KAAK,CAAC,UAACC,KAAK,EAAK;UAChBvD,OAAO,CAACC,GAAG,CAACsD,KAAK,CAAC;UAAEC,KAAK,CAACD,KAAK,CAAC;QACpC,CAAC,CAAC;MACN;IACJ;EACJ,CAAC,EAAE,CAAChC,WAAW,CAAC,CAAC;EAGjB,IAAMqE,UAAU,GAAG,SAAbA,UAAU,GAAS;IACrB,IAAIrG,aAAa,GAAGiF,IAAI,CAACC,GAAG,EAAE,EAAE;MAC5BzJ,SAAS,CAACH,GAAG,CAACZ,QAAQ,EAAE,eAAe,EAAE4B,gBAAgB,CAAC,EAAE;QACxDgK,MAAM,EAAE;MACZ,CAAC,CAAC,CACGvC,KAAK,CAAC,UAAAC,KAAK,EAAI;QACZvD,OAAO,CAACC,GAAG,CAACsD,KAAK,CAAC;QAAEC,KAAK,CAAC,GAAG,EAAED,KAAK,CAAC;MACzC,CAAC,CAAC;MACNgB,SAAS,EAAE;IACf;EACJ,CAAC;EAEDzK,SAAS,CAAC,YAAM;IACZgM,QAAQ,EAAE;EACd,CAAC,EAAE,EAAE,CAAC;EAAC,SAGQA,QAAQ;IAAA;EAAA;EAAA;IAAA,6BAAvB,aAA0B;MAEtB,IAAI,OAAOjK,gBAAgB,IAAI,WAAW,EAAE;QACxC,IAAMqI,MAAM,GAAGrJ,GAAG,CAACZ,QAAQ,EAAE,eAAe,EAAE4B,gBAAgB,CAAC;QAE/D,IAAMsI,OAAO,SAASpJ,MAAM,CAACmJ,MAAM,CAAC;QAEpC,IAAIC,OAAO,CAACC,MAAM,EAAE,EAAE;UAClBwB,UAAU,EAAE;QAChB,CAAC,MAAM;UAEH5F,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;QACpC;QACAD,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MAEtC;IACJ,CAAC;IAAA;EAAA;EAGDnG,SAAS,CAAC,YAAM;IACZkG,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC1C8F,mBAAmB,EAAE;EACzB,CAAC,EAAE,EAAE,CAAC;EAGNjM,SAAS,CAAC,YAAM;IACZkG,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC1C8F,mBAAmB,EAAE;EACzB,CAAC,EAAE,CAACrD,IAAI,CAAC,CAAC;EAMV5I,SAAS,CAAC,YAAM;IACZqG,QAAQ,CAAC4E,OAAO,CAAC,UAAAiB,GAAG,EAAI;MACpBhG,OAAO,CAACC,GAAG,CAAC+F,GAAG,CAAC1G,EAAE,EAAE0G,GAAG,CAACL,8BAA8B,EAAE,0BAA0B,CAAC;IACvF,CAAC,CAAC;EACN,CAAC,EAAE,CAACxF,QAAQ,CAAC,CAAC;;EAAC,SAoBA4F,mBAAmB;IAAA;EAAA;EAAA;IAAA,yCAAlC,aAAqC;MAEjC,IAAI,OAAOzD,cAAc,KAAK,WAAW,EAAE;;QAMvC,IAAMoC,CAAC,GAAGjK,KAAK,CAACF,UAAU,CAACN,QAAQ,EAAE,QAAQ,CAAC,EAAES,KAAK,CAAC,iBAAiB,EAAE,oBAAoB,EAAE,CAACmC,OAAO,CAAC,CAAC,EAAE1B,OAAO,CAAC,mBAAmB,EAAE,MAAM,CAAC,EAAEC,KAAK,CAAC,EAAE,CAAC,CAAC;;QAS3J,IAAMuJ,aAAa,SAAShK,OAAO,CAAC+J,CAAC,CAAC,CAGjCE,IAAI,CAAC,UAAUC,QAAQ,EAAE;UACtB,IAAIoB,WAAW,GAAG,EAAE;UACpB,IAAInB,KAAK,GAAG,EAAE;UACdD,QAAQ,CAACE,OAAO,CAAC,UAAAlK,GAAG,EAAI;YACpBiK,KAAK,CAACE,IAAI,CAACnK,GAAG,CAACwJ,IAAI,EAAE,CAAC;YACtB4B,WAAW,CAACjB,IAAI,CAACnK,GAAG,CAACwJ,IAAI,EAAE,CAACwB,MAAM,CAAC;UAEvC,CAAC,CAAC;UACF,IAAIf,KAAK,CAACK,MAAM,KAAK,CAAC,EAAE;YACpB/E,WAAW,CAAC,CAAC;cAAE8F,SAAS,EAAE;YAAyB,CAAC,CAAC,CAAC;YACtDtF,QAAQ,CAAC,IAAI,CAAC;UAElB,CAAC,MAAM;;YAGHA,QAAQ,CAAC,KAAK,CAAC;YACfR,WAAW,CAAC0E,KAAK,CAAC;YAClB9E,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEP,UAAU,EAAE,gBAAgB,CAAC;UAChE;UAGA,IAAIuG,WAAW,CAACE,QAAQ,CAAC,eAAe,CAAC,EAAE;YACvC7E,eAAe,CAAC,KAAK,CAAC;UAC1B,CAAC,MAAM;YACHA,eAAe,CAAC,IAAI,CAAC;UACzB;QAGJ,CAAC,CAAC;QACNR,cAAc,CAAC,KAAK,CAAC;MAEzB;IACJ,CAAC;IAAA;EAAA;EAAA;EAIDhH,SAAS,CAAC,YAAM;IACZ,IAAIgD,UAAU,EAAE;MACZpB,UAAU,CAAC0K,UAAU,CAAC;QAClBC,UAAU,EAAE;UAAA,OACR,KAAC,gBAAgB;YAAC,OAAO,EAAE;cAAA,OAAM3K,UAAU,CAAC4K,QAAQ,CAAC,iBAAiB,EAAE;gBACpE1K,gBAAgB,EAAEA,gBAAgB;gBAAEC,gBAAgB,EAAEA,gBAAgB;gBAAE0D,aAAa,EAAEA,aAAa;gBAAEzD,YAAY,EAAEA,YAAY;gBAAEC,eAAe,EAAEA,eAAe;gBAAEC,MAAM,EAAEA,MAAM;gBAAEC,KAAK,EAAEA,KAAK;gBAAEC,IAAI,EAAEA,IAAI;gBAAEC,IAAI,EAAEA,IAAI;gBAAEmD,EAAE,EAAEA,EAAE;gBAAElD,iBAAiB,EAAEA,iBAAiB;gBAAEC,mBAAmB,EAAEA,mBAAmB;gBAAEyD,cAAc,EAAEA,cAAc;gBAAExD,oBAAoB,EAAEA,oBAAoB;gBAAEC,6BAA6B,EAAEA,6BAA6B;gBAAEC,0BAA0B,EAAEA,0BAA0B;gBAAEC,aAAa,EAAEA,aAAa;gBAAEC,cAAc,EAAEA,cAAc;gBAAEC,kBAAkB,EAAEA,kBAAkB;gBAAEC,uBAAuB,EAAEA,uBAAuB;gBAAEC,OAAO,EAAEA,OAAO;gBAAEC,UAAU,EAAEA,UAAU;gBAAEC,OAAO,EAAEA,OAAO;gBAAEC,QAAQ,EAAEA,QAAQ;gBAAEC,SAAS,EAAEA,SAAS;gBAAEC,eAAe,EAAEA,eAAe;gBAClxBC,KAAK,EAAEA,KAAK;gBAAEC,SAAS,EAAEA,SAAS;gBAAEC,2BAA2B,EAAEA,2BAA2B;gBAAEC,SAAS,EAAEA,SAAS;gBAAEC,eAAe,EAAEA,eAAe;gBAAEC,gBAAgB,EAAEA,gBAAgB;gBAAEC,gBAAgB,EAAEA,gBAAgB;gBAAEC,WAAW,EAAEA,WAAW;gBAAEC,OAAO,EAAEA,OAAO;gBAAEC,wBAAwB,EAAEA,wBAAwB;gBAAEC,aAAa,EAAEA,aAAa;gBAAEC,eAAe,EAAEA,eAAe;gBAAEC,mBAAmB,EAAEA,mBAAmB;gBAAEC,SAAS,EAAEA,SAAS;gBAAEC,QAAQ,EAAEA,QAAQ;gBAAEC,KAAK,EAAEA,KAAK;gBAAEC,SAAS,EAAEA,SAAS;gBAAEC,YAAY,EAAEA,YAAY;gBAAEA,YAAY,EAAEA,YAAY;gBAAEC,aAAa,EAAEA,aAAa;gBAAEC,gBAAgB,EAAEA,gBAAgB;gBAAEC,YAAY,EAAEA,YAAY;gBAAEC,eAAe,EAAEA,eAAe;gBAAEC,iBAAiB,EAAEA,iBAAiB;gBAAEC,sBAAsB,EAAEA,sBAAsB;gBAAEC,eAAe,EAAEA,eAAe;gBAAEC,sBAAsB,EAAEA,sBAAsB;gBAAEyC,YAAY,EAAEA,YAAY;gBAAExC,SAAS,EAAEA,SAAS;gBAAEG,iBAAiB,EAAEA,iBAAiB;gBAAEF,iBAAiB,EAAEA,iBAAiB;gBAAEG,oBAAoB,EAAEA,oBAAoB;gBAAEF,SAAS,EAAEA,SAAS;gBAAEG,iBAAiB,EAAEA,iBAAiB;gBAAEC,oBAAoB,EAAEA,oBAAoB;gBAAEC,qBAAqB,EAAEA,qBAAqB;gBAAEC,aAAa,EAAEA,aAAa;gBAAEG,mBAAmB,EAAEA,mBAAmB;gBAC5tCiC,YAAY,EAAEA,YAAY;gBAAE9B,cAAc,EAAEA,cAAc;gBAAEC,WAAW,EAAEA,WAAW;gBAAEC,GAAG,EAAEA,GAAG;gBAAEE,WAAW,EAAEA;cACjH,CAAC,CAAC;YAAA,CAAC;YAAA,UAEC,KAAC,IAAI;cAAC,kBAAkB,EAAC,OAAO;cAAC,KAAK,EAAEwG,MAAM,CAACC,MAAO;cAAA;YAAA;UAE/C,EACQ;QAAA;MAE3B,CAAC,CAAC;IACN,CAAC,MAAM;MAEH9K,UAAU,CAAC0K,UAAU,CAAC;QAClBC,UAAU,EAAE;UAAA,OACR,KAAC,gBAAgB;YAAC,OAAO,EAAE;cAAA,OAAM3K,UAAU,CAAC4K,QAAQ,CAAC,iBAAiB,EAAE;gBACpE1K,gBAAgB,EAAEA,gBAAgB;gBAAEC,gBAAgB,EAAEA,gBAAgB;gBAAE0D,aAAa,EAAEA,aAAa;gBAAEzD,YAAY,EAAEA,YAAY;gBAAEC,eAAe,EAAEA,eAAe;gBAAEC,MAAM,EAAEA,MAAM;gBAAEC,KAAK,EAAEA,KAAK;gBAAEC,IAAI,EAAEA,IAAI;gBAAEC,IAAI,EAAEA,IAAI;gBAAEmD,EAAE,EAAEA,EAAE;gBAAElD,iBAAiB,EAAEA,iBAAiB;gBAAEC,mBAAmB,EAAEA,mBAAmB;gBAAEC,oBAAoB,EAAEA,oBAAoB;gBAAEwD,cAAc,EAAEA,cAAc;gBAAEvD,6BAA6B,EAAEA,6BAA6B;gBAAEC,0BAA0B,EAAEA,0BAA0B;gBAAEC,aAAa,EAAEA,aAAa;gBAAEC,cAAc,EAAEA,cAAc;gBAAEC,kBAAkB,EAAEA,kBAAkB;gBAAEC,uBAAuB,EAAEA,uBAAuB;gBAAEC,OAAO,EAAEA,OAAO;gBAAEC,UAAU,EAAEA,UAAU;gBAAEC,OAAO,EAAEA,OAAO;gBAAEC,QAAQ,EAAEA,QAAQ;gBAAEC,SAAS,EAAEA,SAAS;gBAAEC,eAAe,EAAEA,eAAe;gBAClxBC,KAAK,EAAEA,KAAK;gBAAEC,SAAS,EAAEA,SAAS;gBAAEC,2BAA2B,EAAEA,2BAA2B;gBAAEC,SAAS,EAAEA,SAAS;gBAAEC,eAAe,EAAEA,eAAe;gBAAEC,gBAAgB,EAAEA,gBAAgB;gBAAEC,gBAAgB,EAAEA,gBAAgB;gBAAEC,WAAW,EAAEA,WAAW;gBAAEC,OAAO,EAAEA,OAAO;gBAAEC,wBAAwB,EAAEA,wBAAwB;gBAAEC,aAAa,EAAEA,aAAa;gBAAEC,eAAe,EAAEA,eAAe;gBAAEC,mBAAmB,EAAEA,mBAAmB;gBAAEC,SAAS,EAAEA,SAAS;gBAAEC,QAAQ,EAAEA,QAAQ;gBAAEC,KAAK,EAAEA,KAAK;gBAAEC,SAAS,EAAEA,SAAS;gBAAEC,YAAY,EAAEA,YAAY;gBAAEC,aAAa,EAAEA,aAAa;gBAAEC,gBAAgB,EAAEA,gBAAgB;gBAAEC,YAAY,EAAEA,YAAY;gBAAEC,eAAe,EAAEA,eAAe;gBAAEC,iBAAiB,EAAEA,iBAAiB;gBAAEC,sBAAsB,EAAEA,sBAAsB;gBAAEC,eAAe,EAAEA,eAAe;gBAAEC,sBAAsB,EAAEA,sBAAsB;gBAAEyC,YAAY,EAAEA,YAAY;gBAAExC,SAAS,EAAEA,SAAS;gBAAEG,iBAAiB,EAAEA,iBAAiB;gBAAEF,iBAAiB,EAAEA,iBAAiB;gBAAEG,oBAAoB,EAAEA,oBAAoB;gBAAEF,SAAS,EAAEA,SAAS;gBAAEG,iBAAiB,EAAEA,iBAAiB;gBAAEC,oBAAoB,EAAEA,oBAAoB;gBAAEC,qBAAqB,EAAEA,qBAAqB;gBAAEC,aAAa,EAAEA,aAAa;gBAAEG,mBAAmB,EAAEA,mBAAmB;gBAChsCiC,YAAY,EAAEA,YAAY;gBAAE9B,cAAc,EAAEA,cAAc;gBAAEC,WAAW,EAAEA,WAAW;gBAAEC,GAAG,EAAEA,GAAG;gBAAEE,WAAW,EAAEA;cACjH,CAAC,CAAC;YAAA,CAAC;YAAA,UAEC,KAAC,IAAI;cAAC,kBAAkB,EAAC,OAAO;cAAC,KAAK,EAAEwG,MAAM,CAACC,MAAO;cAAA;YAAA;UAE/C,EACQ;QAAA;MAE3B,CAAC,CAAC;IAEN;EAEJ,CAAC,EAAE,CAAC1J,UAAU,CAAC,CAAC;EAEhB,IAAM2J,oBAAoB,GAAG,SAAvBA,oBAAoB;IAAA,OAGtBC,KAAK,CAAClD,KAAK,CAAC,kBAAkB,EAAE,yDAAyD,EAAE,CACvF;MACImD,IAAI,EAAE,QAAQ;MACdC,OAAO,EAAE;QAAA,OAAM5G,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;MAAA;MAC5C4G,KAAK,EAAE;IACX,CAAC,EACD;MAAEF,IAAI,EAAE,aAAa;MAAEC,OAAO,EAAE;QAAA,OAAME,UAAU,EAAE;MAAA;IAAC,CAAC,CACvD,CAAC;EAAA;EAEN,IAAMA,UAAU;IAAA,8BAAG,aAAY;MAE3B,IAAMC,OAAO,GAAGlM,GAAG,CAACZ,QAAQ,EAAE,QAAQ,EAClCwG,WAAW,CAAC;MAEhB,MAAM7F,SAAS,CAACmM,OAAO,CAAC,CACnBnC,IAAI,mBAAC,aAAY;QACdmB,mBAAmB,EAAE;MACzB,CAAC,EAAC;IACV,CAAC;IAAA,gBATKe,UAAU;MAAA;IAAA;EAAA,GASf;EAAC,SAEaE,cAAc;IAAA;EAAA;EAAA;IAAA,mCAA7B,aAAgC;MAC5B,IAAI9G,OAAO,GAAG,CAAC,EAAE;QAEb,MAAMlF,SAAS,CAACH,GAAG,CAACZ,QAAQ,EAAE,oBAAoB,EAAE4C,OAAO,CAAC,EAAE;UAC1DyH,iBAAiB,EAAEpE,OAAO,GAAG;QACjC,CAAC,CAAC,CAACoD,KAAK,CAAC,UAACC,KAAK,EAAK;UAChBvD,OAAO,CAACC,GAAG,CAACsD,KAAK,CAAC;UAAEC,KAAK,CAACD,KAAK,CAAC;QACpC,CAAC,CAAC,CAACqB,IAAI,mBAAC,aAAY;UAChB5E,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;UACzBkC,gBAAgB,CAACjC,OAAO,GAAG,CAAC,CAAC;QACjC,CAAC,EAAC;MACN,CAAC,MAAM;QACH,MAAMlF,SAAS,CAACH,GAAG,CAACZ,QAAQ,EAAE,oBAAoB,EAAE4C,OAAO,CAAC,EAAE;UAC1DyH,iBAAiB,EAAE;QACvB,CAAC,CAAC,CAAChB,KAAK,CAAC,UAACC,KAAK,EAAK;UAChBvD,OAAO,CAACC,GAAG,CAACsD,KAAK,CAAC;UAAEC,KAAK,CAACD,KAAK,CAAC;QACpC,CAAC,CAAC,CAACqB,IAAI,mBAAC,aAAY;UAChB5E,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;UACzBkC,gBAAgB,CAAC,CAAC,CAAC;QACvB,CAAC,EAAC;MACN;IAEJ,CAAC;IAAA;EAAA;EAAA,SAEc8E,qBAAqB;IAAA;EAAA;EAAA;IAAA,2CAApC,aAAuC;MAEnC,IAAM3B,CAAC,GAAG,IAAId,IAAI,EAAE;MACpB,IAAMY,CAAC,GAAGZ,IAAI,CAACC,GAAG,EAAE;MAEpB,IAAMyC,MAAM,GAAGrF,YAAY,GAAGuD,CAAC;MAE/BpF,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEmF,CAAC,EAAEE,CAAC,EAAE,mBAAmB,EAAE,SAAS,CAAC;MAErE,IAAM6B,WAAW,GAAI,CAACtF,YAAY,GAAGuD,CAAC,IAAI,KAAM;MAEhD,IAAInD,IAAI,KAAK,UAAU,EAAE;QACrB,MAAMjH,SAAS,CAACH,GAAG,CAACZ,QAAQ,EAAE,QAAQ,EAAEwG,WAAW,CAAC,EAAE;UAClDkD,QAAQ,EAAEyB,CAAC;UACXG,YAAY,EAAED,CAAC,CAACE,kBAAkB,CAAC,EAAE,EAAE;YAAEC,MAAM,EAAE;UAAK,CAAC,CAAC;UACxDC,uBAAuB,EAAEwB,MAAM;UAC/BvB,8BAA8B,EAAEwB;QAEpC,CAAC,CAAC,CAAC7D,KAAK,CAAC,UAACC,KAAK,EAAK;UAChBvD,OAAO,CAACC,GAAG,CAACsD,KAAK,CAAC;UAAEC,KAAK,CAACD,KAAK,CAAC;QACpC,CAAC,CAAC,QAGQvI,SAAS,CAACH,GAAG,CAACZ,QAAQ,EAAE,OAAO,EAAE8H,SAAS,CAAC,EAAE;UAC/CqF,MAAM,EAAE,EAAE;UACVvB,MAAM,EAAE;QAEZ,CAAC,CAAC,CAACvC,KAAK,CAAC,UAACC,KAAK,EAAK;UAChBvD,OAAO,CAACC,GAAG,CAACsD,KAAK,CAAC;UAAEC,KAAK,CAACD,KAAK,CAAC;QACpC,CAAC,CAAC,QAEIvI,SAAS,CAACH,GAAG,CAACZ,QAAQ,EAAE,oBAAoB,EAAE4C,OAAO,CAAC,EAAE;UAC1DyH,iBAAiB,EAAEpE,OAAO,GAAG;QACjC,CAAC,CAAC,CAACoD,KAAK,CAAC,UAACC,KAAK,EAAK;UAChBvD,OAAO,CAACC,GAAG,CAACsD,KAAK,CAAC;UAAEC,KAAK,CAACD,KAAK,CAAC;QAEpC,CAAC,CAAC,CAACqB,IAAI,mBAAC,aAAY;UAChB5E,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;QAC7B,CAAC,EAAC;MACV,CAAC,MAAM;QAEH,MAAMjF,SAAS,CAACH,GAAG,CAACZ,QAAQ,EAAE,QAAQ,EAAEwG,WAAW,CAAC,EAAE;UAClDkD,QAAQ,EAAEyB,CAAC;UACXG,YAAY,EAAED,CAAC,CAACE,kBAAkB,CAAC,EAAE,EAAE;YAAEC,MAAM,EAAE;UAAK,CAAC,CAAC;UACxDC,uBAAuB,EAAEwB,MAAM;UAC/BvB,8BAA8B,EAAEwB;QAEpC,CAAC,CAAC,CAAC7D,KAAK,CAAC,UAACC,KAAK,EAAK;UAChBvD,OAAO,CAACC,GAAG,CAACsD,KAAK,CAAC;UAAEC,KAAK,CAACD,KAAK,CAAC;QACpC,CAAC,CAAC,QAGQvI,SAAS,CAACH,GAAG,CAACZ,QAAQ,EAAE,OAAO,EAAE8H,SAAS,CAAC,EAAE;UAC/CqF,MAAM,EAAE,EAAE;UACVvB,MAAM,EAAE;QAEZ,CAAC,CAAC,CAACvC,KAAK,CAAC,UAACC,KAAK,EAAK;UAChBvD,OAAO,CAACC,GAAG,CAACsD,KAAK,CAAC;UAAEC,KAAK,CAACD,KAAK,CAAC;QACpC,CAAC,CAAC,CAACqB,IAAI,mBAAC,aAAY;UAChB5E,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;QAC7B,CAAC,EAAC;MACV;MACA8F,mBAAmB,EAAE;IACzB,CAAC;IAAA;EAAA;EAAA,SAGcsB,UAAU;IAAA;EAAA;EAAA;IAAA,gCAAzB,aAA4B;MACxB,MAAMrM,SAAS,CAACH,GAAG,CAACZ,QAAQ,EAAE,oBAAoB,EAAE4C,OAAO,CAAC,EAAE;QAC1DyK,sBAAsB,EAAE;MAC5B,CAAC,CAAC,CAAChE,KAAK,CAAC,UAACC,KAAK,EAAK;QAChBvD,OAAO,CAACC,GAAG,CAACsD,KAAK,CAAC;QAAEC,KAAK,CAACD,KAAK,CAAC;MAEpC,CAAC,CAAC,CAACqB,IAAI;QAAA,8BAAC,WAAO2C,KAAK,EAAK;UACrB1E,YAAY,CAAC,IAAI,CAAC;QACtB,CAAC;QAAA;UAAA;QAAA;MAAA,IAAC,CAACS,KAAK,CAAC,UAACC,KAAK,EAAK;QAChBvD,OAAO,CAACC,GAAG,CAACsD,KAAK,CAAC;QAAEC,KAAK,CAACD,KAAK,CAAC;MACpC,CAAC,CAAC;IACN,CAAC;IAAA;EAAA;EAKDzJ,SAAS,CAAC,YAAM;IACZ,IAAI,OAAOqG,QAAQ,IAAI,WAAW,EAAE;MAChCoC,iBAAiB,EAAE;IACvB;EACJ,CAAC,EAAE,CAACpC,QAAQ,CAAC,CAAC;EAGd,OACI,MAAC,YAAY;IAAC,KAAK,EAAEoG,MAAM,CAACiB,eAAgB;IAAA,WACxC,KAAC,IAAI;MAAC,KAAK,EAAEjB,MAAM,CAACkB,UAAW;MAAA,UAC3B,KAAC,IAAI;QAAA,UAAC,KAAC,gBAAgB;UAAA,UAAC,MAAC,IAAI;YAAC,KAAK,EAAElB,MAAM,CAAChD,KAAM;YAAA,8BAAiB,IAAI,EAAEzG,UAAU,oBAAgBoD,OAAO,OAAG8C,WAAW;UAAA;QAAU;MAAmB;IAAO,EACzJ,EAEP,KAAC,IAAI;MAAC,KAAK,EAAEuD,MAAM,CAACmB,UAAW;MAAA,UAE3B,KAAC,MAAM;QAAC,QAAQ,EAAEvH,QAAS;QAAC,EAAE,EAAEb,EAAG;QAAC,gBAAgB,EAAEkB,gBAAiB;QAAC,aAAa,EAAED,aAAc;QAAC,UAAU,EAAEE,WAAY;QAAC,YAAY,EAAE+B,YAAa;QAAC,IAAI,EAAEE,IAAK;QAAC,OAAO,EAAEC;MAAQ;IAAG,EAExL,EACP,KAAC,UAAU;MAAA,UACP,MAAC,IAAI;QAAC,KAAK,EAAE4D,MAAM,CAACoB,QAAS;QAAA,WAEzB,KAAC,IAAI;UAAA,UAAC,KAAC,iBAAiB;YACpB,IAAI,EAAC,OAAO;YACZ,KAAK,EAAC,MAAM;YACZ,SAAS,EAAE9G,WAAY;YACvB,KAAK,EAAE;cACH+G,QAAQ,EAAE,UAAU;cACpBC,UAAU,EAAE,QAAQ;cACpBC,cAAc,EAAE,QAAQ;cACxB/D,IAAI,EAAE,CAAC;cACPgE,KAAK,EAAE,CAAC;cACRC,GAAG,EAAE,CAAC;cACNC,MAAM,EAAE;YACZ;UAAE;QAAG,EAAO,EAIfxH,WAAW,IAAI2B,eAAe,KAAK,CAAC,IAAIQ,SAAS,KAAK,KAAK,GAAG,KAAC,IAAI;UAAC,KAAK,EAAE2D,MAAM,CAAC2B,UAAW;UAAC,OAAO,EAAE,iBAACC,CAAC;YAAA,OAAKd,UAAU,EAAE;UAAA,CAAC;UAAA;QAAA,EAAoC,GAAG5G,WAAW,IAAIkB,YAAY,IAAI,CAAC,IAAIiB,SAAS,KAAK,KAAK,GAAG,KAAC,IAAI;UAAC,KAAK,EAAE2D,MAAM,CAAC2B,UAAW;UAAC,OAAO,EAAE;YAAA,OAAMb,UAAU,EAAE;UAAA,CAAC;UAAA;QAAA,EAAkC,GAAG5G,WAAW,IAAIkB,YAAY,IAAI,CAAC,IAAIiB,SAAS,KAAK,IAAI,GAAG,MAAC,IAAI;UAAC,KAAK,EAAE2D,MAAM,CAAC2B,UAAW;UAAA,WAAEpF,gBAAgB;QAAA,EAA4B,GAAG,KAAC,IAAI;UAAC,KAAK,EAAEyD,MAAM,CAAC2B,UAAW;UAAA;QAAA,EAAY,EAEjfzH,WAAW,GAAG,KAAC,IAAI;UAAC,KAAK,EAAE8F,MAAM,CAAC2B,UAAW;UAAC,OAAO,EAAE,iBAACC,CAAC;YAAA,OAAK1B,oBAAoB,EAAE;UAAA,CAAC;UAAA;QAAA,EAA2B,GAAG,KAAC,IAAI;UAAC,KAAK,EAAEF,MAAM,CAAC2B,UAAW;UAAA;QAAA,EAAY,EAE9JzH,WAAW,IAAIkB,YAAY,KAAK,CAAC,IAAIS,eAAe,IAAI,CAAC,GAAG,KAAC,IAAI;UAAC,KAAK,EAAEmE,MAAM,CAAC2B,UAAW;UAAC,OAAO,EAAE,iBAACC,CAAC;YAAA,OAAKlB,qBAAqB,EAAE;UAAA,CAAC;UAAA;QAAA,EAAmB,GAAG,KAAC,IAAI;UAAC,KAAK,EAAEV,MAAM,CAAC2B,UAAW;UAAC,OAAO,EAAE,iBAACC,CAAC;YAAA,OAAKnB,cAAc,EAAE;UAAA,CAAC;UAAA;QAAA,EAAmC,EAE/P,KAAC,SAAS;UAAA,UACV,MAAC,IAAI;YAAC,KAAK,EAAET,MAAM,CAAC2B,UAAW;YAAC,OAAO,EAAE;cAAA,OAAMhF,mBAAmB,EAAE;YAAA,CAAC;YAAA,uCAA0B,IAAI,kCAA8B,IAAI;UAAA;QAAQ,EACrI,EACXF,WAAW,GAAG,CAAC,GAAG,KAAC,SAAS;UAAC,OAAO,EAAE;YAAA,OAAMI,iBAAiB,EAAE;UAAA,CAAC;UAAA,UAC7D,MAAC,IAAI;YAAC,KAAK,EAAEmD,MAAM,CAAC2B,UAAW;YAAA,uCAA0B,IAAI,kCAA8B,IAAI;UAAA;QAAQ,EAC/F,GAAG,IAAI,EAEf,MAAC,IAAI;UAAC,KAAK,EAAE3B,MAAM,CAAC2B,UAAW;UAAA,mCAAsB,IAAI;QAAA,EAAQ,EAEjE,KAAC,IAAI;UAAC,KAAK,EAAE3B,MAAM,CAAC2B,UAAW;UAAC,OAAO,EAAE;YAAA,OAAMxM,UAAU,CAAC4K,QAAQ,CAAC,iBAAiB,EAAE;cAClF1K,gBAAgB,EAAEA,gBAAgB;cAAEC,gBAAgB,EAAEA,gBAAgB;cAAE0D,aAAa,EAAEA,aAAa;cAAEzD,YAAY,EAAEA,YAAY;cAAEC,eAAe,EAAEA,eAAe;cAAEC,MAAM,EAAEA,MAAM;cAAEC,KAAK,EAAEA,KAAK;cAAEC,IAAI,EAAEA,IAAI;cAAEC,IAAI,EAAEA,IAAI;cAAEC,iBAAiB,EAAEA,iBAAiB;cAAEC,mBAAmB,EAAEA,mBAAmB;cAAEC,oBAAoB,EAAEA,oBAAoB;cAAEwD,cAAc,EAAEA,cAAc;cAAEvD,6BAA6B,EAAEA,6BAA6B;cAAEC,0BAA0B,EAAEA,0BAA0B;cAAEC,aAAa,EAAEA,aAAa;cAAEC,cAAc,EAAEA,cAAc;cAAEC,kBAAkB,EAAEA,kBAAkB;cAAEC,uBAAuB,EAAEA,uBAAuB;cAAEC,OAAO,EAAEA,OAAO;cAAEC,UAAU,EAAEA,UAAU;cAAEC,OAAO,EAAEA,OAAO;cAAEC,QAAQ,EAAEA,QAAQ;cAAEC,SAAS,EAAEA,SAAS;cAAEC,eAAe,EAAEA,eAAe;cAAEA,eAAe,EAAEA,eAAe;cAC5yBC,KAAK,EAAEA,KAAK;cAAEC,SAAS,EAAEA,SAAS;cAAEC,2BAA2B,EAAEA,2BAA2B;cAAEC,SAAS,EAAEA,SAAS;cAAEC,eAAe,EAAEA,eAAe;cAAEC,gBAAgB,EAAEA,gBAAgB;cAAEC,gBAAgB,EAAEA,gBAAgB;cAAEC,WAAW,EAAEA,WAAW;cAAEC,OAAO,EAAEA,OAAO;cAAEC,wBAAwB,EAAEA,wBAAwB;cAAEC,aAAa,EAAEA,aAAa;cAAEC,eAAe,EAAEA,eAAe;cAAEC,mBAAmB,EAAEA,mBAAmB;cAAEC,SAAS,EAAEA,SAAS;cAAEC,QAAQ,EAAEA,QAAQ;cAAEC,KAAK,EAAEA,KAAK;cAAEC,SAAS,EAAEA,SAAS;cAAEC,YAAY,EAAEA,YAAY;cAAEA,YAAY,EAAEA,YAAY;cAAEC,aAAa,EAAEA,aAAa;cAAEC,gBAAgB,EAAEA,gBAAgB;cAAEC,YAAY,EAAEA,YAAY;cAAEC,eAAe,EAAEA,eAAe;cAAEC,iBAAiB,EAAEA,iBAAiB;cAAEC,sBAAsB,EAAEA,sBAAsB;cAAEC,eAAe,EAAEA,eAAe;cAAEC,sBAAsB,EAAEA,sBAAsB;cAAEyC,YAAY,EAAEA,YAAY;cAAExC,SAAS,EAAEA,SAAS;cAAEG,iBAAiB,EAAEA,iBAAiB;cAAEF,iBAAiB,EAAEA,iBAAiB;cAAEC,SAAS,EAAEA,SAAS;cAAEE,oBAAoB,EAAEA,oBAAoB;cAAEC,iBAAiB,EAAEA,iBAAiB;cAAEC,oBAAoB,EAAEA,oBAAoB;cAAEC,qBAAqB,EAAEA,qBAAqB;cAAEC,aAAa,EAAEA,aAAa;cAAEG,mBAAmB,EAAEA,mBAAmB;cAC5tCiC,YAAY,EAAEA,YAAY;cAAE9B,cAAc,EAAEA,cAAc;cAAEC,WAAW,EAAEA,WAAW;cAAEC,GAAG,EAAEA,GAAG;cAAEE,WAAW,EAAEA;YACjH,CAAC,CAAC;UAAA,CAAC;UAAA;QAAA,EAA6B;MAAA;IAG7B,EACE;EAAA,EACF;AAEvB;AAGA,IAAMwG,MAAM,GAAG6B,UAAU,CAACC,MAAM,CAAC;EAE7BC,SAAS,EAAE;IACPC,eAAe,EAAE,MAAM;IACvBV,UAAU,EAAE,QAAQ;IACpBW,KAAK,EAAE;EAEX,CAAC;EACDhB,eAAe,EAAE;IACbnM,MAAM,EAAEA,MAAM;IACdkN,eAAe,EAAE;EAErB,CAAC;EACDd,UAAU,EAAE;IACRpM,MAAM,EAAE,KAAK;IACbkN,eAAe,EAAE,MAAM;IACvBC,KAAK,EAAE,MAAM;IACbV,cAAc,EAAE;EAGpB,CAAC;EACDvE,KAAK,EAAE;IAEHgF,eAAe,EAAE,MAAM;IACvBE,KAAK,EAAE,MAAM;IACbC,UAAU,EAAE,IAAI;IAChBC,WAAW,EAAE,IAAI;IACjBC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,SAAS,EAAE;EAEf,CAAC;EACDpB,UAAU,EAAE;IACRrM,MAAM,EAAE,KAAK;IACbkN,eAAe,EAAE,SAAS;IAC1BC,KAAK,EAAE;EAEX,CAAC;EACDO,SAAS,EAAE;IACPH,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBN,eAAe,EAAE,SAAS;IAC1BE,KAAK,EAAE,MAAM;IACbpN,MAAM,EAAE,MAAM;IACdyN,SAAS,EAAE,QAAQ;IACnBE,SAAS,EAAE;EACf,CAAC;EACDC,MAAM,EAAE;IACJV,eAAe,EAAE,SAAS;IAE1BW,MAAM,EAAE,CAAC;IACTJ,SAAS,EAAE,QAAQ;IACnBF,QAAQ,EAAE,EAAE;IACZJ,KAAK,EAAE,KAAK;IACZW,WAAW,EAAE,SAAS;IACtBC,WAAW,EAAE,CAAC;IACdtB,cAAc,EAAE,QAAQ;IACxBW,KAAK,EAAE;EACX,CAAC;EACDY,OAAO,EAAE;IACLd,eAAe,EAAE,SAAS;IAC1BW,MAAM,EAAE,CAAC;IACTJ,SAAS,EAAE,QAAQ;IACnBF,QAAQ,EAAE,EAAE;IACZO,WAAW,EAAE,SAAS;IACtBC,WAAW,EAAE,CAAC;IACdtB,cAAc,EAAE,QAAQ;IACxBW,KAAK,EAAE,MAAM;IACba,IAAI,EAAE;EACV,CAAC;EAEDC,OAAO,EAAE;IACLhB,eAAe,EAAE,SAAS;IAC1BW,MAAM,EAAE,CAAC;IACTJ,SAAS,EAAE,QAAQ;IACnBF,QAAQ,EAAE,EAAE;IACZO,WAAW,EAAE,SAAS;IACtBC,WAAW,EAAE,CAAC;IACdtB,cAAc,EAAE,QAAQ;IACxBW,KAAK,EAAE,MAAM;IACba,IAAI,EAAE;EACV,CAAC;EAEDpB,UAAU,EAAE;IAERU,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,SAAS,EAAE,QAAQ;IACnBP,eAAe,EAAE,SAAS;IAC1BE,KAAK,EAAE,MAAM;IAEbX,cAAc,EAAE,QAAQ;IACxBkB,SAAS,EAAE;EACf,CAAC;EAEDQ,UAAU,EAAE;IAERZ,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,SAAS,EAAE,QAAQ;IACnBP,eAAe,EAAE,SAAS;IAC1BE,KAAK,EAAE,MAAM;IACbX,cAAc,EAAE,QAAQ;IACxB2B,UAAU,EAAE;EAEhB,CAAC;EACD9B,QAAQ,EAAE;IAENiB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,SAAS,EAAE,QAAQ;IACnBP,eAAe,EAAE,MAAM;IACvBE,KAAK,EAAE,MAAM;IACbiB,YAAY,EAAE,QAAQ;IACtBrO,MAAM,EAAE;EAEZ,CAAC;EAGDsO,UAAU,EAAE;IACRlB,KAAK,EAAE,MAAM;IACbG,QAAQ,EAAE,EAAE;IACZD,WAAW,EAAE;EAGjB,CAAC;EACDiB,aAAa,EAAE;IACXC,aAAa,EAAE,KAAK;IACpBxO,MAAM,EAAE,EAAE;IACVyM,cAAc,EAAE,QAAQ;IACxBgC,YAAY,EAAE;EAClB,CAAC;EACDtD,MAAM,EAAE;IAEJ+B,eAAe,EAAE,MAAM;IACvBE,KAAK,EAAE,MAAM;IACbC,UAAU,EAAE,IAAI;IAChBC,WAAW,EAAE,IAAI;IACjBC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,SAAS,EAAE;EAEf;AAEJ,CAAC,CAAC"},"metadata":{},"sourceType":"module"}