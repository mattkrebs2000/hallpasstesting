{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport Passes from \"./Mapofclasspasses/Mapofclasspasses\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { auth, firebase } from \"../Firebase/Config\";\nimport { getAuth, onAuthStateChanged, createUserWithEmailAndPassword, sendEmailVerification } from \"@firebase/auth\";\nimport { onSnapshot, collection, addDoc, query, where, getDocs, deleteDoc, doc, setDoc, getDoc, updateDoc, FieldValue, arrayUnion, orderBy, limit } from \"@firebase/firestore\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar height = Dimensions.get(\"window\").height;\nexport default function SignUp(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _route$params = route.params,\n    idofcurrentclass = _route$params.idofcurrentclass,\n    currentsessionid = _route$params.currentsessionid,\n    endlastclass = _route$params.endlastclass,\n    userinformation = _route$params.userinformation,\n    school = _route$params.school,\n    state = _route$params.state,\n    town = _route$params.town,\n    role = _route$params.role,\n    bathroompasslimit = _route$params.bathroompasslimit,\n    ifnegativeplusminus = _route$params.ifnegativeplusminus,\n    nonbathroompasslimit = _route$params.nonbathroompasslimit,\n    exclusivephonepassmaxstudents = _route$params.exclusivephonepassmaxstudents,\n    exclusivephonepasstimelmit = _route$params.exclusivephonepasstimelmit,\n    lengthofclass = _route$params.lengthofclass,\n    classiscurrent = _route$params.classiscurrent,\n    nameofcurrentclass = _route$params.nameofcurrentclass,\n    starttimeofcurrentclass = _route$params.starttimeofcurrentclass,\n    classid = _route$params.classid,\n    coursename = _route$params.coursename,\n    section = _route$params.section,\n    location = _route$params.location,\n    teacherid = _route$params.teacherid,\n    teacheriscalled = _route$params.teacheriscalled,\n    email = _route$params.email,\n    starttime = _route$params.starttime,\n    lengthofclassesforacomputer = _route$params.lengthofclassesforacomputer,\n    inpenalty = _route$params.inpenalty,\n    stoptimepenalty = _route$params.stoptimepenalty,\n    starttimepenalty = _route$params.starttimepenalty,\n    totaltimepenalty = _route$params.totaltimepenalty,\n    alreadyused = _route$params.alreadyused,\n    teacher = _route$params.teacher,\n    Selectedclassdestination = _route$params.Selectedclassdestination,\n    youcangetpass = _route$params.youcangetpass,\n    currentlocation = _route$params.currentlocation,\n    locationdestination = _route$params.locationdestination,\n    firstname = _route$params.firstname,\n    lastname = _route$params.lastname,\n    ledby = _route$params.ledby,\n    grouptime = _route$params.grouptime,\n    drinkofwater = _route$params.drinkofwater,\n    exclusivetime = _route$params.exclusivetime,\n    donewithworkpass = _route$params.donewithworkpass,\n    bathroomtime = _route$params.bathroomtime,\n    nonbathroomtime = _route$params.nonbathroomtime,\n    bathroompassinuse = _route$params.bathroompassinuse,\n    totalinlineforbathroom = _route$params.totalinlineforbathroom,\n    lengthofclasses = _route$params.lengthofclasses,\n    endlastclasssubstitute = _route$params.endlastclasssubstitute,\n    thelastid = _route$params.thelastid,\n    phonepassduration = _route$params.phonepassduration,\n    overunder = _route$params.overunder,\n    drinkpassduration = _route$params.drinkpassduration,\n    bathroompassduration = _route$params.bathroompassduration,\n    otherpassduration = _route$params.otherpassduration,\n    maxstudentsphonepass = _route$params.maxstudentsphonepass,\n    donewithworkphonepass = _route$params.donewithworkphonepass,\n    consequenceid = _route$params.consequenceid,\n    id = _route$params.id,\n    sessionending = _route$params.sessionending,\n    maxstudentsbathroom = _route$params.maxstudentsbathroom,\n    totalclasstime = _route$params.totalclasstime,\n    idselected = _route$params.idselected,\n    penaltyminutes = _route$params.penaltyminutes,\n    adjustments = _route$params.adjustments,\n    abc = _route$params.abc,\n    drinkpasslimit = _route$params.drinkpasslimit,\n    linkedclass = _route$params.linkedclass,\n    adminclass = _route$params.adminclass;\n  console.log(totalinlineforbathroom, \"totalinline howmanypeopleinline\");\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    userdata = _useState2[0],\n    setUserdata = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedclass = _useState4[0],\n    setSelectedclass = _useState4[1];\n  var _useState5 = useState(),\n    _useState6 = _slicedToArray(_useState5, 2),\n    idselected2 = _useState6[0],\n    setIdselected2 = _useState6[1];\n  var _useState7 = useState(),\n    _useState8 = _slicedToArray(_useState7, 2),\n    empty = _useState8[0],\n    setEmpty = _useState8[1];\n  var _useState9 = useState(),\n    _useState10 = _slicedToArray(_useState9, 2),\n    showspinner = _useState10[0],\n    setShowspinner = _useState10[1];\n  var _useState11 = useState(\"\"),\n    _useState12 = _slicedToArray(_useState11, 2),\n    classbegin = _useState12[0],\n    setclassbegin = _useState12[1];\n  var _useState13 = useState(0),\n    _useState14 = _slicedToArray(_useState13, 2),\n    duration = _useState14[0],\n    setduration = _useState14[1];\n\n  var _useState15 = useState(),\n    _useState16 = _slicedToArray(_useState15, 2),\n    returnedzero = _useState16[0],\n    setReturnedzero = _useState16[1];\n  var _useState17 = useState(),\n    _useState18 = _slicedToArray(_useState17, 2),\n    limitreached = _useState18[0],\n    setLimitreached = _useState18[1];\n  var _useState19 = useState(),\n    _useState20 = _slicedToArray(_useState19, 2),\n    studentid = _useState20[0],\n    setStudentid = _useState20[1];\n  var _useState21 = useState(),\n    _useState22 = _slicedToArray(_useState21, 2),\n    dest = _useState22[0],\n    setDest = _useState22[1];\n  var _useState23 = useState(),\n    _useState24 = _slicedToArray(_useState23, 2),\n    leftclassonpass = _useState24[0],\n    setLeftclassonpass = _useState24[1];\n  var _useState25 = useState(),\n    _useState26 = _slicedToArray(_useState25, 2),\n    userdatabefore = _useState26[0],\n    setUserdatabefore = _useState26[1];\n  var _useState27 = useState([]),\n    _useState28 = _slicedToArray(_useState27, 2),\n    test = _useState28[0],\n    setTest = _useState28[1];\n  var _useState29 = useState(false),\n    _useState30 = _slicedToArray(_useState29, 2),\n    helpgiven = _useState30[0],\n    setHelpgiven = _useState30[1];\n  var _useState31 = useState(),\n    _useState32 = _slicedToArray(_useState31, 2),\n    studentfirstname = _useState32[0],\n    setStudentfirstname = _useState32[1];\n\n  useEffect(function () {\n    var classbegin = selectedclass.classbegin;\n    var duration = selectedclass.lengthofclass;\n    var idselect = selectedclass.id;\n    var returned = selectedclass.returned;\n    var limit = selectedclass.whenlimitwillbereached;\n    var student = selectedclass.studentid;\n    var destination = selectedclass.destination;\n    var left = selectedclass.leftclass;\n    var first = selectedclass.firstname;\n    setStudentfirstname(first);\n    setStudentid(student);\n    setDest(destination);\n    setLeftclassonpass(left);\n    setReturnedzero(returned);\n    setduration(duration);\n    setclassbegin(classbegin);\n    setLimitreached(limit);\n    setIdselected2(idselect);\n  }, [selectedclass]);\n\n  useEffect(function () {\n    console.log(adminclass, \"classid\", returnedzero, \"this is returnedzero\");\n  }, [idselected2]);\n\n  useEffect(function () {\n    console.log(\"THIS IS THE IDddddddddddddd\");\n    getlocationsqrcodes();\n  }, []);\n  useEffect(function () {\n    console.log(\"THIS IS THE IDddddddddddddd\");\n    getlocationsqrcodes();\n  }, [test]);\n\n  useEffect(function () {\n    if (typeof userdatabefore != \"undefined\") {\n      var filteredData = userdatabefore.filter(function (person) {\n        if (person.timepassinitiated > 0) {\n          return person.timepassinitiated > Date.now() - 432000000;\n        } else {\n          return person.leftclass > Date.now() - 432000000;\n        }\n      });\n      setUserdata(filteredData);\n    }\n  }, [userdatabefore]);\n  function getlocationsqrcodes() {\n    return _getlocationsqrcodes.apply(this, arguments);\n  }\n  function _getlocationsqrcodes() {\n    _getlocationsqrcodes = _asyncToGenerator(function* () {\n      if (role === \"Admin\") {\n\n        var q = query(collection(firebase, \"passes\"), where('classesinvolved', 'array-contains-any', [adminclass]), orderBy(\"timepassinitiated\", \"desc\"), limit(20));\n\n        var querySnapshot = yield getDocs(q).then(function (snapshot) {\n          var statusarray = [];\n          var array = [];\n          snapshot.forEach(function (doc) {\n            array.push(doc.data());\n            statusarray.push(doc.data().status);\n          });\n          if (array.length === 0) {\n            setUserdata([{\n              classname: \"You haven't Registered\"\n            }]);\n            setEmpty(true);\n          } else {\n\n            setEmpty(false);\n            setUserdata(array);\n            console.log(\"HEEEEEEEEYYYYY,\", idselected, \"HEEEEEEEEEEEEy\");\n          }\n        });\n        setShowspinner(false);\n      }\n    });\n    return _getlocationsqrcodes.apply(this, arguments);\n  }\n  ;\n\n  var createTwoButtonAlert = function createTwoButtonAlert() {\n    return Alert.alert('Please be aware.', 'This will permanently remove this pass from the system.', [{\n      text: 'Cancel',\n      onPress: function onPress() {\n        return console.log('Cancel Pressed');\n      },\n      style: 'cancel'\n    }, {\n      text: 'Delete Pass',\n      onPress: function onPress() {\n        return deleteToDo();\n      }\n    }]);\n  };\n  var deleteToDo = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var userDoc = doc(firebase, \"passes\", idselected2);\n      yield deleteDoc(userDoc).then(_asyncToGenerator(function* () {\n        getlocationsqrcodes();\n      }));\n    });\n    return function deleteToDo() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  function Sendonpass() {\n    return _Sendonpass.apply(this, arguments);\n  }\n  function _Sendonpass() {\n    _Sendonpass = _asyncToGenerator(function* () {\n      yield updateDoc(doc(firebase, \"classesbeingtaught\", adminclass), {\n        removescanneraddbutton: true\n      }).catch(function (error) {\n        console.log(error);\n        alert(error);\n      }).then(function () {\n        var _ref4 = _asyncToGenerator(function* (check) {\n          setHelpgiven(true);\n        });\n        return function (_x) {\n          return _ref4.apply(this, arguments);\n        };\n      }()).catch(function (error) {\n        console.log(error);\n        alert(error);\n      });\n    });\n    return _Sendonpass.apply(this, arguments);\n  }\n\n  return _jsxs(SafeAreaView, {\n    style: styles.largercontainer,\n    children: [_jsx(View, {\n      style: styles.container1,\n      children: _jsx(View, {\n        children: _jsx(TouchableOpacity, {\n          children: _jsxs(Text, {\n            style: styles.error,\n            children: [\"Passes/Tardies:\", '\\n', coursename, \" \"]\n          })\n        })\n      })\n    }), _jsx(View, {\n      style: styles.container2,\n      children: _jsx(Passes, {\n        userdata: userdata,\n        id: id,\n        setSelectedclass: setSelectedclass,\n        selectedclass: selectedclass,\n        idselected: idselected2,\n        setTest: setTest,\n        test: test\n      })\n    }), _jsx(ScrollView, {\n      children: _jsxs(View, {\n        style: styles.section3,\n        children: [_jsx(View, {\n          children: _jsx(ActivityIndicator, {\n            size: \"large\",\n            color: \"#FFF\",\n            animating: showspinner,\n            style: {\n              position: 'absolute',\n              alignItems: 'center',\n              justifyContent: 'center',\n              left: 0,\n              right: 0,\n              top: 0,\n              bottom: 0\n            }\n          })\n        }), idselected2 ? _jsx(Text, {\n          style: styles.paragraph2,\n          onPress: function onPress(e) {\n            return Sendonpass();\n          },\n          children: \"Confirm Pass\"\n        }) : _jsx(Text, {\n          style: styles.paragraph2,\n          children: \"    \"\n        }), idselected2 ? _jsx(Text, {\n          style: styles.paragraph2,\n          onPress: function onPress(e) {\n            return createTwoButtonAlert();\n          },\n          children: \"Delete Pass/Tardy \"\n        }) : _jsx(Text, {\n          style: styles.paragraph2,\n          children: \"    \"\n        }), _jsxs(Text, {\n          style: styles.paragraph2,\n          children: [\"___________________ \", '\\n']\n        }), _jsx(Text, {\n          style: styles.paragraph2,\n          onPress: function onPress() {\n            return navigation.navigate(\"Mainmenuadmin\", {\n              idofcurrentclass: idofcurrentclass,\n              currentsessionid: currentsessionid,\n              sessionending: sessionending,\n              endlastclass: endlastclass,\n              userinformation: userinformation,\n              school: school,\n              state: state,\n              town: town,\n              role: role,\n              bathroompasslimit: bathroompasslimit,\n              ifnegativeplusminus: ifnegativeplusminus,\n              nonbathroompasslimit: nonbathroompasslimit,\n              drinkpasslimit: drinkpasslimit,\n              exclusivephonepassmaxstudents: exclusivephonepassmaxstudents,\n              exclusivephonepasstimelmit: exclusivephonepasstimelmit,\n              lengthofclass: lengthofclass,\n              classiscurrent: classiscurrent,\n              nameofcurrentclass: nameofcurrentclass,\n              starttimeofcurrentclass: starttimeofcurrentclass,\n              classid: classid,\n              coursename: coursename,\n              section: section,\n              location: location,\n              teacherid: teacherid,\n              teacheriscalled: teacheriscalled,\n              teacheriscalled: teacheriscalled,\n              email: email,\n              starttime: starttime,\n              lengthofclassesforacomputer: lengthofclassesforacomputer,\n              inpenalty: inpenalty,\n              stoptimepenalty: stoptimepenalty,\n              starttimepenalty: starttimepenalty,\n              totaltimepenalty: totaltimepenalty,\n              alreadyused: alreadyused,\n              teacher: teacher,\n              Selectedclassdestination: Selectedclassdestination,\n              youcangetpass: youcangetpass,\n              currentlocation: currentlocation,\n              locationdestination: locationdestination,\n              firstname: firstname,\n              lastname: lastname,\n              ledby: ledby,\n              grouptime: grouptime,\n              drinkofwater: drinkofwater,\n              drinkofwater: drinkofwater,\n              exclusivetime: exclusivetime,\n              donewithworkpass: donewithworkpass,\n              bathroomtime: bathroomtime,\n              nonbathroomtime: nonbathroomtime,\n              bathroompassinuse: bathroompassinuse,\n              totalinlineforbathroom: totalinlineforbathroom,\n              lengthofclasses: lengthofclasses,\n              endlastclasssubstitute: endlastclasssubstitute,\n              thelastid: thelastid,\n              drinkpassduration: drinkpassduration,\n              phonepassduration: phonepassduration,\n              overunder: overunder,\n              bathroompassduration: bathroompassduration,\n              otherpassduration: otherpassduration,\n              maxstudentsphonepass: maxstudentsphonepass,\n              donewithworkphonepass: donewithworkphonepass,\n              consequenceid: consequenceid,\n              maxstudentsbathroom: maxstudentsbathroom,\n              penaltyminutes: penaltyminutes,\n              adjustments: adjustments,\n              abc: abc,\n              linkedclass: linkedclass\n            });\n          },\n          children: \"Return to Main Menu\"\n        })]\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#000\",\n    alignItems: \"center\",\n    width: \"100%\"\n  },\n  largercontainer: {\n    height: height,\n    backgroundColor: \"#000\"\n  },\n  container1: {\n    height: \"16%\",\n    backgroundColor: '#000',\n    width: \"100%\",\n    justifyContent: \"center\"\n  },\n  error: {\n    backgroundColor: '#000',\n    color: \"#FFF\",\n    marginLeft: \"3%\",\n    marginRight: \"3%\",\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: \"center\"\n  },\n  container2: {\n    height: \"35%\",\n    backgroundColor: \"#013469\",\n    width: \"100%\"\n  },\n  paragraph: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    backgroundColor: '#000000',\n    color: \"#fff\",\n    height: \"100%\",\n    textAlign: \"center\",\n    marginTop: \"10%\"\n  },\n  Newrow: {\n    backgroundColor: '#000000',\n    margin: 2,\n    textAlign: \"center\",\n    fontSize: 20,\n    width: \"90%\",\n    borderColor: \"#E43522\",\n    borderWidth: 4,\n    justifyContent: \"center\",\n    color: \"#fff\"\n  },\n  Newrowa: {\n    backgroundColor: '#000000',\n    margin: 4,\n    textAlign: \"center\",\n    fontSize: 20,\n    borderColor: \"#E43522\",\n    borderWidth: 4,\n    justifyContent: \"center\",\n    color: \"#fff\",\n    flex: 1\n  },\n  Newrowb: {\n    backgroundColor: '#000000',\n    margin: 4,\n    textAlign: \"center\",\n    fontSize: 20,\n    borderColor: \"#E43522\",\n    borderWidth: 4,\n    justifyContent: \"center\",\n    color: \"#fff\",\n    flex: .4\n  },\n  paragraph2: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: \"center\",\n    backgroundColor: '#000000',\n    color: \"#fff\",\n    justifyContent: \"center\",\n    marginTop: 30\n  },\n  paragraph4: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    backgroundColor: '#000000',\n    color: \"#fff\",\n    justifyContent: \"center\",\n    lineHeight: 30\n  },\n  section3: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    backgroundColor: \"#000\",\n    color: \"#fff\",\n    alignContent: \"center\",\n    height: \"49%\"\n  },\n  paragraph6: {\n    color: \"#fff\",\n    fontSize: 17,\n    marginRight: 7\n  },\n  textContainer: {\n    flexDirection: 'row',\n    height: 50,\n    justifyContent: 'center',\n    marginBottom: 20\n  },\n  error5: {\n    backgroundColor: '#000',\n    color: \"#FFF\",\n    marginLeft: \"3%\",\n    marginRight: \"3%\",\n    fontSize: 17,\n    fontWeight: 'bold',\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","Passes","auth","firebase","getAuth","onAuthStateChanged","createUserWithEmailAndPassword","sendEmailVerification","onSnapshot","collection","addDoc","query","where","getDocs","deleteDoc","doc","setDoc","getDoc","updateDoc","FieldValue","arrayUnion","orderBy","limit","height","Dimensions","get","SignUp","route","navigation","params","idofcurrentclass","currentsessionid","endlastclass","userinformation","school","state","town","role","bathroompasslimit","ifnegativeplusminus","nonbathroompasslimit","exclusivephonepassmaxstudents","exclusivephonepasstimelmit","lengthofclass","classiscurrent","nameofcurrentclass","starttimeofcurrentclass","classid","coursename","section","location","teacherid","teacheriscalled","email","starttime","lengthofclassesforacomputer","inpenalty","stoptimepenalty","starttimepenalty","totaltimepenalty","alreadyused","teacher","Selectedclassdestination","youcangetpass","currentlocation","locationdestination","firstname","lastname","ledby","grouptime","drinkofwater","exclusivetime","donewithworkpass","bathroomtime","nonbathroomtime","bathroompassinuse","totalinlineforbathroom","lengthofclasses","endlastclasssubstitute","thelastid","phonepassduration","overunder","drinkpassduration","bathroompassduration","otherpassduration","maxstudentsphonepass","donewithworkphonepass","consequenceid","id","sessionending","maxstudentsbathroom","totalclasstime","idselected","penaltyminutes","adjustments","abc","drinkpasslimit","linkedclass","adminclass","console","log","userdata","setUserdata","selectedclass","setSelectedclass","idselected2","setIdselected2","empty","setEmpty","showspinner","setShowspinner","classbegin","setclassbegin","duration","setduration","returnedzero","setReturnedzero","limitreached","setLimitreached","studentid","setStudentid","dest","setDest","leftclassonpass","setLeftclassonpass","userdatabefore","setUserdatabefore","test","setTest","helpgiven","setHelpgiven","studentfirstname","setStudentfirstname","idselect","returned","whenlimitwillbereached","student","destination","left","leftclass","first","getlocationsqrcodes","filteredData","filter","person","timepassinitiated","Date","now","q","querySnapshot","then","snapshot","statusarray","array","forEach","push","data","status","length","classname","createTwoButtonAlert","Alert","alert","text","onPress","style","deleteToDo","userDoc","Sendonpass","removescanneraddbutton","catch","error","check","styles","largercontainer","container1","container2","section3","position","alignItems","justifyContent","right","top","bottom","paragraph2","e","navigate","StyleSheet","create","container","backgroundColor","width","color","marginLeft","marginRight","fontSize","fontWeight","textAlign","paragraph","marginTop","Newrow","margin","borderColor","borderWidth","Newrowa","flex","Newrowb","paragraph4","lineHeight","alignContent","paragraph6","textContainer","flexDirection","marginBottom","error5"],"sources":["/Users/matt/Desktop/hallpasstesting/Navigation/Components/Passesforadmin.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport Passes from './Mapofclasspasses/Mapofclasspasses';\n\nimport { Alert, SafeAreaView, Text, View, TextInput, KeyboardAvoidingView, Platform, StyleSheet, ScrollView, TouchableOpacity, Dimensions, ActivityIndicator } from 'react-native';\n\nimport { auth, firebase } from \"../Firebase/Config\";\nimport { getAuth, onAuthStateChanged, createUserWithEmailAndPassword, sendEmailVerification } from \"@firebase/auth\";\nimport { onSnapshot, collection, addDoc, query, where, getDocs, deleteDoc, doc, setDoc, getDoc, updateDoc, FieldValue, arrayUnion, orderBy, limit } from \"@firebase/firestore\";\n\n\nconst height = Dimensions.get(\"window\").height;\n\nexport default function SignUp({ route, navigation }) {\n\n    const { idofcurrentclass, currentsessionid, endlastclass, userinformation, school, state, town, role, bathroompasslimit, ifnegativeplusminus, nonbathroompasslimit, exclusivephonepassmaxstudents, exclusivephonepasstimelmit, lengthofclass, classiscurrent, nameofcurrentclass, starttimeofcurrentclass, classid, coursename, section, location, teacherid, teacheriscalled,\n        email, starttime, lengthofclassesforacomputer, inpenalty, stoptimepenalty, starttimepenalty, totaltimepenalty, alreadyused, teacher, Selectedclassdestination, youcangetpass, currentlocation, locationdestination, firstname, lastname, ledby, grouptime, drinkofwater, exclusivetime, donewithworkpass, bathroomtime, nonbathroomtime, bathroompassinuse, totalinlineforbathroom, lengthofclasses, endlastclasssubstitute, thelastid, phonepassduration, overunder, drinkpassduration, bathroompassduration, otherpassduration, maxstudentsphonepass, donewithworkphonepass, consequenceid, id, sessionending, maxstudentsbathroom, totalclasstime, idselected, penaltyminutes, adjustments, abc, drinkpasslimit, linkedclass, adminclass\n    } = route.params;\n    console.log(totalinlineforbathroom, \"totalinline howmanypeopleinline\");\n\n    const [userdata, setUserdata] = useState([]);\n    // const [classdata, setClassdata] = useState();\n    const [selectedclass, setSelectedclass] = useState(\"\");\n    const [idselected2, setIdselected2] = useState();\n    const [empty, setEmpty] = useState();\n\n    const [showspinner, setShowspinner] = useState();\n    // const [classtrue, setClasstrue] = useState(false)\n    const [classbegin, setclassbegin] = useState(\"\");\n    const [duration, setduration] = useState(0);\n    // const [sessionended, setSessionended] = useState(false);\n\n    // const [idsofpasses, setIdsofpasses] = useState();\n\n    // const [newoverunder, setNewoverunder] = useState();\n    const [returnedzero, setReturnedzero] = useState();\n    const [limitreached, setLimitreached] = useState();\n    const [studentid, setStudentid] = useState();\n    const [dest, setDest] = useState();\n    // const [howmany, setHowmanypeople] = useState();\n    const [leftclassonpass, setLeftclassonpass] = useState();\n    const [userdatabefore, setUserdatabefore] = useState();\n    // const [localpercent, setLocalpercent] = useState();\n    const [test, setTest] = useState([]);\n    const [helpgiven, setHelpgiven] = useState(false);\n    const [studentfirstname, setStudentfirstname] = useState();\n\n\n\n    // useEffect(() =>\n    //     onSnapshot(doc(firebase, \"classesbeingtaught\", classid), (doc) => {\n    //        checkDatabaseData2();\n    //     }\n    //     ), []);\n\n    useEffect(() => {\n        let classbegin = selectedclass.classbegin;\n        let duration = selectedclass.lengthofclass;\n        let idselect = selectedclass.id;\n        let returned = selectedclass.returned;\n        let limit = selectedclass.whenlimitwillbereached;\n        let student = selectedclass.studentid;\n        let destination = selectedclass.destination;\n        let left = selectedclass.leftclass;\n\n        let first = selectedclass.firstname;\n\n        setStudentfirstname(first);\n        setStudentid(student);\n        setDest(destination);\n        setLeftclassonpass(left);\n\n        setReturnedzero(returned);\n        setduration(duration);\n        setclassbegin(classbegin);\n        setLimitreached(limit);\n\n        setIdselected2(idselect);\n\n    }, [selectedclass]);\n\n    // useEffect(() => {\n    //     if (typeof classid != \"undefined\") {\n    //         checkDatabaseData2();\n    //     }\n    //     setHelpgiven(false);\n    // }, []);\n\n    useEffect(() => {\n        console.log(adminclass, \"classid\", returnedzero, \"this is returnedzero\")\n    }, [idselected2]);\n\n\n\n    // useEffect(() => {\n    //  console.log(howmany, \"howmanypeople\")\n    // }, [howmany]);\n\n\n    // async function checkDatabaseData2() {\n    //     console.log(\"12Did it get this far? \");\n\n    //     const docRef = doc(firebase, \"classesbeingtaught\", classid);\n\n    //     const docSnap = await getDoc(docRef);\n\n    //     if (docSnap.exists()) {\n    //         setHowmanypeople(docSnap.data().inusebathroompass)\n    //     } else {\n    //         // doc.data() will be undefined in this case\n    //     }\n    // };\n\n\n    // const endpasses = () => {\n\n    //     if (sessionending < Date.now()) {\n    //         const q = query(collection(firebase, \"passes\"), where(\"classsessionid\", \"==\", currentsessionid), where(\"returned\", \"==\", 0));\n\n    //         const querySnapshot = getDocs(q)\n    //             .then(function (snapshot) {\n    //                 let array = []\n    //                 snapshot.forEach(doc => {\n    //                     array.push({ id: doc.data().id, expectedreturn: doc.data().whenlimitwillbereached, endofclasssession: doc.data().endofclasssession })\n    //                 })\n    //                 if (array.length === 0) {\n    //                     console.log(\"No passes to change\")\n    //                 } else {\n    //                     setIdsofpasses(array); console.log(array, \"This is the pass \");\n    //                 }\n    //             })\n    //     }\n\n    // }\n    // useEffect(() => {\n    //     if (typeof idsofpasses != \"undefined\") {\n    //         const t = Date.now();\n\n    //         for (let s = 0; s < idsofpasses.length; s++) {\n\n    //             const r = new Date(idsofpasses[s].endofclasssession)\n\n    //             updateDoc(doc(firebase, \"passes\", idsofpasses[s].id), {\n\n    //                 returned: idsofpasses[s].endofclasssession,\n    //                 timereturned: r.toLocaleTimeString([], { hour12: true }),\n    //                 returnedbeforetimelimit: idsofpasses[s].expectedreturn > idsofpasses[s].endofclasssession,\n    //                 differenceoverorunderinminutes: (idsofpasses[s].expectedreturn - idsofpasses[s].endofclasssession) / 60000,\n\n\n    //             }).catch((error) => {\n    //                 console.log(error); alert(error);\n    //             })\n    //         }\n    //     }\n    // }, [idsofpasses]);\n\n\n    // const ifitshtere = () => {\n    //     if (sessionending < Date.now()) {\n    //         updateDoc(doc(firebase, \"classsessions\", currentsessionid), {\n    //             status: \"Completed\"\n    //         })\n    //             .catch(error => {\n    //                 console.log(error); alert(\"2\", error);\n    //             })\n    //         endpasses();\n    //     }\n    // }\n\n    // useEffect(() => {\n    //     refresh3();\n    // }, []);\n\n\n    // async function refresh3() {\n\n    //     if (typeof currentsessionid != \"undefined\") {\n    //         const docRef = doc(firebase, \"classsessions\", currentsessionid);\n\n    //         const docSnap = await getDoc(docRef);\n\n    //         if (docSnap.exists()) {\n    //             ifitshtere();\n    //         } else {\n    //             // doc.data() will be undefined in this case\n    //             console.log(\"No such document!\");\n    //         }\n    //         console.log(\"THIIIIS was NOW RUN\")\n\n    //     }\n    // }\n\n\n    useEffect(() => {\n        console.log(\"THIS IS THE IDddddddddddddd\");\n        getlocationsqrcodes();\n    }, []);\n\n\n    useEffect(() => {\n        console.log(\"THIS IS THE IDddddddddddddd\");\n        getlocationsqrcodes();\n    }, [test]);\n\n\n\n\n\n    // useEffect(() => {\n    //     userdata.forEach(obj => {\n    //         console.log(obj.id, obj.differenceoverorunderinminutes, \"THI SI SIS THE USSERDATA\")\n    //     });\n    // }, [userdata]);\n\n\n\n    useEffect(() => {\n\n        if (typeof userdatabefore != \"undefined\") {\n            const filteredData = userdatabefore.filter((person) => {\n                if (person.timepassinitiated > 0) {\n                    return person.timepassinitiated > (Date.now() - 432000000)\n                } else {\n                    return person.leftclass > (Date.now() - 432000000);\n                }\n            })\n\n            setUserdata(filteredData)\n        }\n    }, [userdatabefore]);\n\n\n    async function getlocationsqrcodes() {\n        if (role === \"Admin\") {\n            // Should be changed back to this as soon as \"timepassinitiated\" is on all pass documnents\n\n            const q = query(collection(firebase, \"passes\"), where('classesinvolved', 'array-contains-any', [adminclass]), orderBy(\"timepassinitiated\", \"desc\"), limit(20));\n\n\n            // const q = query(collection(firebase, \"passes\"), where(\"classid\", \"==\", classid));\n\n\n            const querySnapshot = await getDocs(q)\n\n\n                .then(function (snapshot) {\n                    let statusarray = []\n                    let array = []\n                    snapshot.forEach(doc => {\n                        array.push(doc.data())\n                        statusarray.push(doc.data().status)\n\n                    })\n                    if (array.length === 0) {\n                        setUserdata([{ classname: \"You haven't Registered\" }]);\n                        setEmpty(true);\n\n                    } else {\n                        // setIdselected2();\n\n                        setEmpty(false);\n                        setUserdata(array);\n                        console.log(\"HEEEEEEEEYYYYY,\", idselected, \"HEEEEEEEEEEEEy\");\n                    }\n\n\n                })\n            setShowspinner(false);\n\n        }\n\n    };\n\n\n\n    // useEffect(() => {\n    //     if (coursename) {\n    //         navigation.setOptions({\n    //             headerLeft: () => (\n    //                 <TouchableOpacity onPress={() => navigation.navigate(\"Mainmenuteacher\", {\n    //                     idofcurrentclass: idofcurrentclass, currentsessionid: currentsessionid, sessionending: sessionending, endlastclass: endlastclass, userinformation: userinformation, school: school, state: state, town: town, role: role, id: id, bathroompasslimit: bathroompasslimit, ifnegativeplusminus: ifnegativeplusminus, drinkpasslimit: drinkpasslimit, nonbathroompasslimit: nonbathroompasslimit, exclusivephonepassmaxstudents: exclusivephonepassmaxstudents, exclusivephonepasstimelmit: exclusivephonepasstimelmit, lengthofclass: lengthofclass, classiscurrent: classiscurrent, nameofcurrentclass: nameofcurrentclass, starttimeofcurrentclass: starttimeofcurrentclass, classid: classid, coursename: coursename, section: section, location: location, teacherid: teacherid, teacheriscalled: teacheriscalled,\n    //                     email: email, starttime: starttime, lengthofclassesforacomputer: lengthofclassesforacomputer, inpenalty: inpenalty, stoptimepenalty: stoptimepenalty, starttimepenalty: starttimepenalty, totaltimepenalty: totaltimepenalty, alreadyused: alreadyused, teacher: teacher, Selectedclassdestination: Selectedclassdestination, youcangetpass: youcangetpass, currentlocation: currentlocation, locationdestination: locationdestination, firstname: firstname, lastname: lastname, ledby: ledby, grouptime: grouptime, drinkofwater: drinkofwater, drinkofwater: drinkofwater, exclusivetime: exclusivetime, donewithworkpass: donewithworkpass, bathroomtime: bathroomtime, nonbathroomtime: nonbathroomtime, bathroompassinuse: bathroompassinuse, totalinlineforbathroom: totalinlineforbathroom, lengthofclasses: lengthofclasses, endlastclasssubstitute: endlastclasssubstitute, sessionended: sessionended, thelastid: thelastid, drinkpassduration: drinkpassduration, phonepassduration: phonepassduration, bathroompassduration: bathroompassduration, overunder: overunder, otherpassduration: otherpassduration, maxstudentsphonepass: maxstudentsphonepass, donewithworkphonepass: donewithworkphonepass, consequenceid: consequenceid, maxstudentsbathroom: maxstudentsbathroom,\n    //                     newoverunder: newoverunder, penaltyminutes: penaltyminutes, adjustments: adjustments, abc: abc, linkedclass: linkedclass\n    //                 })}>\n\n    //                     <Text accessibilityLabel=\"Guest\" style={styles.error5}>\n    //                         Main Menu\n    //                     </Text>\n    //                 </TouchableOpacity>\n    //             ),\n    //         });\n    //     } else {\n\n    //         navigation.setOptions({\n    //             headerLeft: () => (\n    //                 <TouchableOpacity onPress={() => navigation.navigate(\"Mainmenuteacher\", {\n    //                     idofcurrentclass: idofcurrentclass, currentsessionid: currentsessionid, sessionending: sessionending, endlastclass: endlastclass, userinformation: userinformation, school: school, state: state, town: town, role: role, id: id, bathroompasslimit: bathroompasslimit, ifnegativeplusminus: ifnegativeplusminus, nonbathroompasslimit: nonbathroompasslimit, drinkpasslimit: drinkpasslimit, exclusivephonepassmaxstudents: exclusivephonepassmaxstudents, exclusivephonepasstimelmit: exclusivephonepasstimelmit, lengthofclass: lengthofclass, classiscurrent: classiscurrent, nameofcurrentclass: nameofcurrentclass, starttimeofcurrentclass: starttimeofcurrentclass, classid: classid, coursename: coursename, section: section, location: location, teacherid: teacherid, teacheriscalled: teacheriscalled,\n    //                     email: email, starttime: starttime, lengthofclassesforacomputer: lengthofclassesforacomputer, inpenalty: inpenalty, stoptimepenalty: stoptimepenalty, starttimepenalty: starttimepenalty, totaltimepenalty: totaltimepenalty, alreadyused: alreadyused, teacher: teacher, Selectedclassdestination: Selectedclassdestination, youcangetpass: youcangetpass, currentlocation: currentlocation, locationdestination: locationdestination, firstname: firstname, lastname: lastname, ledby: ledby, grouptime: grouptime, drinkofwater: drinkofwater, exclusivetime: exclusivetime, donewithworkpass: donewithworkpass, bathroomtime: bathroomtime, nonbathroomtime: nonbathroomtime, bathroompassinuse: bathroompassinuse, totalinlineforbathroom: totalinlineforbathroom, lengthofclasses: lengthofclasses, endlastclasssubstitute: endlastclasssubstitute, sessionended: sessionended, thelastid: thelastid, drinkpassduration: drinkpassduration, phonepassduration: phonepassduration, bathroompassduration: bathroompassduration, overunder: overunder, otherpassduration: otherpassduration, maxstudentsphonepass: maxstudentsphonepass, donewithworkphonepass: donewithworkphonepass, consequenceid: consequenceid, maxstudentsbathroom: maxstudentsbathroom,\n    //                     newoverunder: newoverunder, penaltyminutes: penaltyminutes, adjustments: adjustments, abc: abc, linkedclass: linkedclass\n    //                 })}>\n\n    //                     <Text accessibilityLabel=\"Guest\" style={styles.error5}>\n    //                         Main Menu\n    //                     </Text>\n    //                 </TouchableOpacity>\n    //             ),\n    //         });\n\n    //     }\n\n    // }, [coursename]);\n\n    const createTwoButtonAlert = () =>\n\n\n        Alert.alert('Please be aware.', 'This will permanently remove this pass from the system.', [\n            {\n                text: 'Cancel',\n                onPress: () => console.log('Cancel Pressed'),\n                style: 'cancel',\n            },\n            { text: 'Delete Pass', onPress: () => deleteToDo() },\n        ]);\n\n    const deleteToDo = async () => {\n\n        const userDoc = doc(firebase, \"passes\",\n            idselected2)\n\n        await deleteDoc(userDoc)\n            .then(async () => {\n                getlocationsqrcodes();\n            })\n    };\n\n    // async function ReturnStudnet2() {\n    //     if (howmany > 0) {\n\n    //         await updateDoc(doc(firebase, \"classesbeingtaught\", classid), {\n    //             inusebathroompass: howmany - 1,\n    //         }).catch((error) => {\n    //             console.log(error); alert(error);\n    //         }).then(async () => {\n    //             console.log(\"comppleted\");\n    //             setHowmanypeople(howmany - 1);\n    //         })\n    //     } else {\n    //         await updateDoc(doc(firebase, \"classesbeingtaught\", classid), {\n    //             inusebathroompass: 0,\n    //         }).catch((error) => {\n    //             console.log(error); alert(error);\n    //         }).then(async () => {\n    //             console.log(\"comppleted\");\n    //             setHowmanypeople(0);\n    //         })\n    //     }\n\n    // }\n\n    // async function ReturnStudentFromPass() {\n\n    //     const r = new Date();\n    //     const t = Date.now();\n\n    //     const ontime = limitreached > t;\n\n    //     console.log(\"2 was this run?,\", t, r, \"endofclasssession\", \"newDate\")\n\n    //     const currentdiff = ((limitreached - t) / 60000);\n\n    //     if (dest === \"Bathroom\") {\n    //         await updateDoc(doc(firebase, \"passes\", idselected2), {\n    //             returned: t,\n    //             timereturned: r.toLocaleTimeString([], { hour12: true }),\n    //             returnedbeforetimelimit: ontime,\n    //             differenceoverorunderinminutes: currentdiff,\n\n    //         }).catch((error) => {\n    //             console.log(error); alert(error);\n    //         }),\n\n\n    //             await updateDoc(doc(firebase, \"users\", studentid), {\n    //                 passid: \"\",\n    //                 status: \"\",\n\n    //             }).catch((error) => {\n    //                 console.log(error); alert(error);\n    //             }),\n\n    //             await updateDoc(doc(firebase, \"classesbeingtaught\", classid), {\n    //                 inusebathroompass: howmany - 1,\n    //             }).catch((error) => {\n    //                 console.log(error); alert(error);\n\n    //             }).then(async () => {\n    //                 console.log(\"comppleted\")\n    //             })\n    //     } else {\n\n    //         await updateDoc(doc(firebase, \"passes\", idselected2), {\n    //             returned: t,\n    //             timereturned: r.toLocaleTimeString([], { hour12: true }),\n    //             returnedbeforetimelimit: ontime,\n    //             differenceoverorunderinminutes: currentdiff,\n\n    //         }).catch((error) => {\n    //             console.log(error); alert(error);\n    //         }),\n\n\n    //             await updateDoc(doc(firebase, \"users\", studentid), {\n    //                 passid: \"\",\n    //                 status: \"\",\n\n    //             }).catch((error) => {\n    //                 console.log(error); alert(error);\n    //             }).then(async () => {\n    //                 console.log(\"comppleted\")\n    //             })\n    //     }\n    //     getlocationsqrcodes();\n    // }\n\n\n    async function Sendonpass() {\n        await updateDoc(doc(firebase, \"classesbeingtaught\", adminclass), {\n            removescanneraddbutton: true\n        }).catch((error) => {\n            console.log(error); alert(error);\n\n        }).then(async (check) => {\n            setHelpgiven(true);\n        }).catch((error) => {\n            console.log(error); alert(error);\n        });\n    }\n\n\n\n\n    // useEffect(() => {\n    //     if (typeof userdata != \"undefined\") {\n    //        setUserdatabefore();\n    //     }\n    // }, [userdata]);\n\n\n    return (\n        <SafeAreaView style={styles.largercontainer}>\n            <View style={styles.container1}>\n                <View><TouchableOpacity><Text style={styles.error}>Passes/Tardies:{'\\n'}{coursename} </Text></TouchableOpacity></View>\n            </View>\n\n            <View style={styles.container2}>\n\n                <Passes userdata={userdata} id={id} setSelectedclass={setSelectedclass} selectedclass={selectedclass} idselected={idselected2} setTest={setTest} test={test}  />\n\n            </View>\n            <ScrollView>\n                <View style={styles.section3}>\n\n                    <View><ActivityIndicator\n                        size=\"large\"\n                        color=\"#FFF\"\n                        animating={showspinner}\n                        style={{\n                            position: 'absolute',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            left: 0,\n                            right: 0,\n                            top: 0,\n                            bottom: 0,\n                        }} /></View>\n\n\n                    {idselected2 ? <Text style={styles.paragraph2} onPress={(e) => Sendonpass()} >Confirm Pass</Text> : <Text style={styles.paragraph2}>    </Text>}\n\n                    {idselected2 ? <Text style={styles.paragraph2} onPress={(e) => createTwoButtonAlert()} >Delete Pass/Tardy </Text> : <Text style={styles.paragraph2}>    </Text>}\n\n                    <Text style={styles.paragraph2}>___________________ {'\\n'}</Text>\n\n                    <Text style={styles.paragraph2} onPress={() => navigation.navigate(\"Mainmenuadmin\", {\n                        idofcurrentclass: idofcurrentclass, currentsessionid: currentsessionid, sessionending: sessionending, endlastclass: endlastclass, userinformation: userinformation, school: school, state: state, town: town, role: role, bathroompasslimit: bathroompasslimit, ifnegativeplusminus: ifnegativeplusminus, nonbathroompasslimit: nonbathroompasslimit, drinkpasslimit: drinkpasslimit, exclusivephonepassmaxstudents: exclusivephonepassmaxstudents, exclusivephonepasstimelmit: exclusivephonepasstimelmit, lengthofclass: lengthofclass, classiscurrent: classiscurrent, nameofcurrentclass: nameofcurrentclass, starttimeofcurrentclass: starttimeofcurrentclass, classid: classid, coursename: coursename, section: section, location: location, teacherid: teacherid, teacheriscalled: teacheriscalled, teacheriscalled: teacheriscalled,\n                        email: email, starttime: starttime, lengthofclassesforacomputer: lengthofclassesforacomputer, inpenalty: inpenalty, stoptimepenalty: stoptimepenalty, starttimepenalty: starttimepenalty, totaltimepenalty: totaltimepenalty, alreadyused: alreadyused, teacher: teacher, Selectedclassdestination: Selectedclassdestination, youcangetpass: youcangetpass, currentlocation: currentlocation, locationdestination: locationdestination, firstname: firstname, lastname: lastname, ledby: ledby, grouptime: grouptime, drinkofwater: drinkofwater, drinkofwater: drinkofwater, exclusivetime: exclusivetime, donewithworkpass: donewithworkpass, bathroomtime: bathroomtime, nonbathroomtime: nonbathroomtime, bathroompassinuse: bathroompassinuse, totalinlineforbathroom: totalinlineforbathroom, lengthofclasses: lengthofclasses, endlastclasssubstitute: endlastclasssubstitute, thelastid: thelastid, drinkpassduration: drinkpassduration, phonepassduration: phonepassduration, overunder: overunder, bathroompassduration: bathroompassduration, otherpassduration: otherpassduration, maxstudentsphonepass: maxstudentsphonepass, donewithworkphonepass: donewithworkphonepass, consequenceid: consequenceid, maxstudentsbathroom: maxstudentsbathroom,\n                        penaltyminutes: penaltyminutes, adjustments: adjustments, abc: abc, linkedclass: linkedclass\n                    })}  >Return to Main Menu</Text>\n\n\n                </View>\n            </ScrollView>\n        </SafeAreaView>\n    );\n}\n\n\nconst styles = StyleSheet.create({\n\n    container: {\n        backgroundColor: \"#000\",\n        alignItems: \"center\",\n        width: \"100%\",\n\n    },\n    largercontainer: {\n        height: height,\n        backgroundColor: \"#000\",\n\n    },\n    container1: {\n        height: \"16%\",\n        backgroundColor: '#000',\n        width: \"100%\",\n        justifyContent: \"center\",\n\n\n    },\n    error: {\n\n        backgroundColor: '#000',\n        color: \"#FFF\",\n        marginLeft: \"3%\",\n        marginRight: \"3%\",\n        fontSize: 18,\n        fontWeight: 'bold',\n        textAlign: \"center\",\n\n    },\n    container2: {\n        height: \"35%\",\n        backgroundColor: \"#013469\",\n        width: \"100%\",\n\n    },\n    paragraph: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        backgroundColor: '#000000',\n        color: \"#fff\",\n        height: \"100%\",\n        textAlign: \"center\",\n        marginTop: \"10%\",\n    },\n    Newrow: {\n        backgroundColor: '#000000',\n\n        margin: 2,\n        textAlign: \"center\",\n        fontSize: 20,\n        width: \"90%\",\n        borderColor: \"#E43522\",\n        borderWidth: 4,\n        justifyContent: \"center\",\n        color: \"#fff\",\n    },\n    Newrowa: {\n        backgroundColor: '#000000',\n        margin: 4,\n        textAlign: \"center\",\n        fontSize: 20,\n        borderColor: \"#E43522\",\n        borderWidth: 4,\n        justifyContent: \"center\",\n        color: \"#fff\",\n        flex: 1,\n    },\n\n    Newrowb: {\n        backgroundColor: '#000000',\n        margin: 4,\n        textAlign: \"center\",\n        fontSize: 20,\n        borderColor: \"#E43522\",\n        borderWidth: 4,\n        justifyContent: \"center\",\n        color: \"#fff\",\n        flex: .4,\n    },\n\n    paragraph2: {\n\n        fontSize: 18,\n        fontWeight: 'bold',\n        textAlign: \"center\",\n        backgroundColor: '#000000',\n        color: \"#fff\",\n\n        justifyContent: \"center\",\n        marginTop: 30,\n    },\n\n    paragraph4: {\n\n        fontSize: 18,\n        fontWeight: 'bold',\n        textAlign: 'center',\n        backgroundColor: '#000000',\n        color: \"#fff\",\n        justifyContent: \"center\",\n        lineHeight: 30,\n\n    },\n    section3: {\n\n        fontSize: 18,\n        fontWeight: 'bold',\n        textAlign: 'center',\n        backgroundColor: \"#000\",\n        color: \"#fff\",\n        alignContent: \"center\",\n        height: \"49%\",\n\n    },\n\n\n    paragraph6: {\n        color: \"#fff\",\n        fontSize: 17,\n        marginRight: 7\n\n\n    },\n    textContainer: {\n        flexDirection: 'row',\n        height: 50,\n        justifyContent: 'center',\n        marginBottom: 20,\n    },\n    error5: {\n\n        backgroundColor: '#000',\n        color: \"#FFF\",\n        marginLeft: \"3%\",\n        marginRight: \"3%\",\n        fontSize: 17,\n        fontWeight: 'bold',\n        textAlign: \"center\",\n\n    },\n\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}