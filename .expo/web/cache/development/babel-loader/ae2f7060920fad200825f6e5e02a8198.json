{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Phonelessstudents(_ref) {\n  var setCoursename = _ref.setCoursename,\n    userdata = _ref.userdata,\n    deleteToDo = _ref.deleteToDo,\n    id = _ref.id,\n    idselected = _ref.idselected,\n    setSelectedclass = _ref.setSelectedclass,\n    selectedclass = _ref.selectedclass,\n    setClasstrue = _ref.setClasstrue,\n    classtrue = _ref.classtrue;\n  var selectHandler = function selectHandler(value) {\n    if (value.id != idselected) {\n      setSelectedclass(value);\n    } else {\n      setSelectedclass(\"\");\n    }\n  };\n  return _jsx(ScrollView, {\n    children: userdata.map(function (item, i) {\n      return _jsx(View, {\n        children: item.classname === \"You haven't Registered\" ? _jsx(View, {\n          children: _jsx(Pressable, {\n            children: _jsxs(Text, {\n              style: styles.unselected,\n              children: [\"For This Class\", '\\n', \"Your Teacher Has Not Connected\", '\\n', \"Any Specific Rules To This App.\"]\n            })\n          })\n        }) : item.id === idselected ? _jsx(View, {\n          children: _jsx(Pressable, {\n            style: item.id === idselected ? styles.selected : styles.unselected,\n            onPress: function onPress() {\n              return selectHandler(item);\n            },\n            children: _jsxs(Text, {\n              style: styles.unselected,\n              children: [item.code, '\\n', '\\n', \" \", item.description]\n            })\n          })\n        }) : _jsx(View, {\n          children: _jsx(Pressable, {\n            style: item.id === idselected ? styles.selected : styles.unselected,\n            onPress: function onPress() {\n              return selectHandler(item);\n            },\n            children: _jsx(Text, {\n              style: styles.unselected,\n              children: item.code\n            })\n          })\n        })\n      }, i);\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  unselected: {\n    backgroundColor: '#013469',\n    textAlign: \"center\",\n    fontSize: 17,\n    margin: 6,\n    flex: 1,\n    color: \"#ffffff\",\n    borderWidth: 3,\n    borderColor: \"#013469\"\n  },\n  selected: {\n    color: \"#fff\",\n    backgroundColor: \"#013469\",\n    borderWidth: 3,\n    borderColor: \"#E43522\",\n    margin: 6,\n    fontSize: 20,\n    borderRadius: 20,\n    textAlign: \"center\",\n    marginLeft: 25,\n    marginRight: 25,\n    flex: 1\n  },\n  disable: {\n    color: \"#FFF\",\n    textAlign: \"center\",\n    fontSize: 17,\n    marginTop: 10,\n    textDecorationLine: 'underline'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","Phonelessstudents","setCoursename","userdata","deleteToDo","id","idselected","setSelectedclass","selectedclass","setClasstrue","classtrue","selectHandler","value","map","item","i","classname","styles","unselected","selected","code","description","StyleSheet","create","backgroundColor","textAlign","fontSize","margin","flex","color","borderWidth","borderColor","borderRadius","marginLeft","marginRight","disable","marginTop","textDecorationLine"],"sources":["/Users/matt/Desktop/hallpasstesting/Navigation/Components/Mapofrelatedrules/mapofrelatedrules.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ScrollView, View, Text, Pressable, StyleSheet, TouchableOpacity } from 'react-native';\n\n\nexport default function Phonelessstudents({ setCoursename, userdata, deleteToDo, id, idselected, setSelectedclass, selectedclass, setClasstrue, classtrue}) {\n\n\n  const selectHandler = (value) => {\n\n    if (value.id != idselected){\n\n      setSelectedclass(value);\n   \n    }\n    else {\n      setSelectedclass(\"\");\n    }\n  };\n\n  return (\n                    \n<ScrollView>\n\n      {userdata.map((item, i) =>  {\n        return (\n          <View  key={i}>\n           {item.classname === \"You haven't Registered\" ? <View >\n          <Pressable>\n             <Text style = {styles.unselected}>For This Class{'\\n'}Your Teacher Has Not Connected{'\\n'}Any Specific Rules To This App.\n          </Text>\n          </Pressable>\n          </View>: item.id === idselected ? <View >\n          <Pressable\n            style={\n              item.id === idselected ? styles.selected : styles.unselected\n            }\n            onPress={() => selectHandler(item) }>\n            <Text style ={styles.unselected\n            }>{item.code}{'\\n'}{'\\n'} {item.description}</Text>\n            \n          </Pressable>\n          </View>: <View >\n          <Pressable\n            style={\n              item.id === idselected ? styles.selected : styles.unselected\n            }\n            onPress={() => selectHandler(item) }>\n            <Text style ={styles.unselected\n            }>{item.code}</Text>\n          </Pressable>\n          </View>}\n          </View>\n        );\n      })}\n      </ScrollView>\n\n  );\n}\n\n\nconst styles = StyleSheet.create({\n\n  unselected: {\n    backgroundColor: '#013469',\n    textAlign: \"center\",\n    fontSize: 17,\n    margin: 6,\n    flex: 1, \n    color: \"#ffffff\",\n    borderWidth: 3,\n    borderColor: \"#013469\",\n  },\n  selected: {\n    color: \"#fff\",\n    backgroundColor: \"#013469\",\n    borderWidth: 3,\n    borderColor: \"#E43522\",\n    margin: 6,\n    fontSize: 20,\n    borderRadius: 20,\n    textAlign: \"center\",\n    marginLeft: 25,\n    marginRight: 25,\n    flex: 1\n  },\n\n  disable: {\n   \n    color: \"#FFF\",\n    textAlign: \"center\",\n    fontSize: 17,\n    marginTop: 10,\n  \n \n    textDecorationLine: 'underline',\n  \n    },\n\n\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}